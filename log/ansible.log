2023-07-27 18:03:25,084 p=11435 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 18:03:25,106 p=11435 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 18:03:26,101 p=11435 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:03:26,355 p=11435 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:03:26,369 p=11435 u=ansible n=ansible | TASK [install_jenkins : Main task install Jenkins on RedHat] ****************************************************************************************
2023-07-27 18:03:26,385 p=11435 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 18:03:26,393 p=11435 u=ansible n=ansible | included: /home/ansible/labs/jenkins/roles/install_jenkins/tasks/distro/centos.yml for centos1
2023-07-27 18:03:26,397 p=11435 u=ansible n=ansible | TASK [install_jenkins : Download jenkins repo] ******************************************************************************************************
2023-07-27 18:03:27,169 p=11435 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:03:27,172 p=11435 u=ansible n=ansible | TASK [install_jenkins : Import jenkins key] *********************************************************************************************************
2023-07-27 18:03:27,835 p=11435 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:03:27,838 p=11435 u=ansible n=ansible | TASK [install_jenkins : Upgrade yum] ****************************************************************************************************************
2023-07-27 18:03:28,708 p=11435 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:03:28,714 p=11435 u=ansible n=ansible | TASK [install_jenkins : Install java for jenkins dependencies] **************************************************************************************
2023-07-27 18:03:29,447 p=11435 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:03:29,449 p=11435 u=ansible n=ansible | TASK [install_jenkins : Install jenkins] ************************************************************************************************************
2023-07-27 18:03:30,278 p=11435 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:03:30,281 p=11435 u=ansible n=ansible | TASK [install_jenkins : Enable and start jenkins] ***************************************************************************************************
2023-07-27 18:03:30,818 p=11435 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:03:30,822 p=11435 u=ansible n=ansible | TASK [install_jenkins : debug] **********************************************************************************************************************
2023-07-27 18:03:30,836 p=11435 u=ansible n=ansible | ok: [centos1] => {
    "jenkins_service_status.status.ActiveState": "active"
}
2023-07-27 18:03:30,840 p=11435 u=ansible n=ansible | TASK [install_jenkins : Main task install Jenkins on Debian] ****************************************************************************************
2023-07-27 18:03:30,851 p=11435 u=ansible n=ansible | skipping: [centos1]
2023-07-27 18:03:30,862 p=11435 u=ansible n=ansible | included: /home/ansible/labs/jenkins/roles/install_jenkins/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 18:03:30,869 p=11435 u=ansible n=ansible | TASK [install_jenkins : Download and save jenkins repo key] *****************************************************************************************
2023-07-27 18:03:31,277 p=11435 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:03:31,283 p=11435 u=ansible n=ansible | TASK [install_jenkins : Create jenkins-keyring.asc file] ********************************************************************************************
2023-07-27 18:03:31,542 p=11435 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 18:03:31,547 p=11435 u=ansible n=ansible | TASK [install_jenkins : Add deb line to jenkins.list] ***********************************************************************************************
2023-07-27 18:03:31,801 p=11435 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:03:31,808 p=11435 u=ansible n=ansible | TASK [install_jenkins : Upgrade apt] ****************************************************************************************************************
2023-07-27 18:03:34,179 p=11435 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 18:03:34,188 p=11435 u=ansible n=ansible | TASK [install_jenkins : Install java] ***************************************************************************************************************
2023-07-27 18:03:34,866 p=11435 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:03:34,873 p=11435 u=ansible n=ansible | TASK [install_jenkins : Install jenkins] ************************************************************************************************************
2023-07-27 18:03:35,659 p=11435 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:03:35,672 p=11435 u=ansible n=ansible | TASK [install_jenkins : Enable and start jenkins] ***************************************************************************************************
2023-07-27 18:03:36,054 p=11435 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:03:36,064 p=11435 u=ansible n=ansible | TASK [install_jenkins : debug] **********************************************************************************************************************
2023-07-27 18:03:36,084 p=11435 u=ansible n=ansible | ok: [ubuntu1] => {
    "jenkins_service_status.status.ActiveState": "active"
}
2023-07-27 18:03:36,144 p=11435 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 18:03:36,144 p=11435 u=ansible n=ansible | centos1                    : ok=9    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 18:03:36,144 p=11435 u=ansible n=ansible | ubuntu1                    : ok=10   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 18:20:31,796 p=11916 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 18:20:31,819 p=11916 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 18:20:33,252 p=11916 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:20:33,478 p=11916 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:20:33,490 p=11916 u=ansible n=ansible | TASK [install_jenkins : Main task install Jenkins on RedHat] ****************************************************************************************
2023-07-27 18:20:33,502 p=11916 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 18:20:33,508 p=11916 u=ansible n=ansible | included: /home/ansible/labs/roles/install_jenkins/tasks/distro/centos.yml for centos1
2023-07-27 18:20:33,511 p=11916 u=ansible n=ansible | TASK [install_jenkins : Download jenkins repo] ******************************************************************************************************
2023-07-27 18:20:34,315 p=11916 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:20:34,317 p=11916 u=ansible n=ansible | TASK [install_jenkins : Import jenkins key] *********************************************************************************************************
2023-07-27 18:20:34,994 p=11916 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:20:34,997 p=11916 u=ansible n=ansible | TASK [install_jenkins : Upgrade yum] ****************************************************************************************************************
2023-07-27 18:20:40,912 p=11916 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:20:40,915 p=11916 u=ansible n=ansible | TASK [install_jenkins : Install java for jenkins dependencies] **************************************************************************************
2023-07-27 18:20:41,596 p=11916 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:20:41,599 p=11916 u=ansible n=ansible | TASK [install_jenkins : Install jenkins] ************************************************************************************************************
2023-07-27 18:20:42,267 p=11916 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:20:42,270 p=11916 u=ansible n=ansible | TASK [install_jenkins : Enable and start jenkins] ***************************************************************************************************
2023-07-27 18:20:42,756 p=11916 u=ansible n=ansible | ok: [centos1]
2023-07-27 18:20:42,759 p=11916 u=ansible n=ansible | TASK [install_jenkins : debug] **********************************************************************************************************************
2023-07-27 18:20:42,768 p=11916 u=ansible n=ansible | ok: [centos1] => {
    "jenkins_service_status.status.ActiveState": "active"
}
2023-07-27 18:20:42,772 p=11916 u=ansible n=ansible | TASK [install_jenkins : Main task install Jenkins on Debian] ****************************************************************************************
2023-07-27 18:20:42,781 p=11916 u=ansible n=ansible | skipping: [centos1]
2023-07-27 18:20:42,792 p=11916 u=ansible n=ansible | included: /home/ansible/labs/roles/install_jenkins/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 18:20:42,798 p=11916 u=ansible n=ansible | TASK [install_jenkins : Download and save jenkins repo key] *****************************************************************************************
2023-07-27 18:20:43,255 p=11916 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:20:43,261 p=11916 u=ansible n=ansible | TASK [install_jenkins : Create jenkins-keyring.asc file] ********************************************************************************************
2023-07-27 18:20:43,529 p=11916 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 18:20:43,534 p=11916 u=ansible n=ansible | TASK [install_jenkins : Add deb line to jenkins.list] ***********************************************************************************************
2023-07-27 18:20:43,781 p=11916 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:20:43,787 p=11916 u=ansible n=ansible | TASK [install_jenkins : Upgrade apt] ****************************************************************************************************************
2023-07-27 18:20:46,549 p=11916 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 18:20:46,555 p=11916 u=ansible n=ansible | TASK [install_jenkins : Install java] ***************************************************************************************************************
2023-07-27 18:20:47,136 p=11916 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:20:47,142 p=11916 u=ansible n=ansible | TASK [install_jenkins : Install jenkins] ************************************************************************************************************
2023-07-27 18:20:47,723 p=11916 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:20:47,729 p=11916 u=ansible n=ansible | TASK [install_jenkins : Enable and start jenkins] ***************************************************************************************************
2023-07-27 18:20:47,988 p=11916 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 18:20:47,994 p=11916 u=ansible n=ansible | TASK [install_jenkins : debug] **********************************************************************************************************************
2023-07-27 18:20:48,005 p=11916 u=ansible n=ansible | ok: [ubuntu1] => {
    "jenkins_service_status.status.ActiveState": "active"
}
2023-07-27 18:20:48,030 p=11916 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 18:20:48,030 p=11916 u=ansible n=ansible | centos1                    : ok=9    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 18:20:48,030 p=11916 u=ansible n=ansible | ubuntu1                    : ok=10   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 18:59:17,751 p=12392 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: install_jenkins_group

2023-07-27 18:59:17,751 p=12392 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 18:59:17,752 p=12392 u=ansible n=ansible | skipping: no hosts matched
2023-07-27 18:59:17,752 p=12392 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 18:59:49,380 p=12431 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 18:59:49,406 p=12431 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 18:59:49,514 p=12431 u=ansible n=ansible | fatal: [centos1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ansible@192.168.64.12: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).", "unreachable": true}
2023-07-27 18:59:49,517 p=12431 u=ansible n=ansible | fatal: [ubuntu1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ansible@192.168.64.14: Permission denied (publickey,password).", "unreachable": true}
2023-07-27 18:59:49,518 p=12431 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 18:59:49,518 p=12431 u=ansible n=ansible | centos1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 18:59:49,518 p=12431 u=ansible n=ansible | ubuntu1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:01:19,837 p=12486 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:01:19,858 p=12486 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:01:19,959 p=12486 u=ansible n=ansible | fatal: [ubuntu1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ansible@192.168.64.14: Permission denied (publickey,password).", "unreachable": true}
2023-07-27 19:01:19,961 p=12486 u=ansible n=ansible | fatal: [centos1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ansible@192.168.64.12: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).", "unreachable": true}
2023-07-27 19:01:19,962 p=12486 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:01:19,962 p=12486 u=ansible n=ansible | centos1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:01:19,962 p=12486 u=ansible n=ansible | ubuntu1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:01:27,200 p=12510 u=ansible n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-07-27 19:01:27,227 p=12510 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: jenkins_install_group

2023-07-27 19:01:27,227 p=12510 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:01:27,228 p=12510 u=ansible n=ansible | skipping: no hosts matched
2023-07-27 19:01:27,228 p=12510 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:01:44,940 p=12551 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:01:44,962 p=12551 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:01:45,060 p=12551 u=ansible n=ansible | fatal: [ubuntu1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ansible@192.168.64.14: Permission denied (publickey,password).", "unreachable": true}
2023-07-27 19:01:45,103 p=12551 u=ansible n=ansible | fatal: [centos1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ansible@192.168.64.12: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).", "unreachable": true}
2023-07-27 19:01:45,104 p=12551 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:01:45,104 p=12551 u=ansible n=ansible | centos1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:01:45,104 p=12551 u=ansible n=ansible | ubuntu1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:02:48,381 p=12589 u=ansible n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-07-27 19:02:48,406 p=12589 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: jenkins_install_group

2023-07-27 19:02:48,406 p=12589 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:02:48,406 p=12589 u=ansible n=ansible | skipping: no hosts matched
2023-07-27 19:02:48,406 p=12589 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:03:19,123 p=12665 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:03:19,145 p=12665 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:03:19,237 p=12665 u=ansible n=ansible | fatal: [ubuntu1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ansible@192.168.64.14: Permission denied (publickey,password).", "unreachable": true}
2023-07-27 19:03:19,291 p=12665 u=ansible n=ansible | fatal: [centos1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ansible@192.168.64.12: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).", "unreachable": true}
2023-07-27 19:03:19,292 p=12665 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:03:19,293 p=12665 u=ansible n=ansible | centos1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:03:19,293 p=12665 u=ansible n=ansible | ubuntu1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:15:41,280 p=12748 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:15:41,303 p=12748 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:15:41,440 p=12748 u=ansible n=ansible | fatal: [jenkins_install_group]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname jenkins_install_group: Name or service not known", "unreachable": true}
2023-07-27 19:15:41,441 p=12748 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:15:41,441 p=12748 u=ansible n=ansible | jenkins_install_group      : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:16:41,485 p=12783 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:16:41,508 p=12783 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:16:41,522 p=12783 u=ansible n=ansible | fatal: [jenkins_install_group]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname jenkins_install_group: Name or service not known", "unreachable": true}
2023-07-27 19:16:41,523 p=12783 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:16:41,523 p=12783 u=ansible n=ansible | jenkins_install_group      : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:18:38,605 p=12829 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:18:38,627 p=12829 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:18:38,652 p=12829 u=ansible n=ansible | fatal: [jenkins_install_group]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname jenkins_install_group: Name or service not known", "unreachable": true}
2023-07-27 19:18:38,653 p=12829 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:18:38,653 p=12829 u=ansible n=ansible | jenkins_install_group      : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:19:07,142 p=12869 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:19:07,163 p=12869 u=ansible n=ansible | [WARNING]: While constructing a mapping from /home/ansible/labs/host_vars/jenkins_install_group.yml, line 2, column 1, found a duplicate dict key
(ansible_host). Using last defined value only.

2023-07-27 19:19:07,163 p=12869 u=ansible n=ansible | [WARNING]: While constructing a mapping from /home/ansible/labs/host_vars/jenkins_install_group.yml, line 2, column 1, found a duplicate dict key
(ansible_user). Using last defined value only.

2023-07-27 19:19:07,163 p=12869 u=ansible n=ansible | [WARNING]: While constructing a mapping from /home/ansible/labs/host_vars/jenkins_install_group.yml, line 2, column 1, found a duplicate dict key
(ansible_ssh_pass). Using last defined value only.

2023-07-27 19:19:07,165 p=12869 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:19:09,594 p=12869 u=ansible n=ansible | ok: [jenkins_install_group]
2023-07-27 19:19:09,603 p=12869 u=ansible n=ansible | TASK [install_jenkins : Main task install Jenkins on RedHat] ****************************************************************************************
2023-07-27 19:19:09,610 p=12869 u=ansible n=ansible | skipping: [jenkins_install_group]
2023-07-27 19:19:09,614 p=12869 u=ansible n=ansible | TASK [install_jenkins : Main task install Jenkins on Debian] ****************************************************************************************
2023-07-27 19:19:09,630 p=12869 u=ansible n=ansible | included: /home/ansible/labs/roles/install_jenkins/tasks/distro/ubuntu.yml for jenkins_install_group
2023-07-27 19:19:09,634 p=12869 u=ansible n=ansible | TASK [install_jenkins : Download and save jenkins repo key] *****************************************************************************************
2023-07-27 19:19:11,264 p=12869 u=ansible n=ansible | ok: [jenkins_install_group]
2023-07-27 19:19:11,268 p=12869 u=ansible n=ansible | TASK [install_jenkins : Create jenkins-keyring.asc file] ********************************************************************************************
2023-07-27 19:19:11,520 p=12869 u=ansible n=ansible | changed: [jenkins_install_group]
2023-07-27 19:19:11,523 p=12869 u=ansible n=ansible | TASK [install_jenkins : Add deb line to jenkins.list] ***********************************************************************************************
2023-07-27 19:19:11,771 p=12869 u=ansible n=ansible | ok: [jenkins_install_group]
2023-07-27 19:19:11,774 p=12869 u=ansible n=ansible | TASK [install_jenkins : Upgrade apt] ****************************************************************************************************************
2023-07-27 19:19:19,024 p=12869 u=ansible n=ansible | changed: [jenkins_install_group]
2023-07-27 19:19:19,027 p=12869 u=ansible n=ansible | TASK [install_jenkins : Install java] ***************************************************************************************************************
2023-07-27 19:19:19,594 p=12869 u=ansible n=ansible | ok: [jenkins_install_group]
2023-07-27 19:19:19,597 p=12869 u=ansible n=ansible | TASK [install_jenkins : Install jenkins] ************************************************************************************************************
2023-07-27 19:19:20,160 p=12869 u=ansible n=ansible | ok: [jenkins_install_group]
2023-07-27 19:19:20,164 p=12869 u=ansible n=ansible | TASK [install_jenkins : Enable and start jenkins] ***************************************************************************************************
2023-07-27 19:19:20,559 p=12869 u=ansible n=ansible | ok: [jenkins_install_group]
2023-07-27 19:19:20,563 p=12869 u=ansible n=ansible | TASK [install_jenkins : debug] **********************************************************************************************************************
2023-07-27 19:19:20,573 p=12869 u=ansible n=ansible | ok: [jenkins_install_group] => {
    "jenkins_service_status.status.ActiveState": "active"
}
2023-07-27 19:19:20,602 p=12869 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:19:20,603 p=12869 u=ansible n=ansible | jenkins_install_group      : ok=10   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 19:20:18,933 p=13103 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:20:18,957 p=13103 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:20:18,970 p=13103 u=ansible n=ansible | fatal: [jenkins_install_group]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: Could not resolve hostname ['192.168.64.12', '192.168.64.14']: Name or service not known", "unreachable": true}
2023-07-27 19:20:18,971 p=13103 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:20:18,971 p=13103 u=ansible n=ansible | jenkins_install_group      : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 19:20:47,490 p=13143 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: jenkins_install_group

2023-07-27 19:20:47,490 p=13143 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:20:47,490 p=13143 u=ansible n=ansible | skipping: no hosts matched
2023-07-27 19:20:47,490 p=13143 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:21:06,175 p=13176 u=ansible n=ansible | PLAY [Jenkins playbook] *****************************************************************************************************************************
2023-07-27 19:21:06,203 p=13176 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:21:07,577 p=13176 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:21:07,738 p=13176 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:21:07,750 p=13176 u=ansible n=ansible | TASK [install_jenkins : Main task install Jenkins on RedHat] ****************************************************************************************
2023-07-27 19:21:07,763 p=13176 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 19:21:07,768 p=13176 u=ansible n=ansible | included: /home/ansible/labs/roles/install_jenkins/tasks/distro/centos.yml for centos1
2023-07-27 19:21:07,771 p=13176 u=ansible n=ansible | TASK [install_jenkins : Download jenkins repo] ******************************************************************************************************
2023-07-27 19:21:09,534 p=13176 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:21:09,538 p=13176 u=ansible n=ansible | TASK [install_jenkins : Import jenkins key] *********************************************************************************************************
2023-07-27 19:21:11,212 p=13176 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:21:11,215 p=13176 u=ansible n=ansible | TASK [install_jenkins : Upgrade yum] ****************************************************************************************************************
2023-07-27 19:21:20,216 p=13176 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:21:20,219 p=13176 u=ansible n=ansible | TASK [install_jenkins : Install java for jenkins dependencies] **************************************************************************************
2023-07-27 19:21:20,879 p=13176 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:21:20,882 p=13176 u=ansible n=ansible | TASK [install_jenkins : Install jenkins] ************************************************************************************************************
2023-07-27 19:21:21,546 p=13176 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:21:21,549 p=13176 u=ansible n=ansible | TASK [install_jenkins : Enable and start jenkins] ***************************************************************************************************
2023-07-27 19:21:22,034 p=13176 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:21:22,038 p=13176 u=ansible n=ansible | TASK [install_jenkins : debug] **********************************************************************************************************************
2023-07-27 19:21:22,047 p=13176 u=ansible n=ansible | ok: [centos1] => {
    "jenkins_service_status.status.ActiveState": "active"
}
2023-07-27 19:21:22,051 p=13176 u=ansible n=ansible | TASK [install_jenkins : Main task install Jenkins on Debian] ****************************************************************************************
2023-07-27 19:21:22,062 p=13176 u=ansible n=ansible | skipping: [centos1]
2023-07-27 19:21:22,073 p=13176 u=ansible n=ansible | included: /home/ansible/labs/roles/install_jenkins/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 19:21:22,079 p=13176 u=ansible n=ansible | TASK [install_jenkins : Download and save jenkins repo key] *****************************************************************************************
2023-07-27 19:21:22,461 p=13176 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:21:22,467 p=13176 u=ansible n=ansible | TASK [install_jenkins : Create jenkins-keyring.asc file] ********************************************************************************************
2023-07-27 19:21:22,716 p=13176 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 19:21:22,721 p=13176 u=ansible n=ansible | TASK [install_jenkins : Add deb line to jenkins.list] ***********************************************************************************************
2023-07-27 19:21:22,998 p=13176 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:21:23,004 p=13176 u=ansible n=ansible | TASK [install_jenkins : Upgrade apt] ****************************************************************************************************************
2023-07-27 19:21:25,877 p=13176 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 19:21:25,883 p=13176 u=ansible n=ansible | TASK [install_jenkins : Install java] ***************************************************************************************************************
2023-07-27 19:21:26,452 p=13176 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:21:26,457 p=13176 u=ansible n=ansible | TASK [install_jenkins : Install jenkins] ************************************************************************************************************
2023-07-27 19:21:27,065 p=13176 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:21:27,072 p=13176 u=ansible n=ansible | TASK [install_jenkins : Enable and start jenkins] ***************************************************************************************************
2023-07-27 19:21:27,406 p=13176 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:21:27,412 p=13176 u=ansible n=ansible | TASK [install_jenkins : debug] **********************************************************************************************************************
2023-07-27 19:21:27,431 p=13176 u=ansible n=ansible | ok: [ubuntu1] => {
    "jenkins_service_status.status.ActiveState": "active"
}
2023-07-27 19:21:27,460 p=13176 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:21:27,461 p=13176 u=ansible n=ansible | centos1                    : ok=9    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 19:21:27,461 p=13176 u=ansible n=ansible | ubuntu1                    : ok=10   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 19:39:39,108 p=13654 u=ansible n=ansible | - Role install_docker was created successfully
2023-07-27 19:42:44,049 p=13731 u=ansible n=ansible | ERROR! the playbook: playbook.yml could not be found
2023-07-27 19:42:51,478 p=13759 u=ansible n=ansible | [WARNING]:  * Failed to parse /home/ansible/labs/inventory with yaml plugin: We were unable to read either as JSON nor YAML, these are the errors we
got from each: JSON: Expecting value: line 1 column 1 (char 0)  Syntax Error while loading YAML.   did not find expected <document start>  The error
appears to be in '/home/ansible/labs/inventory': line 6, column 1, but may be elsewhere in the file depending on the exact syntax problem.  The
offending line appears to be:  #Ubuntu ubuntu1 ansible_host=192.168.64.14 ansible_user=root ansible_ssh_pass=123456 ^ here

2023-07-27 19:42:51,478 p=13759 u=ansible n=ansible | [WARNING]:  * Failed to parse /home/ansible/labs/inventory with ini plugin: /home/ansible/labs/inventory:8: Invalid section entry:
'[jenkins_install_group, docker_install_group]'. Please make sure that there are no spaces in the section entry, and that there are no other invalid
characters

2023-07-27 19:42:51,478 p=13759 u=ansible n=ansible | [WARNING]: Unable to parse /home/ansible/labs/inventory as an inventory source

2023-07-27 19:42:51,478 p=13759 u=ansible n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-07-27 19:42:51,507 p=13759 u=ansible n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: docker_install_group

2023-07-27 19:42:51,508 p=13759 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 19:42:51,508 p=13759 u=ansible n=ansible | skipping: no hosts matched
2023-07-27 19:42:51,508 p=13759 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:43:32,176 p=13795 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 19:43:32,176 p=13795 u=ansible n=ansible | skipping: no hosts matched
2023-07-27 19:43:32,176 p=13795 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:43:55,104 p=13828 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 19:43:55,126 p=13828 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:43:56,643 p=13828 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:43:56,766 p=13828 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:43:56,779 p=13828 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 19:43:56,794 p=13828 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 19:43:56,798 p=13828 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2023-07-27 19:43:56,802 p=13828 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 19:43:56,816 p=13828 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"reason": "included task files must contain a list of tasks"}
2023-07-27 19:43:56,817 p=13828 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:43:56,818 p=13828 u=ansible n=ansible | centos1                    : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-27 19:43:56,818 p=13828 u=ansible n=ansible | ubuntu1                    : ok=1    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 19:44:13,764 p=13929 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 19:44:13,785 p=13929 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:44:14,983 p=13929 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:44:15,224 p=13929 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:44:15,236 p=13929 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 19:44:15,251 p=13929 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 19:44:15,255 p=13929 u=ansible n=ansible | ERROR! this task 'debug' has extra params, which is only allowed in the following modules: ansible.legacy.script, add_host, ansible.builtin.group_by, import_tasks, ansible.legacy.raw, ansible.legacy.win_shell, ansible.legacy.include, ansible.legacy.meta, include_tasks, ansible.builtin.import_role, ansible.legacy.command, ansible.legacy.win_command, ansible.builtin.include, ansible.legacy.set_fact, include_role, group_by, command, import_role, ansible.builtin.meta, ansible.legacy.include_vars, ansible.builtin.import_tasks, ansible.windows.win_shell, ansible.legacy.import_role, script, win_shell, ansible.builtin.add_host, ansible.builtin.include_vars, raw, ansible.legacy.shell, ansible.windows.win_command, ansible.builtin.script, ansible.legacy.group_by, ansible.builtin.include_role, win_command, set_fact, ansible.builtin.include_tasks, ansible.legacy.add_host, meta, shell, ansible.builtin.win_shell, ansible.builtin.shell, ansible.legacy.include_role, include, ansible.legacy.import_tasks, ansible.builtin.raw, ansible.legacy.include_tasks, ansible.builtin.set_fact, include_vars, ansible.builtin.win_command, ansible.builtin.command

The error appears to be in '/home/ansible/labs/roles/install_docker/tasks/distro/centos.yml': line 1, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- debug: Ubuntu install docker and print !
  ^ here

2023-07-27 19:44:38,049 p=14020 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 19:44:38,071 p=14020 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:44:39,087 p=14020 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:44:39,188 p=14020 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:44:39,200 p=14020 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 19:44:39,213 p=14020 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 19:44:39,216 p=14020 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 19:44:39,220 p=14020 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 19:44:39,228 p=14020 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: NoneType: None
2023-07-27 19:44:39,228 p=14020 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"msg": "Unsupported parameters for (debug) module: vars. Supported parameters include: msg, var, verbosity."}
2023-07-27 19:44:39,231 p=14020 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 19:44:39,244 p=14020 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 19:44:39,247 p=14020 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 19:44:39,259 p=14020 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: NoneType: None
2023-07-27 19:44:39,259 p=14020 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"msg": "Unsupported parameters for (debug) module: vars. Supported parameters include: msg, var, verbosity."}
2023-07-27 19:44:39,260 p=14020 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:44:39,260 p=14020 u=ansible n=ansible | centos1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-27 19:44:39,260 p=14020 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 19:45:01,913 p=14118 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 19:45:01,934 p=14118 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:45:02,922 p=14118 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:45:03,145 p=14118 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:45:03,160 p=14118 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 19:45:03,175 p=14118 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 19:45:03,179 p=14118 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 19:45:03,183 p=14118 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 19:45:03,197 p=14118 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"msg": "template error while templating string: expected token 'end of print statement', got 'install'. String: {{Ubuntu install docker and print !}}. expected token 'end of print statement', got 'install'"}
2023-07-27 19:45:03,201 p=14118 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 19:45:03,214 p=14118 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 19:45:03,219 p=14118 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 19:45:03,233 p=14118 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"msg": "template error while templating string: expected token 'end of print statement', got 'install'. String: {{Ubuntu install docker and print !}}. expected token 'end of print statement', got 'install'"}
2023-07-27 19:45:03,235 p=14118 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:45:03,235 p=14118 u=ansible n=ansible | centos1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-27 19:45:03,235 p=14118 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 19:46:09,110 p=14216 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 19:46:09,132 p=14216 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 19:46:10,419 p=14216 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 19:46:10,599 p=14216 u=ansible n=ansible | ok: [centos1]
2023-07-27 19:46:10,611 p=14216 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 19:46:10,624 p=14216 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 19:46:10,628 p=14216 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 19:46:10,631 p=14216 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 19:46:10,641 p=14216 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 19:46:10,644 p=14216 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 19:46:10,654 p=14216 u=ansible n=ansible | skipping: [centos1]
2023-07-27 19:46:10,662 p=14216 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 19:46:10,668 p=14216 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 19:46:10,677 p=14216 u=ansible n=ansible | ok: [ubuntu1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 19:46:10,703 p=14216 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 19:46:10,703 p=14216 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 19:46:10,703 p=14216 u=ansible n=ansible | ubuntu1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 21:49:49,715 p=2224 u=ansible n=ansible | ERROR! the playbook: playbook.yml could not be found
2023-07-27 21:49:56,057 p=2268 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 21:49:56,095 p=2268 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 21:49:57,486 p=2268 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:49:57,682 p=2268 u=ansible n=ansible | ok: [centos1]
2023-07-27 21:49:57,694 p=2268 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 21:49:57,706 p=2268 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 21:49:57,710 p=2268 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 21:49:57,714 p=2268 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 21:49:57,722 p=2268 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 21:49:57,724 p=2268 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 21:49:57,733 p=2268 u=ansible n=ansible | skipping: [centos1]
2023-07-27 21:49:57,743 p=2268 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  could not find expected ':'

The error appears to be in '/home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml': line 34, column 10, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable"
    state: present
         ^ here

2023-07-27 21:50:38,836 p=2399 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 21:50:38,856 p=2399 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 21:50:39,801 p=2399 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:50:40,001 p=2399 u=ansible n=ansible | ok: [centos1]
2023-07-27 21:50:40,011 p=2399 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 21:50:40,022 p=2399 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 21:50:40,026 p=2399 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 21:50:40,029 p=2399 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 21:50:40,037 p=2399 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 21:50:40,039 p=2399 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 21:50:40,049 p=2399 u=ansible n=ansible | skipping: [centos1]
2023-07-27 21:50:40,060 p=2399 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 21:50:40,065 p=2399 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 21:50:45,816 p=2399 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:50:45,822 p=2399 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 21:50:46,361 p=2399 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:50:46,366 p=2399 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 21:50:46,587 p=2399 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:50:46,592 p=2399 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 21:50:46,910 p=2399 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:50:46,915 p=2399 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 21:50:47,073 p=2399 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:50:47,089 p=2399 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 21:50:47,290 p=2399 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:50:47,295 p=2399 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 21:50:49,318 p=2399 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:50:49,323 p=2399 u=ansible n=ansible | TASK [install_docker : Install docker latest version] ***********************************************************************************************
2023-07-27 21:50:49,691 p=2399 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 21:50:49,702 p=2399 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 21:50:49,702 p=2399 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 21:50:49,702 p=2399 u=ansible n=ansible | ubuntu1                    : ok=9    changed=4    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 21:51:23,630 p=2669 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 21:51:23,650 p=2669 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 21:51:24,554 p=2669 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:24,816 p=2669 u=ansible n=ansible | ok: [centos1]
2023-07-27 21:51:24,829 p=2669 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 21:51:24,843 p=2669 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 21:51:24,848 p=2669 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 21:51:24,851 p=2669 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 21:51:24,860 p=2669 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 21:51:24,863 p=2669 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 21:51:24,872 p=2669 u=ansible n=ansible | skipping: [centos1]
2023-07-27 21:51:24,884 p=2669 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 21:51:24,889 p=2669 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 21:51:26,960 p=2669 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:51:26,964 p=2669 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 21:51:27,468 p=2669 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:27,473 p=2669 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 21:51:27,692 p=2669 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:27,697 p=2669 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 21:51:27,997 p=2669 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:28,001 p=2669 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 21:51:28,161 p=2669 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:28,166 p=2669 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 21:51:28,379 p=2669 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:28,383 p=2669 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 21:51:30,326 p=2669 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:51:30,331 p=2669 u=ansible n=ansible | TASK [install_docker : Install docker latest version] ***********************************************************************************************
2023-07-27 21:51:30,699 p=2669 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 21:51:30,710 p=2669 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 21:51:30,710 p=2669 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 21:51:30,710 p=2669 u=ansible n=ansible | ubuntu1                    : ok=9    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 21:51:44,840 p=2926 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 21:51:44,860 p=2926 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 21:51:45,766 p=2926 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:46,014 p=2926 u=ansible n=ansible | ok: [centos1]
2023-07-27 21:51:46,027 p=2926 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 21:51:46,041 p=2926 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 21:51:46,046 p=2926 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 21:51:46,050 p=2926 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 21:51:46,059 p=2926 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 21:51:46,063 p=2926 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 21:51:46,074 p=2926 u=ansible n=ansible | skipping: [centos1]
2023-07-27 21:51:46,089 p=2926 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 21:51:46,095 p=2926 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 21:51:48,206 p=2926 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:51:48,213 p=2926 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 21:51:48,788 p=2926 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:48,794 p=2926 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 21:51:49,031 p=2926 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:49,036 p=2926 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 21:51:49,332 p=2926 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:49,337 p=2926 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 21:51:49,494 p=2926 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:49,508 p=2926 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 21:51:49,708 p=2926 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:51:49,713 p=2926 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 21:51:51,854 p=2926 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:51:51,859 p=2926 u=ansible n=ansible | TASK [install_docker : Install docker latest version] ***********************************************************************************************
2023-07-27 21:51:52,230 p=2926 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 21:51:52,240 p=2926 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 21:51:52,241 p=2926 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 21:51:52,241 p=2926 u=ansible n=ansible | ubuntu1                    : ok=9    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 21:58:09,916 p=3204 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 21:58:09,936 p=3204 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 21:58:11,217 p=3204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:58:11,373 p=3204 u=ansible n=ansible | ok: [centos1]
2023-07-27 21:58:11,384 p=3204 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 21:58:11,395 p=3204 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 21:58:11,398 p=3204 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 21:58:11,402 p=3204 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 21:58:11,411 p=3204 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 21:58:11,414 p=3204 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 21:58:11,423 p=3204 u=ansible n=ansible | skipping: [centos1]
2023-07-27 21:58:11,433 p=3204 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 21:58:11,438 p=3204 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 21:58:13,515 p=3204 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:58:13,520 p=3204 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 21:58:14,031 p=3204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:58:14,036 p=3204 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 21:58:14,257 p=3204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:58:14,262 p=3204 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 21:58:14,782 p=3204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:58:14,787 p=3204 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 21:58:14,967 p=3204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:58:14,972 p=3204 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 21:58:15,184 p=3204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:58:15,189 p=3204 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 21:58:17,175 p=3204 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:58:17,180 p=3204 u=ansible n=ansible | TASK [install_docker : Install docker latest version] ***********************************************************************************************
2023-07-27 21:58:17,547 p=3204 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce-cli' is available"}
2023-07-27 21:58:17,558 p=3204 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 21:58:17,558 p=3204 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 21:58:17,558 p=3204 u=ansible n=ansible | ubuntu1                    : ok=9    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 21:59:11,204 p=3462 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 21:59:11,223 p=3462 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 21:59:11,238 p=3462 u=ansible n=ansible | fatal: [centos1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ", "unreachable": true}
2023-07-27 21:59:12,130 p=3462 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:59:12,138 p=3462 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 21:59:12,145 p=3462 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 21:59:12,148 p=3462 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 21:59:12,162 p=3462 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 21:59:12,166 p=3462 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 21:59:14,252 p=3462 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:59:14,255 p=3462 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 21:59:14,794 p=3462 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:59:14,797 p=3462 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 21:59:15,012 p=3462 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:59:15,016 p=3462 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 21:59:15,314 p=3462 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:59:15,317 p=3462 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 21:59:15,474 p=3462 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 21:59:15,477 p=3462 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 21:59:15,703 p=3462 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:59:15,707 p=3462 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 21:59:17,914 p=3462 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 21:59:17,917 p=3462 u=ansible n=ansible | TASK [install_docker : Install docker latest version] ***********************************************************************************************
2023-07-27 21:59:18,305 p=3462 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 21:59:18,305 p=3462 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 21:59:18,305 p=3462 u=ansible n=ansible | centos1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 21:59:18,305 p=3462 u=ansible n=ansible | ubuntu1                    : ok=9    changed=3    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:00:24,234 p=3695 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:00:24,254 p=3695 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:00:25,449 p=3695 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:25,674 p=3695 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:00:25,685 p=3695 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:00:25,696 p=3695 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:00:25,700 p=3695 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:00:25,703 p=3695 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:00:25,710 p=3695 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:00:25,713 p=3695 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:00:25,722 p=3695 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:00:25,732 p=3695 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:00:25,738 p=3695 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:00:28,058 p=3695 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:00:28,063 p=3695 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 22:00:28,579 p=3695 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:28,584 p=3695 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 22:00:28,802 p=3695 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:28,808 p=3695 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 22:00:29,262 p=3695 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:29,267 p=3695 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 22:00:29,422 p=3695 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:29,428 p=3695 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 22:00:29,642 p=3695 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:29,647 p=3695 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 22:00:31,689 p=3695 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:00:31,694 p=3695 u=ansible n=ansible | TASK [install_docker : Install docker latest version] ***********************************************************************************************
2023-07-27 22:00:32,062 p=3695 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 22:00:32,073 p=3695 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:00:32,073 p=3695 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:00:32,073 p=3695 u=ansible n=ansible | ubuntu1                    : ok=9    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:00:47,774 p=3947 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:00:47,794 p=3947 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:00:48,673 p=3947 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:48,862 p=3947 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:00:48,873 p=3947 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:00:48,885 p=3947 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:00:48,889 p=3947 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:00:48,892 p=3947 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:00:48,900 p=3947 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:00:48,903 p=3947 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:00:48,911 p=3947 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:00:48,923 p=3947 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:00:48,928 p=3947 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:00:50,977 p=3947 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:00:50,983 p=3947 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 22:00:51,485 p=3947 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:51,490 p=3947 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 22:00:51,707 p=3947 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:51,712 p=3947 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 22:00:52,000 p=3947 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:52,017 p=3947 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 22:00:52,174 p=3947 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:52,179 p=3947 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 22:00:52,380 p=3947 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:00:52,385 p=3947 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 22:00:54,364 p=3947 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:00:54,369 p=3947 u=ansible n=ansible | TASK [install_docker : Install docker latest version] ***********************************************************************************************
2023-07-27 22:00:54,739 p=3947 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 22:00:54,749 p=3947 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:00:54,749 p=3947 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:00:54,750 p=3947 u=ansible n=ansible | ubuntu1                    : ok=9    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:01:12,692 p=4203 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:01:12,711 p=4203 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:01:13,643 p=4203 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:01:13,856 p=4203 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:01:13,867 p=4203 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:01:13,879 p=4203 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:01:13,883 p=4203 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:01:13,886 p=4203 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:01:13,894 p=4203 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:01:13,897 p=4203 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:01:13,905 p=4203 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:01:13,916 p=4203 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:01:13,921 p=4203 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:01:16,179 p=4203 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:01:16,184 p=4203 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 22:01:16,741 p=4203 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:01:16,747 p=4203 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 22:01:16,984 p=4203 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:01:16,990 p=4203 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 22:01:17,337 p=4203 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:01:17,353 p=4203 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 22:01:17,519 p=4203 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:01:17,524 p=4203 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 22:01:17,749 p=4203 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:01:17,755 p=4203 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 22:01:19,794 p=4203 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:01:19,799 p=4203 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-27 22:01:20,166 p=4203 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 22:01:20,176 p=4203 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:01:20,176 p=4203 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:01:20,177 p=4203 u=ansible n=ansible | ubuntu1                    : ok=9    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:04:57,549 p=4452 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:04:57,569 p=4452 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:04:58,845 p=4452 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:04:59,011 p=4452 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:04:59,022 p=4452 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:04:59,035 p=4452 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:04:59,038 p=4452 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:04:59,041 p=4452 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:04:59,049 p=4452 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:04:59,052 p=4452 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:04:59,060 p=4452 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:04:59,071 p=4452 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:04:59,077 p=4452 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:05:01,701 p=4452 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:05:01,707 p=4452 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 22:05:02,238 p=4452 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:05:02,242 p=4452 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 22:05:02,467 p=4452 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:05:02,472 p=4452 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 22:05:02,898 p=4452 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:05:02,902 p=4452 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 22:05:03,060 p=4452 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:05:03,065 p=4452 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 22:05:03,269 p=4452 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:05:03,274 p=4452 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 22:05:05,312 p=4452 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:05:05,317 p=4452 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-27 22:05:05,683 p=4452 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 22:05:05,694 p=4452 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:05:05,695 p=4452 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:05:05,695 p=4452 u=ansible n=ansible | ubuntu1                    : ok=9    changed=3    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:07:37,083 p=4726 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:07:37,103 p=4726 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:07:38,492 p=4726 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:07:39,098 p=4726 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:07:39,109 p=4726 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:07:39,121 p=4726 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:07:39,124 p=4726 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:07:39,127 p=4726 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:07:39,136 p=4726 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:07:39,139 p=4726 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:07:39,147 p=4726 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:07:39,159 p=4726 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:07:39,164 p=4726 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:07:41,357 p=4726 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:07:41,362 p=4726 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 22:07:41,879 p=4726 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:07:41,884 p=4726 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 22:07:42,097 p=4726 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:07:42,102 p=4726 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 22:07:42,480 p=4726 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:07:42,485 p=4726 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 22:07:42,646 p=4726 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:07:42,650 p=4726 u=ansible n=ansible | TASK [install_docker : Set up the repository for docker] ********************************************************************************************
2023-07-27 22:07:42,854 p=4726 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:07:42,859 p=4726 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 22:07:44,996 p=4726 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:07:45,001 p=4726 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-27 22:07:45,382 p=4726 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 22:07:45,393 p=4726 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:07:45,393 p=4726 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:07:45,393 p=4726 u=ansible n=ansible | ubuntu1                    : ok=9    changed=3    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:12:46,529 p=5016 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:12:46,549 p=5016 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:12:47,852 p=5016 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:12:48,084 p=5016 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:12:48,095 p=5016 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:12:48,107 p=5016 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:12:48,110 p=5016 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:12:48,113 p=5016 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:12:48,122 p=5016 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:12:48,125 p=5016 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:12:48,134 p=5016 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:12:48,160 p=5016 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:12:48,168 p=5016 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:12:52,080 p=5016 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:12:52,087 p=5016 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 22:12:52,679 p=5016 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:12:52,686 p=5016 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 22:12:52,955 p=5016 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:12:52,961 p=5016 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 22:12:53,382 p=5016 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:12:53,388 p=5016 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 22:12:53,574 p=5016 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:12:53,582 p=5016 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 22:12:53,813 p=5016 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:12:53,820 p=5016 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 22:12:54,001 p=5016 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:12:54,008 p=5016 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 22:12:54,253 p=5016 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:12:54,259 p=5016 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 22:13:34,143 p=5016 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 22:13:34,157 p=5016 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:13:34,157 p=5016 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:13:34,157 p=5016 u=ansible n=ansible | ubuntu1                    : ok=10   changed=4    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:15:20,337 p=5341 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:15:20,358 p=5341 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:15:21,648 p=5341 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:15:21,925 p=5341 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:15:21,935 p=5341 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:15:21,947 p=5341 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:15:21,951 p=5341 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:15:21,954 p=5341 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:15:21,962 p=5341 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:15:21,964 p=5341 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:15:21,973 p=5341 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:15:21,984 p=5341 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:15:21,989 p=5341 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:15:58,148 p=5341 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 22:15:58,158 p=5341 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:15:58,158 p=5341 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:15:58,158 p=5341 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:22:23,463 p=5522 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:22:23,483 p=5522 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:22:24,645 p=5522 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:22:24,823 p=5522 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:22:24,834 p=5522 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:22:24,845 p=5522 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:22:24,849 p=5522 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:22:24,851 p=5522 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:22:24,860 p=5522 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:22:24,862 p=5522 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:22:24,871 p=5522 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:22:24,880 p=5522 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:22:24,886 p=5522 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:23:04,252 p=5522 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 22:23:04,262 p=5522 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:23:04,263 p=5522 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:23:04,263 p=5522 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:33:18,067 p=5685 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:33:18,092 p=5685 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:33:19,434 p=5685 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:33:19,616 p=5685 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:33:19,627 p=5685 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:33:19,640 p=5685 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:33:19,644 p=5685 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:33:19,647 p=5685 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:33:19,666 p=5685 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:33:19,668 p=5685 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:33:19,686 p=5685 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:33:19,694 p=5685 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:33:19,699 p=5685 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:33:59,997 p=5685 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 22:34:00,009 p=5685 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:34:00,009 p=5685 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:34:00,009 p=5685 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:34:32,040 p=5841 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:34:32,059 p=5841 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:34:32,956 p=5841 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:34:33,303 p=5841 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:34:33,314 p=5841 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:34:33,325 p=5841 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:34:33,328 p=5841 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:34:33,331 p=5841 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:34:33,339 p=5841 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:34:33,342 p=5841 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:34:33,350 p=5841 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:34:33,362 p=5841 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:34:33,367 p=5841 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:34:33,809 p=5841 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:34:33,814 p=5841 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 22:34:34,318 p=5841 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:34:34,323 p=5841 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 22:34:34,543 p=5841 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:34:34,548 p=5841 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 22:34:34,983 p=5841 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:34:34,987 p=5841 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 22:34:35,144 p=5841 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:34:35,150 p=5841 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 22:34:35,367 p=5841 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:34:35,385 p=5841 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 22:34:35,540 p=5841 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 22:34:35,545 p=5841 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 22:34:35,748 p=5841 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:34:35,753 p=5841 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 22:35:15,257 p=5841 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 22:35:15,267 p=5841 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:35:15,267 p=5841 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:35:15,267 p=5841 u=ansible n=ansible | ubuntu1                    : ok=10   changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:37:01,601 p=6143 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:37:01,620 p=6143 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:37:02,873 p=6143 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:37:03,036 p=6143 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:37:03,047 p=6143 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:37:03,059 p=6143 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:37:03,063 p=6143 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:37:03,065 p=6143 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:37:03,074 p=6143 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:37:03,077 p=6143 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:37:03,085 p=6143 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:37:03,095 p=6143 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:37:03,099 p=6143 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:37:43,146 p=6143 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 22:37:43,156 p=6143 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:37:43,156 p=6143 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:37:43,156 p=6143 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 22:40:45,731 p=6320 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 22:40:45,753 p=6320 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 22:40:46,965 p=6320 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 22:40:47,080 p=6320 u=ansible n=ansible | ok: [centos1]
2023-07-27 22:40:47,091 p=6320 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 22:40:47,102 p=6320 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 22:40:47,107 p=6320 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 22:40:47,110 p=6320 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 22:40:47,117 p=6320 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 22:40:47,120 p=6320 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 22:40:47,129 p=6320 u=ansible n=ansible | skipping: [centos1]
2023-07-27 22:40:47,138 p=6320 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 22:40:47,143 p=6320 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 22:41:23,121 p=6320 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 22:41:23,131 p=6320 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 22:41:23,131 p=6320 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 22:41:23,131 p=6320 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 23:01:19,744 p=6525 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:01:19,765 p=6525 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:01:21,191 p=6525 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:01:29,795 p=6525 u=ansible n=ansible | fatal: [ubuntu1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.64.14 port 22: Connection timed out", "unreachable": true}
2023-07-27 23:01:29,802 p=6525 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:01:29,813 p=6525 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:01:29,816 p=6525 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:01:29,823 p=6525 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:01:29,826 p=6525 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:01:29,834 p=6525 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:01:29,845 p=6525 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:01:29,845 p=6525 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:01:29,845 p=6525 u=ansible n=ansible | ubuntu1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 23:02:05,646 p=6646 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:02:05,664 p=6646 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:02:06,742 p=6646 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:02:08,401 p=6646 u=ansible n=ansible | fatal: [ubuntu2]: UNREACHABLE! => {"changed": false, "msg": "Invalid/incorrect password: Warning: Permanently added '192.168.64.16' (ED25519) to the list of known hosts.\r\nPermission denied, please try again.", "unreachable": true}
2023-07-27 23:02:08,408 p=6646 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:02:08,419 p=6646 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:02:08,422 p=6646 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:02:08,431 p=6646 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:02:08,434 p=6646 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:02:08,441 p=6646 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:02:08,453 p=6646 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:02:08,453 p=6646 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:02:08,453 p=6646 u=ansible n=ansible | ubuntu2                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 23:03:29,224 p=6728 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:03:29,244 p=6728 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:03:30,655 p=6728 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:03:31,971 p=6728 u=ansible n=ansible | fatal: [ubuntu2]: UNREACHABLE! => {"changed": false, "msg": "Invalid/incorrect password: Permission denied, please try again.", "unreachable": true}
2023-07-27 23:03:31,978 p=6728 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:03:31,989 p=6728 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:03:31,991 p=6728 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:03:31,999 p=6728 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:03:32,003 p=6728 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:03:32,010 p=6728 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:03:32,021 p=6728 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:03:32,021 p=6728 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:03:32,021 p=6728 u=ansible n=ansible | ubuntu2                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 23:05:58,137 p=6813 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:05:58,156 p=6813 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:05:59,637 p=6813 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:06:00,886 p=6813 u=ansible n=ansible | fatal: [ubuntu2]: UNREACHABLE! => {"changed": false, "msg": "Invalid/incorrect password: Permission denied, please try again.", "unreachable": true}
2023-07-27 23:06:00,892 p=6813 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:06:00,903 p=6813 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:06:00,906 p=6813 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:06:00,915 p=6813 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:06:00,918 p=6813 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:06:00,926 p=6813 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:06:00,937 p=6813 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:06:00,937 p=6813 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:06:00,937 p=6813 u=ansible n=ansible | ubuntu2                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 23:08:18,317 p=6900 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:08:18,337 p=6900 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:08:19,573 p=6900 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:08:19,823 p=6900 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:08:19,837 p=6900 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:08:19,856 p=6900 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:08:19,860 p=6900 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:08:19,865 p=6900 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:08:19,876 p=6900 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:08:19,880 p=6900 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:08:19,891 p=6900 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:08:19,903 p=6900 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:08:19,909 p=6900 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:08:40,592 p=6900 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:08:40,613 p=6900 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:08:40,613 p=6900 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:08:40,614 p=6900 u=ansible n=ansible | ubuntu2                    : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:09:34,819 p=7054 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:09:34,838 p=7054 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:09:35,794 p=7054 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:09:36,206 p=7054 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:09:36,216 p=7054 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:09:36,228 p=7054 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:09:36,232 p=7054 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:09:36,235 p=7054 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:09:36,243 p=7054 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:09:36,246 p=7054 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:09:36,255 p=7054 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:09:36,265 p=7054 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:09:36,270 p=7054 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:09:38,462 p=7054 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:09:38,467 p=7054 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:09:38,975 p=7054 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:09:38,979 p=7054 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:09:39,197 p=7054 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:09:39,202 p=7054 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:09:39,555 p=7054 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:09:39,560 p=7054 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:09:39,721 p=7054 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:09:39,725 p=7054 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:09:39,942 p=7054 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:09:39,946 p=7054 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:09:40,103 p=7054 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:09:40,108 p=7054 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 23:09:40,311 p=7054 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:09:40,317 p=7054 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 23:10:17,932 p=7054 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 23:10:17,944 p=7054 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:10:17,944 p=7054 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:10:17,944 p=7054 u=ansible n=ansible | ubuntu2                    : ok=10   changed=5    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 23:16:45,901 p=7357 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:16:45,921 p=7357 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:16:47,144 p=7357 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:16:47,496 p=7357 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:16:47,507 p=7357 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:16:47,519 p=7357 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:16:47,523 p=7357 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:16:47,526 p=7357 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:16:47,534 p=7357 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:16:47,536 p=7357 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:16:47,545 p=7357 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:16:47,554 p=7357 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:16:47,559 p=7357 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:17:28,352 p=7357 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 23:17:28,363 p=7357 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:17:28,363 p=7357 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:17:28,363 p=7357 u=ansible n=ansible | ubuntu2                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 23:19:44,354 p=7514 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:19:44,375 p=7514 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:19:45,875 p=7514 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:19:46,095 p=7514 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:19:46,106 p=7514 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:19:46,117 p=7514 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:19:46,122 p=7514 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:19:46,125 p=7514 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:19:46,134 p=7514 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:19:46,137 p=7514 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:19:46,148 p=7514 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:19:46,158 p=7514 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:19:46,162 p=7514 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:23:22,587 p=7514 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:23:22,659 p=7514 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:23:22,660 p=7514 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:23:22,660 p=7514 u=ansible n=ansible | ubuntu2                    : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:24:22,411 p=7676 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:24:22,433 p=7676 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:24:23,996 p=7676 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:24,061 p=7676 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:24:24,072 p=7676 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:24:24,088 p=7676 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:24:24,091 p=7676 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:24:24,095 p=7676 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:24:24,103 p=7676 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:24:24,106 p=7676 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:24:24,117 p=7676 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:24:24,125 p=7676 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:24:24,131 p=7676 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:24:24,916 p=7676 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:24,921 p=7676 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:24:25,443 p=7676 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:25,465 p=7676 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:24:25,465 p=7676 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:24:25,465 p=7676 u=ansible n=ansible | ubuntu2                    : ok=4    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:24:36,200 p=7830 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:24:36,220 p=7830 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:24:37,140 p=7830 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:37,367 p=7830 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:24:37,377 p=7830 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:24:37,389 p=7830 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:24:37,392 p=7830 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:24:37,395 p=7830 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:24:37,403 p=7830 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:24:37,406 p=7830 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:24:37,415 p=7830 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:24:37,424 p=7830 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:24:37,432 p=7830 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:24:38,261 p=7830 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:38,266 p=7830 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:24:38,793 p=7830 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:38,798 p=7830 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:24:39,021 p=7830 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:39,044 p=7830 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:24:39,044 p=7830 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:24:39,044 p=7830 u=ansible n=ansible | ubuntu2                    : ok=5    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:24:47,818 p=7972 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:24:47,840 p=7972 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:24:48,777 p=7972 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:49,050 p=7972 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:24:49,061 p=7972 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:24:49,074 p=7972 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:24:49,078 p=7972 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:24:49,081 p=7972 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:24:49,090 p=7972 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:24:49,093 p=7972 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:24:49,103 p=7972 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:24:49,113 p=7972 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:24:49,118 p=7972 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:24:49,938 p=7972 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:49,942 p=7972 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:24:50,505 p=7972 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:50,511 p=7972 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:24:50,741 p=7972 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:50,746 p=7972 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:24:51,293 p=7972 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:24:51,328 p=7972 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:24:51,328 p=7972 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:24:51,328 p=7972 u=ansible n=ansible | ubuntu2                    : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:25:03,587 p=8133 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:25:03,608 p=8133 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:25:04,652 p=8133 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:04,857 p=8133 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:25:04,868 p=8133 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:25:04,881 p=8133 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:25:04,886 p=8133 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:25:04,889 p=8133 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:25:04,899 p=8133 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:25:04,902 p=8133 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:25:04,916 p=8133 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:25:04,929 p=8133 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:25:04,934 p=8133 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:25:05,908 p=8133 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:05,914 p=8133 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:25:06,588 p=8133 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:06,595 p=8133 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:25:06,880 p=8133 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:06,891 p=8133 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:25:07,585 p=8133 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:07,591 p=8133 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:25:07,770 p=8133 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:07,775 p=8133 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:25:08,007 p=8133 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:25:08,012 p=8133 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:25:08,197 p=8133 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:25:08,225 p=8133 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:25:08,225 p=8133 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:25:08,225 p=8133 u=ansible n=ansible | ubuntu2                    : ok=9    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:25:28,360 p=8361 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:25:28,382 p=8361 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:25:29,293 p=8361 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:29,533 p=8361 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:25:29,545 p=8361 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:25:29,556 p=8361 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:25:29,561 p=8361 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:25:29,564 p=8361 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:25:29,572 p=8361 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:25:29,576 p=8361 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:25:29,584 p=8361 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:25:29,597 p=8361 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:25:29,602 p=8361 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:25:30,340 p=8361 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:30,345 p=8361 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:25:30,863 p=8361 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:30,868 p=8361 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:25:31,094 p=8361 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:31,099 p=8361 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:25:31,791 p=8361 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:31,796 p=8361 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:25:31,980 p=8361 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:31,985 p=8361 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:25:32,207 p=8361 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:25:32,212 p=8361 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:25:32,382 p=8361 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:25:32,387 p=8361 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 23:25:32,597 p=8361 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:32,618 p=8361 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:25:32,618 p=8361 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:25:32,618 p=8361 u=ansible n=ansible | ubuntu2                    : ok=10   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:25:43,261 p=8594 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:25:43,281 p=8594 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:25:44,238 p=8594 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:44,452 p=8594 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:25:44,463 p=8594 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:25:44,477 p=8594 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:25:44,481 p=8594 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:25:44,484 p=8594 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:25:44,492 p=8594 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:25:44,495 p=8594 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:25:44,505 p=8594 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:25:44,517 p=8594 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:25:44,522 p=8594 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:25:45,266 p=8594 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:45,271 p=8594 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:25:45,803 p=8594 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:45,808 p=8594 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:25:46,040 p=8594 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:46,045 p=8594 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:25:46,641 p=8594 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:46,646 p=8594 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:25:46,811 p=8594 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:46,816 p=8594 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:25:47,022 p=8594 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:25:47,027 p=8594 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:25:47,190 p=8594 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:25:47,195 p=8594 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 23:25:47,401 p=8594 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:47,406 p=8594 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 23:25:48,049 p=8594 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:48,071 p=8594 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:25:48,071 p=8594 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:25:48,071 p=8594 u=ansible n=ansible | ubuntu2                    : ok=11   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:25:56,340 p=8843 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:25:56,360 p=8843 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:25:57,307 p=8843 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:57,526 p=8843 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:25:57,537 p=8843 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:25:57,550 p=8843 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-27 23:25:57,553 p=8843 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:25:57,557 p=8843 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:25:57,565 p=8843 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:25:57,568 p=8843 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:25:57,577 p=8843 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:25:57,590 p=8843 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu2
2023-07-27 23:25:57,595 p=8843 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:25:58,407 p=8843 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:58,412 p=8843 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:25:58,971 p=8843 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:58,976 p=8843 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:25:59,202 p=8843 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:59,207 p=8843 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:25:59,906 p=8843 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:25:59,911 p=8843 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:26:00,076 p=8843 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:26:00,081 p=8843 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:26:00,300 p=8843 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:26:00,305 p=8843 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:26:00,468 p=8843 u=ansible n=ansible | changed: [ubuntu2]
2023-07-27 23:26:00,473 p=8843 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 23:26:00,679 p=8843 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:26:00,684 p=8843 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 23:26:01,422 p=8843 u=ansible n=ansible | ok: [ubuntu2]
2023-07-27 23:26:01,427 p=8843 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-27 23:26:01,803 p=8843 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 23:26:01,815 p=8843 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:26:01,815 p=8843 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:26:01,815 p=8843 u=ansible n=ansible | ubuntu2                    : ok=11   changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 23:26:22,920 p=9123 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:26:22,941 p=9123 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:26:24,172 p=9123 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:26:26,041 p=9123 u=ansible n=ansible | fatal: [ubuntu1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.64.14 port 22: No route to host", "unreachable": true}
2023-07-27 23:26:26,048 p=9123 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:26:26,059 p=9123 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:26:26,063 p=9123 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:26:26,073 p=9123 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:26:26,076 p=9123 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:26:26,083 p=9123 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:26:26,094 p=9123 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:26:26,094 p=9123 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:26:26,094 p=9123 u=ansible n=ansible | ubuntu1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-27 23:28:56,650 p=9204 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:28:56,682 p=9204 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:28:58,578 p=9204 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:28:59,397 p=9204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:28:59,414 p=9204 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:28:59,433 p=9204 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 23:28:59,441 p=9204 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:28:59,445 p=9204 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:28:59,458 p=9204 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:28:59,463 p=9204 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:28:59,477 p=9204 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:28:59,488 p=9204 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 23:28:59,495 p=9204 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:31:39,747 p=9204 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:31:39,771 p=9204 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:31:40,719 p=9204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:31:40,726 p=9204 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:31:41,002 p=9204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:31:41,009 p=9204 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:31:41,427 p=9204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:31:41,434 p=9204 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:31:41,654 p=9204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:31:41,661 p=9204 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:31:41,938 p=9204 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:31:41,943 p=9204 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:31:42,150 p=9204 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:31:42,156 p=9204 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 23:31:42,436 p=9204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:31:42,443 p=9204 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 23:31:43,173 p=9204 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:31:43,178 p=9204 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-27 23:31:43,613 p=9204 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 23:31:43,626 p=9204 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:31:43,626 p=9204 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:31:43,626 p=9204 u=ansible n=ansible | ubuntu1                    : ok=11   changed=3    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 23:35:23,337 p=9539 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:35:23,359 p=9539 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:35:25,047 p=9539 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:35:25,093 p=9539 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:35:25,106 p=9539 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:35:25,118 p=9539 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 23:35:25,122 p=9539 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:35:25,126 p=9539 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:35:25,135 p=9539 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:35:25,139 p=9539 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:35:25,147 p=9539 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:35:25,158 p=9539 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 23:35:25,163 p=9539 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:35:26,103 p=9539 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:35:26,110 p=9539 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:35:26,735 p=9539 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:35:26,740 p=9539 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:35:26,998 p=9539 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:35:27,004 p=9539 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:35:27,421 p=9539 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:35:27,426 p=9539 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:35:27,585 p=9539 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:35:27,590 p=9539 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:35:27,816 p=9539 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:35:27,821 p=9539 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:35:27,978 p=9539 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:35:27,983 p=9539 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 23:35:28,201 p=9539 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:35:28,206 p=9539 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 23:35:28,892 p=9539 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:35:28,898 p=9539 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-27 23:35:29,322 p=9539 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 23:35:29,334 p=9539 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:35:29,335 p=9539 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:35:29,335 p=9539 u=ansible n=ansible | ubuntu1                    : ok=11   changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 23:35:59,521 p=9817 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:35:59,542 p=9817 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:36:00,452 p=9817 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:00,674 p=9817 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:36:00,685 p=9817 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:36:00,696 p=9817 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 23:36:00,699 p=9817 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:36:00,702 p=9817 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:36:00,711 p=9817 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:36:00,713 p=9817 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:36:00,722 p=9817 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:36:00,734 p=9817 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 23:36:00,740 p=9817 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:36:01,634 p=9817 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:01,640 p=9817 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:36:02,262 p=9817 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:02,269 p=9817 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:36:02,517 p=9817 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:02,523 p=9817 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:36:03,131 p=9817 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:03,137 p=9817 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:36:03,344 p=9817 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:03,351 p=9817 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:36:03,641 p=9817 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:36:03,647 p=9817 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:36:03,849 p=9817 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:36:03,857 p=9817 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 23:36:04,133 p=9817 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:04,139 p=9817 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 23:36:43,195 p=9817 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 23:36:43,209 p=9817 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:36:43,210 p=9817 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:36:43,210 p=9817 u=ansible n=ansible | ubuntu1                    : ok=10   changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 23:36:55,550 p=10114 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:36:55,576 p=10114 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:36:56,723 p=10114 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:56,865 p=10114 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:36:56,879 p=10114 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:36:56,892 p=10114 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 23:36:56,896 p=10114 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:36:56,900 p=10114 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:36:56,909 p=10114 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:36:56,912 p=10114 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:36:56,923 p=10114 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:36:56,934 p=10114 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 23:36:56,940 p=10114 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:36:59,023 p=10114 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:59,039 p=10114 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-27 23:36:59,725 p=10114 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:36:59,732 p=10114 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-27 23:36:59,995 p=10114 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:37:00,002 p=10114 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] *********************************************************************************
2023-07-27 23:37:00,347 p=10114 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:37:00,352 p=10114 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] *********************************************************************************
2023-07-27 23:37:00,542 p=10114 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:37:00,549 p=10114 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-27 23:37:00,771 p=10114 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:37:00,776 p=10114 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-27 23:37:00,955 p=10114 u=ansible n=ansible | changed: [ubuntu1]
2023-07-27 23:37:00,960 p=10114 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-27 23:37:01,188 p=10114 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:37:01,195 p=10114 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-27 23:37:01,976 p=10114 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:37:01,981 p=10114 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-27 23:37:02,389 p=10114 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "No package matching 'docker-ce' is available"}
2023-07-27 23:37:02,401 p=10114 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:37:02,401 p=10114 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:37:02,401 p=10114 u=ansible n=ansible | ubuntu1                    : ok=11   changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-27 23:37:40,526 p=10394 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-27 23:37:40,561 p=10394 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-27 23:37:42,781 p=10394 u=ansible n=ansible | ok: [ubuntu1]
2023-07-27 23:37:42,789 p=10394 u=ansible n=ansible | ok: [centos1]
2023-07-27 23:37:42,820 p=10394 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-27 23:37:42,871 p=10394 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-27 23:37:42,882 p=10394 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-27 23:37:42,901 p=10394 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-27 23:37:42,943 p=10394 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-27 23:37:42,953 p=10394 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-27 23:37:42,976 p=10394 u=ansible n=ansible | skipping: [centos1]
2023-07-27 23:37:43,005 p=10394 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-27 23:37:43,014 p=10394 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-27 23:38:25,112 p=10394 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-27 23:38:25,134 p=10394 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-27 23:38:25,134 p=10394 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-27 23:38:25,134 p=10394 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 07:54:17,858 p=2496 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 07:54:17,893 p=2496 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 07:54:19,818 p=2496 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 07:54:21,009 p=2496 u=ansible n=ansible | fatal: [centos1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.64.12 port 22: No route to host", "unreachable": true}
2023-07-28 07:54:21,017 p=2496 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 07:54:21,024 p=2496 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 07:54:21,028 p=2496 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 07:54:21,042 p=2496 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 07:54:21,045 p=2496 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 07:55:01,908 p=2496 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-28 07:55:01,909 p=2496 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 07:55:01,909 p=2496 u=ansible n=ansible | centos1                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-28 07:55:01,909 p=2496 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 08:05:29,215 p=2710 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:05:29,236 p=2710 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:05:30,610 p=2710 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:05:30,974 p=2710 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:05:30,987 p=2710 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:05:31,001 p=2710 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:05:31,005 p=2710 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:05:31,009 p=2710 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:05:31,020 p=2710 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:05:31,024 p=2710 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:05:31,036 p=2710 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:05:31,049 p=2710 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:05:31,055 p=2710 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:05:35,732 p=2710 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:05:35,737 p=2710 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 08:05:36,253 p=2710 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:05:36,258 p=2710 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 08:05:36,480 p=2710 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:05:36,485 p=2710 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] ************************************************************************************************************************
2023-07-28 08:05:37,358 p=2710 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:05:37,363 p=2710 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] ************************************************************************************************************************
2023-07-28 08:05:37,550 p=2710 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:05:37,557 p=2710 u=ansible n=ansible | TASK [install_docker : Get architecture information] ***************************************************************************************************************************************
2023-07-28 08:05:37,792 p=2710 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:05:37,798 p=2710 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] ************************************************************************************************************************************************
2023-07-28 08:05:37,970 p=2710 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:05:37,975 p=2710 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] ****************************************************************************************************************************
2023-07-28 08:05:38,183 p=2710 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:05:38,189 p=2710 u=ansible n=ansible | TASK [install_docker : Update apt] *********************************************************************************************************************************************************
2023-07-28 08:06:16,785 p=2710 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-28 08:06:16,796 p=2710 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 08:06:16,796 p=2710 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:06:16,796 p=2710 u=ansible n=ansible | ubuntu1                    : ok=10   changed=5    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 08:17:54,372 p=3087 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:17:54,393 p=3087 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:17:55,713 p=3087 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:17:55,876 p=3087 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:17:55,890 p=3087 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:17:55,905 p=3087 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:17:55,910 p=3087 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:17:55,914 p=3087 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:17:55,924 p=3087 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:17:55,931 p=3087 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:17:55,943 p=3087 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:17:55,956 p=3087 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:17:55,963 p=3087 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:18:32,645 p=3087 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-28 08:18:32,656 p=3087 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 08:18:32,656 p=3087 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:18:32,656 p=3087 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 08:20:09,410 p=3306 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:20:09,431 p=3306 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:20:10,685 p=3306 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:20:10,862 p=3306 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:20:10,875 p=3306 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:20:10,888 p=3306 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:20:10,891 p=3306 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:20:10,894 p=3306 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:20:10,902 p=3306 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:20:10,905 p=3306 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:20:10,913 p=3306 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:20:10,923 p=3306 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:20:10,929 p=3306 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:20:13,725 p=3306 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:20:13,752 p=3306 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 08:20:13,752 p=3306 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:20:13,752 p=3306 u=ansible n=ansible | ubuntu1                    : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:21:24,949 p=3468 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:21:24,969 p=3468 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:21:26,337 p=3468 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:21:26,547 p=3468 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:21:26,560 p=3468 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:21:26,575 p=3468 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:21:26,579 p=3468 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:21:26,582 p=3468 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:21:26,592 p=3468 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:21:26,594 p=3468 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:21:26,603 p=3468 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:21:26,614 p=3468 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:21:26,620 p=3468 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:21:28,408 p=3468 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:21:28,413 p=3468 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 08:21:28,938 p=3468 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:21:28,943 p=3468 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 08:21:29,160 p=3468 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:21:29,165 p=3468 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] ************************************************************************************************************************
2023-07-28 08:21:29,526 p=3468 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:21:29,531 p=3468 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] ************************************************************************************************************************
2023-07-28 08:21:29,688 p=3468 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:21:29,709 p=3468 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 08:21:29,709 p=3468 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:21:29,709 p=3468 u=ansible n=ansible | ubuntu1                    : ok=7    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:22:20,657 p=3674 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:22:20,677 p=3674 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:22:21,603 p=3674 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:22:21,854 p=3674 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:22:21,865 p=3674 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:22:21,879 p=3674 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:22:21,883 p=3674 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:22:21,888 p=3674 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:22:21,897 p=3674 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:22:21,902 p=3674 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:22:21,912 p=3674 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:22:21,926 p=3674 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:22:21,932 p=3674 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:22:23,824 p=3674 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:22:23,829 p=3674 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 08:22:24,342 p=3674 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:22:24,347 p=3674 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 08:22:24,579 p=3674 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:22:24,585 p=3674 u=ansible n=ansible | TASK [install_docker : Download and save Docker’s official GPG key] ************************************************************************************************************************
2023-07-28 08:22:24,880 p=3674 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:22:24,885 p=3674 u=ansible n=ansible | TASK [install_docker : Set the permission to read GPG for all user] ************************************************************************************************************************
2023-07-28 08:22:25,045 p=3674 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:22:25,050 p=3674 u=ansible n=ansible | TASK [install_docker : Get architecture information] ***************************************************************************************************************************************
2023-07-28 08:22:25,252 p=3674 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:22:25,257 p=3674 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] ************************************************************************************************************************************************
2023-07-28 08:22:25,436 p=3674 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:22:25,441 p=3674 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] ****************************************************************************************************************************
2023-07-28 08:22:25,645 p=3674 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:22:25,667 p=3674 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 08:22:25,667 p=3674 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:22:25,667 p=3674 u=ansible n=ansible | ubuntu1                    : ok=10   changed=4    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:30:55,803 p=4208 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 08:30:55,824 p=4208 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 08:30:57,357 p=4208 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:30:57,443 p=4208 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:30:57,455 p=4208 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 08:30:57,467 p=4208 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:30:57,471 p=4208 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:30:57,474 p=4208 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 08:30:57,483 p=4208 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:30:57,486 p=4208 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 08:30:57,495 p=4208 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:30:57,504 p=4208 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  did not find expected key

The error appears to be in '/home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml': line 30, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    group: root
    mode: '0644'
           ^ here

2023-07-28 08:31:25,703 p=4320 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:31:25,722 p=4320 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:31:26,712 p=4320 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:31:27,006 p=4320 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:31:27,017 p=4320 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:31:27,027 p=4320 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:31:27,031 p=4320 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:31:27,034 p=4320 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:31:27,042 p=4320 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:31:27,044 p=4320 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:31:27,053 p=4320 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:31:27,064 p=4320 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:31:27,070 p=4320 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:32:03,004 p=4320 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-28 08:32:03,014 p=4320 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 08:32:03,014 p=4320 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:32:03,014 p=4320 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 08:32:47,087 p=4468 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:32:47,108 p=4468 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:32:48,054 p=4468 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:32:48,472 p=4468 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:32:48,483 p=4468 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:32:48,495 p=4468 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:32:48,499 p=4468 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:32:48,503 p=4468 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:32:48,511 p=4468 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:32:48,514 p=4468 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:32:48,525 p=4468 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:32:48,537 p=4468 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:32:48,542 p=4468 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:33:26,694 p=4468 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-28 08:33:26,704 p=4468 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 08:33:26,704 p=4468 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:33:26,704 p=4468 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 08:35:03,157 p=4644 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 08:35:03,178 p=4644 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 08:35:04,393 p=4644 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:35:04,616 p=4644 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:35:04,627 p=4644 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 08:35:04,639 p=4644 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:35:04,642 p=4644 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:35:04,645 p=4644 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 08:35:04,653 p=4644 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:35:04,655 p=4644 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 08:35:04,665 p=4644 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:35:04,676 p=4644 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:35:04,682 p=4644 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 08:35:40,700 p=4644 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-28 08:35:40,710 p=4644 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 08:35:40,710 p=4644 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:35:40,710 p=4644 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 08:37:18,901 p=4853 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:37:18,922 p=4853 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:37:20,183 p=4853 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:37:20,309 p=4853 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:37:20,320 p=4853 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:37:20,333 p=4853 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:37:20,337 p=4853 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:37:20,340 p=4853 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:37:20,350 p=4853 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:37:20,353 p=4853 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:37:20,363 p=4853 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:37:20,376 p=4853 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:37:20,382 p=4853 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:37:22,902 p=4853 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:37:22,907 p=4853 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 08:37:23,411 p=4853 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:37:23,416 p=4853 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 08:37:23,634 p=4853 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:37:23,640 p=4853 u=ansible n=ansible | TASK [install_docker : Download Docker GPG key] ********************************************************************************************************************************************
2023-07-28 08:37:24,072 p=4853 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:37:24,077 p=4853 u=ansible n=ansible | TASK [install_docker : Install GPG key] ****************************************************************************************************************************************************
2023-07-28 08:37:24,129 p=4853 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-28 08:37:24,130 p=4853 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Could not find or access '/tmp/docker.gpg' on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2023-07-28 08:37:24,141 p=4853 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 08:37:24,141 p=4853 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:37:24,141 p=4853 u=ansible n=ansible | ubuntu1                    : ok=6    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 08:39:01,402 p=5051 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 08:39:01,421 p=5051 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 08:39:02,657 p=5051 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:39:02,767 p=5051 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:39:02,778 p=5051 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 08:39:02,790 p=5051 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:39:02,794 p=5051 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:39:02,797 p=5051 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 08:39:02,804 p=5051 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:39:02,807 p=5051 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 08:39:02,816 p=5051 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:39:02,827 p=5051 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:39:02,832 p=5051 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 08:39:09,722 p=5051 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:39:09,727 p=5051 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 08:39:10,239 p=5051 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:39:10,243 p=5051 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 08:39:10,466 p=5051 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:39:10,483 p=5051 u=ansible n=ansible | TASK [install_docker : Download Docker GPG key] *****************************************************************************************************
2023-07-28 08:39:10,811 p=5051 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:39:10,816 p=5051 u=ansible n=ansible | TASK [install_docker : Install GPG key] *************************************************************************************************************
2023-07-28 08:39:11,299 p=5051 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to find handler for \"/tmp/docker.gpg\". Make sure the required command to extract the file is installed.\nCommand \"/usr/bin/tar\" could not handle archive: Unable to list files in the archive: /usr/bin/tar: unrecognized option '--dearmor'\nTry 'tar --help' or 'tar --usage' for more information.\n\nUnable to find required 'unzip' or 'unzip' binary in the path.\nUnable to find required 'unzip' or 'zipinfo' binary in the path."}
2023-07-28 08:39:11,309 p=5051 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 08:39:11,309 p=5051 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 08:39:11,310 p=5051 u=ansible n=ansible | ubuntu1                    : ok=6    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 08:52:45,880 p=5379 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 08:52:45,902 p=5379 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 08:52:47,331 p=5379 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:52:47,521 p=5379 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:52:47,532 p=5379 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 08:52:47,546 p=5379 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:52:47,549 p=5379 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:52:47,552 p=5379 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 08:52:47,560 p=5379 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:52:47,563 p=5379 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 08:52:47,572 p=5379 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:52:47,583 p=5379 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:52:47,589 p=5379 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 08:52:49,696 p=5379 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:52:49,701 p=5379 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 08:52:50,207 p=5379 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:52:50,212 p=5379 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 08:52:50,428 p=5379 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:52:50,433 p=5379 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] *********************************************************************************************************************************
2023-07-28 08:52:50,879 p=5379 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:52:50,884 p=5379 u=ansible n=ansible | TASK [install_docker : Unarchive GPG key from ASCII to binary format] **********************************************************************************************************************
2023-07-28 08:55:23,520 p=5379 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 08:58:09,255 p=5630 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 08:58:09,277 p=5630 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 08:58:10,753 p=5630 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:58:10,952 p=5630 u=ansible n=ansible | ok: [centos1]
2023-07-28 08:58:10,962 p=5630 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 08:58:10,974 p=5630 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 08:58:10,977 p=5630 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 08:58:10,980 p=5630 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 08:58:10,990 p=5630 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 08:58:10,993 p=5630 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 08:58:11,002 p=5630 u=ansible n=ansible | skipping: [centos1]
2023-07-28 08:58:11,013 p=5630 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 08:58:11,018 p=5630 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 08:58:13,011 p=5630 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 08:58:13,016 p=5630 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 08:58:13,594 p=5630 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:58:13,599 p=5630 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 08:58:13,820 p=5630 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:58:13,825 p=5630 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 08:58:16,389 p=5630 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 08:58:16,393 p=5630 u=ansible n=ansible | TASK [install_docker : Unarchive GPG key from ASCII to binary format] *******************************************************************************
2023-07-28 09:00:09,475 p=5630 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 09:00:18,975 p=5867 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 09:00:18,997 p=5867 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 09:00:19,913 p=5867 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:00:20,429 p=5867 u=ansible n=ansible | ok: [centos1]
2023-07-28 09:00:20,442 p=5867 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 09:00:20,460 p=5867 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 09:00:20,464 p=5867 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 09:00:20,468 p=5867 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 09:00:20,478 p=5867 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 09:00:20,482 p=5867 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 09:00:20,493 p=5867 u=ansible n=ansible | skipping: [centos1]
2023-07-28 09:00:20,511 p=5867 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 09:00:20,516 p=5867 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 09:00:22,931 p=5867 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:00:22,936 p=5867 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 09:00:23,544 p=5867 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:00:23,549 p=5867 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 09:00:23,768 p=5867 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:00:23,774 p=5867 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] *********************************************************************************************************************************
2023-07-28 09:00:24,270 p=5867 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:00:24,275 p=5867 u=ansible n=ansible | TASK [install_docker : Unarchive GPG key from ASCII to binary format] **********************************************************************************************************************
2023-07-28 09:00:53,603 p=5867 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 09:01:09,693 p=6079 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 09:01:09,713 p=6079 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 09:01:10,677 p=6079 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:01:10,825 p=6079 u=ansible n=ansible | ok: [centos1]
2023-07-28 09:01:10,836 p=6079 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 09:01:10,847 p=6079 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 09:01:10,850 p=6079 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 09:01:10,853 p=6079 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 09:01:10,861 p=6079 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 09:01:10,863 p=6079 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 09:01:10,872 p=6079 u=ansible n=ansible | skipping: [centos1]
2023-07-28 09:01:10,884 p=6079 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 09:01:10,891 p=6079 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 09:01:12,675 p=6079 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:01:12,681 p=6079 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 09:01:13,254 p=6079 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:01:13,260 p=6079 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 09:01:13,521 p=6079 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:01:13,526 p=6079 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] *********************************************************************************************************************************
2023-07-28 09:01:13,839 p=6079 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:01:13,844 p=6079 u=ansible n=ansible | TASK [install_docker : Unarchive GPG key from ASCII to binary format] **********************************************************************************************************************
2023-07-28 09:38:20,628 p=6079 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 09:39:22,918 p=6319 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 09:39:22,939 p=6319 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 09:39:24,579 p=6319 u=ansible n=ansible | ok: [centos1]
2023-07-28 09:39:25,137 p=6319 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:39:25,150 p=6319 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 09:39:25,176 p=6319 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 09:39:25,181 p=6319 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 09:39:25,186 p=6319 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 09:39:25,204 p=6319 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 09:39:25,209 p=6319 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 09:39:25,222 p=6319 u=ansible n=ansible | skipping: [centos1]
2023-07-28 09:39:25,239 p=6319 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 09:39:25,247 p=6319 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 09:39:29,821 p=6319 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:39:29,826 p=6319 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 09:39:30,329 p=6319 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:39:30,334 p=6319 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 09:39:30,553 p=6319 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:39:30,569 p=6319 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key and unarchive GPG key] ***********************************************************************************************************
2023-07-28 09:40:24,670 p=6319 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 09:40:47,284 p=6545 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 09:40:47,305 p=6545 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 09:40:48,257 p=6545 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:40:48,749 p=6545 u=ansible n=ansible | ok: [centos1]
2023-07-28 09:40:48,761 p=6545 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 09:40:48,772 p=6545 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 09:40:48,776 p=6545 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 09:40:48,780 p=6545 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 09:40:48,788 p=6545 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 09:40:48,791 p=6545 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 09:40:48,799 p=6545 u=ansible n=ansible | skipping: [centos1]
2023-07-28 09:40:48,810 p=6545 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 09:40:48,815 p=6545 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 09:40:50,533 p=6545 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:40:50,538 p=6545 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 09:40:51,060 p=6545 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:40:51,065 p=6545 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 09:40:51,285 p=6545 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:40:51,291 p=6545 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key and unarchive GPG key] ***********************************************************************************************************
2023-07-28 09:41:48,374 p=6545 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 09:42:18,018 p=6789 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 09:42:18,038 p=6789 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 09:42:18,953 p=6789 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:42:19,385 p=6789 u=ansible n=ansible | ok: [centos1]
2023-07-28 09:42:19,398 p=6789 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 09:42:19,412 p=6789 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 09:42:19,416 p=6789 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 09:42:19,419 p=6789 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 09:42:19,429 p=6789 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 09:42:19,432 p=6789 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 09:42:19,440 p=6789 u=ansible n=ansible | skipping: [centos1]
2023-07-28 09:42:19,451 p=6789 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 09:42:19,456 p=6789 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 09:42:21,304 p=6789 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:42:21,309 p=6789 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 09:42:21,815 p=6789 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:42:21,820 p=6789 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 09:42:22,035 p=6789 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:42:22,040 p=6789 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key and unarchive GPG key] ***********************************************************************************************************
2023-07-28 09:42:22,552 p=6789 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:42:22,557 p=6789 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] ********************************************************************************************************************************
2023-07-28 09:42:22,721 p=6789 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:42:22,726 p=6789 u=ansible n=ansible | TASK [install_docker : Get architecture information] ***************************************************************************************************************************************
2023-07-28 09:42:22,886 p=6789 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:42:22,891 p=6789 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] ************************************************************************************************************************************************
2023-07-28 09:42:23,055 p=6789 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:42:23,060 p=6789 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] ****************************************************************************************************************************
2023-07-28 09:42:23,303 p=6789 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:42:23,310 p=6789 u=ansible n=ansible | TASK [install_docker : Update apt] *********************************************************************************************************************************************************
2023-07-28 09:42:25,989 p=6789 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:42:25,994 p=6789 u=ansible n=ansible | TASK [install_docker : Install docker] *****************************************************************************************************************************************************
2023-07-28 09:43:54,572 p=6789 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:43:54,580 p=6789 u=ansible n=ansible | TASK [install_docker : Enable and start docker] ********************************************************************************************************************************************
2023-07-28 09:43:54,989 p=6789 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:43:54,994 p=6789 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 09:43:55,003 p=6789 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 09:43:55,027 p=6789 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************************
2023-07-28 09:43:55,028 p=6789 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 09:43:55,028 p=6789 u=ansible n=ansible | ubuntu1                    : ok=14   changed=7    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 09:44:02,329 p=7129 u=ansible n=ansible | PLAY [Docker playbook] *********************************************************************************************************************************************************************
2023-07-28 09:44:02,349 p=7129 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************************
2023-07-28 09:44:03,314 p=7129 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:44:03,643 p=7129 u=ansible n=ansible | ok: [centos1]
2023-07-28 09:44:03,654 p=7129 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] *********************************************************************************************************************************
2023-07-28 09:44:03,668 p=7129 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 09:44:03,672 p=7129 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 09:44:03,675 p=7129 u=ansible n=ansible | TASK [install_docker : debug] **************************************************************************************************************************************************************
2023-07-28 09:44:03,684 p=7129 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 09:44:03,687 p=7129 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] *********************************************************************************************************************************
2023-07-28 09:44:03,696 p=7129 u=ansible n=ansible | skipping: [centos1]
2023-07-28 09:44:03,706 p=7129 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 09:44:03,712 p=7129 u=ansible n=ansible | TASK [install_docker : Update apt first] ***************************************************************************************************************************************************
2023-07-28 09:44:05,595 p=7129 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 09:44:05,600 p=7129 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *******************************************************************************************************
2023-07-28 09:44:06,115 p=7129 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:44:06,120 p=7129 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *******************************************************************************************************************
2023-07-28 09:44:06,341 p=7129 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 09:44:06,347 p=7129 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key and unarchive GPG key] ***********************************************************************************************************
2023-07-28 12:18:05,882 p=7129 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 12:27:23,362 p=7582 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************************************
2023-07-28 12:27:23,384 p=7582 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************************************
2023-07-28 12:27:24,987 p=7582 u=ansible n=ansible | ok: [centos1]
2023-07-28 12:27:25,539 p=7582 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:27:25,550 p=7582 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************************************
2023-07-28 12:27:25,562 p=7582 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 12:27:25,566 p=7582 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 12:27:25,569 p=7582 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************************************
2023-07-28 12:27:25,577 p=7582 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 12:27:25,579 p=7582 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************************************
2023-07-28 12:27:25,588 p=7582 u=ansible n=ansible | skipping: [centos1]
2023-07-28 12:27:25,599 p=7582 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 12:27:25,627 p=7582 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************************************
2023-07-28 12:27:33,275 p=7582 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 12:27:33,285 p=7582 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] **********************************************************************************************
2023-07-28 12:27:33,844 p=7582 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:27:33,849 p=7582 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] **********************************************************************************************************
2023-07-28 12:27:34,078 p=7582 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:27:34,083 p=7582 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ************************************************************************************************************************
2023-07-28 12:27:34,455 p=7582 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:27:34,461 p=7582 u=ansible n=ansible | TASK [install_docker : Unarchive GPG] *********************************************************************************************************************************************
2023-07-28 12:33:01,794 p=7582 u=ansible n=ansible | fatal: [ubuntu1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Shared connection to 192.168.64.14 closed.", "unreachable": true}
2023-07-28 12:33:01,825 p=7582 u=ansible n=ansible | PLAY RECAP ************************************************************************************************************************************************************************
2023-07-28 12:33:01,825 p=7582 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 12:33:01,826 p=7582 u=ansible n=ansible | ubuntu1                    : ok=6    changed=1    unreachable=1    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 12:38:17,664 p=7888 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************
2023-07-28 12:38:17,684 p=7888 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************
2023-07-28 12:38:19,085 p=7888 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:38:19,227 p=7888 u=ansible n=ansible | ok: [centos1]
2023-07-28 12:38:19,240 p=7888 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************
2023-07-28 12:38:19,259 p=7888 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 12:38:19,264 p=7888 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 12:38:19,268 p=7888 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************
2023-07-28 12:38:19,279 p=7888 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 12:38:19,281 p=7888 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************
2023-07-28 12:38:19,289 p=7888 u=ansible n=ansible | skipping: [centos1]
2023-07-28 12:38:19,300 p=7888 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml': line 30, column 14, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

- name: Rename decrypted binary file
      command: mv /tmp/docker.gpg /etc/apt/keyrings/docker.gpg
             ^ here

2023-07-28 12:38:35,376 p=8003 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************************************
2023-07-28 12:38:35,395 p=8003 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************************************
2023-07-28 12:38:36,360 p=8003 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:38:36,530 p=8003 u=ansible n=ansible | ok: [centos1]
2023-07-28 12:38:36,541 p=8003 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************************************
2023-07-28 12:38:36,554 p=8003 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 12:38:36,558 p=8003 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 12:38:36,561 p=8003 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************************************
2023-07-28 12:38:36,570 p=8003 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 12:38:36,573 p=8003 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************************************
2023-07-28 12:38:36,582 p=8003 u=ansible n=ansible | skipping: [centos1]
2023-07-28 12:38:36,601 p=8003 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 12:38:36,606 p=8003 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************************************
2023-07-28 12:38:40,789 p=8003 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 12:38:40,794 p=8003 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] **********************************************************************************************
2023-07-28 12:38:41,321 p=8003 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:38:41,326 p=8003 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] **********************************************************************************************************
2023-07-28 12:38:41,551 p=8003 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:38:41,557 p=8003 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ************************************************************************************************************************
2023-07-28 12:38:42,069 p=8003 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 12:38:42,074 p=8003 u=ansible n=ansible | TASK [install_docker : Unarchive GPG] *********************************************************************************************************************************************
2023-07-28 12:41:52,104 p=8003 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 12:42:00,757 p=8236 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************
2023-07-28 12:42:00,776 p=8236 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************
2023-07-28 12:42:01,752 p=8236 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:42:02,153 p=8236 u=ansible n=ansible | ok: [centos1]
2023-07-28 12:42:02,168 p=8236 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************
2023-07-28 12:42:02,185 p=8236 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 12:42:02,189 p=8236 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 12:42:02,193 p=8236 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************
2023-07-28 12:42:02,203 p=8236 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 12:42:02,206 p=8236 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************
2023-07-28 12:42:02,219 p=8236 u=ansible n=ansible | skipping: [centos1]
2023-07-28 12:42:02,234 p=8236 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 12:42:02,241 p=8236 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************
2023-07-28 12:42:04,441 p=8236 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 12:42:04,446 p=8236 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] **********************************************************************
2023-07-28 12:42:05,129 p=8236 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:42:05,136 p=8236 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] **********************************************************************************
2023-07-28 12:42:05,385 p=8236 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:42:05,392 p=8236 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ************************************************************************************************
2023-07-28 12:42:05,767 p=8236 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 12:42:05,772 p=8236 u=ansible n=ansible | TASK [install_docker : Unarchive GPG] *********************************************************************************************************************
2023-07-28 12:42:54,920 p=8236 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 13:04:53,430 p=8534 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************
2023-07-28 13:04:53,450 p=8534 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************
2023-07-28 13:04:55,004 p=8534 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:04:55,146 p=8534 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:04:55,163 p=8534 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************
2023-07-28 13:04:55,186 p=8534 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:04:55,191 p=8534 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:04:55,197 p=8534 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************
2023-07-28 13:04:55,210 p=8534 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 13:04:55,215 p=8534 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************
2023-07-28 13:04:55,230 p=8534 u=ansible n=ansible | skipping: [centos1]
2023-07-28 13:04:55,253 p=8534 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:04:55,259 p=8534 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************
2023-07-28 13:04:59,480 p=8534 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:04:59,487 p=8534 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] **********************************************************************
2023-07-28 13:05:00,109 p=8534 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:00,115 p=8534 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] **********************************************************************************
2023-07-28 13:05:00,339 p=8534 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:00,344 p=8534 u=ansible n=ansible | TASK [install_docker : Check file existed] ****************************************************************************************************************
2023-07-28 13:05:00,649 p=8534 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (stat) module: state. Supported parameters include: checksum_algorithm, follow, get_attributes, get_checksum, get_md5, get_mime, path (attr, attributes, checksum, checksum_algo, dest, mime, mime-type, mime_type, name)."}
2023-07-28 13:05:00,661 p=8534 u=ansible n=ansible | PLAY RECAP ************************************************************************************************************************************************
2023-07-28 13:05:00,661 p=8534 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 13:05:00,661 p=8534 u=ansible n=ansible | ubuntu1                    : ok=5    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 13:05:50,026 p=8747 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************
2023-07-28 13:05:50,047 p=8747 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************
2023-07-28 13:05:51,185 p=8747 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:51,300 p=8747 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:05:51,314 p=8747 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************
2023-07-28 13:05:51,329 p=8747 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:05:51,335 p=8747 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:05:51,339 p=8747 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************
2023-07-28 13:05:51,349 p=8747 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 13:05:51,353 p=8747 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************
2023-07-28 13:05:51,364 p=8747 u=ansible n=ansible | skipping: [centos1]
2023-07-28 13:05:51,377 p=8747 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:05:51,382 p=8747 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************
2023-07-28 13:05:53,306 p=8747 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:05:53,312 p=8747 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] **********************************************************************
2023-07-28 13:05:53,896 p=8747 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:53,901 p=8747 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] **********************************************************************************
2023-07-28 13:05:54,154 p=8747 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:54,162 p=8747 u=ansible n=ansible | TASK [install_docker : Check file existed] ****************************************************************************************************************
2023-07-28 13:05:54,427 p=8747 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:54,432 p=8747 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************
2023-07-28 13:05:54,441 p=8747 u=ansible n=ansible | ok: [ubuntu1] => {
    "msg": "result: {'changed': False, 'stat': {'exists': True, 'path': '/etc/apt/keyrings/docker.gpg', 'mode': '0644', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 0, 'size': 2760, 'inode': 1573377, 'dev': 64768, 'nlink': 1, 'atime': 1690512144.2812822, 'mtime': 1690512142.453055, 'ctime': 1690512142.453055, 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': True, 'xgrp': False, 'woth': False, 'roth': True, 'xoth': False, 'isuid': False, 'isgid': False, 'blocks': 8, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': False, 'pw_name': 'root', 'gr_name': 'root', 'checksum': '7c67919f823e005af75293a0edac7d0799252213', 'mimetype': 'application/octet-stream', 'charset': 'binary', 'version': '456840288', 'attributes': ['extents'], 'attr_flags': 'e'}, 'failed': False}"
}
2023-07-28 13:05:54,446 p=8747 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key and unarchive GPG key] **************************************************************************
2023-07-28 13:05:54,454 p=8747 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:05:54,460 p=8747 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] ***********************************************************************************************
2023-07-28 13:05:54,644 p=8747 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:54,652 p=8747 u=ansible n=ansible | TASK [install_docker : Get architecture information] ******************************************************************************************************
2023-07-28 13:05:54,888 p=8747 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:05:54,895 p=8747 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] ***************************************************************************************************************
2023-07-28 13:05:55,054 p=8747 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:05:55,060 p=8747 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *******************************************************************************************
2023-07-28 13:05:55,265 p=8747 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:55,271 p=8747 u=ansible n=ansible | TASK [install_docker : Update apt] ************************************************************************************************************************
2023-07-28 13:05:57,092 p=8747 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:05:57,098 p=8747 u=ansible n=ansible | TASK [install_docker : Install docker] ********************************************************************************************************************
2023-07-28 13:05:57,652 p=8747 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:57,657 p=8747 u=ansible n=ansible | TASK [install_docker : Enable and start docker] ***********************************************************************************************************
2023-07-28 13:05:58,020 p=8747 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:05:58,025 p=8747 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************
2023-07-28 13:05:58,034 p=8747 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 13:05:58,057 p=8747 u=ansible n=ansible | PLAY RECAP ************************************************************************************************************************************************
2023-07-28 13:05:58,057 p=8747 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 13:05:58,057 p=8747 u=ansible n=ansible | ubuntu1                    : ok=15   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 13:07:04,481 p=9085 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************************************
2023-07-28 13:07:04,500 p=9085 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************************************
2023-07-28 13:07:05,820 p=9085 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:07:05,951 p=9085 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:07:05,963 p=9085 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************************************
2023-07-28 13:07:05,974 p=9085 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:07:05,978 p=9085 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:07:05,981 p=9085 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************************************
2023-07-28 13:07:05,989 p=9085 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 13:07:05,992 p=9085 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************************************
2023-07-28 13:07:06,000 p=9085 u=ansible n=ansible | skipping: [centos1]
2023-07-28 13:07:06,013 p=9085 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:07:06,021 p=9085 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************************************
2023-07-28 13:07:40,089 p=9085 u=ansible n=ansible | fatal: [ubuntu1]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: unknown reason"}
2023-07-28 13:07:40,100 p=9085 u=ansible n=ansible | PLAY RECAP ************************************************************************************************************************************************************************
2023-07-28 13:07:40,100 p=9085 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 13:07:40,100 p=9085 u=ansible n=ansible | ubuntu1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 13:09:07,582 p=9241 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************************************
2023-07-28 13:09:07,602 p=9241 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************************************
2023-07-28 13:09:08,941 p=9241 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:09:09,115 p=9241 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:09:09,126 p=9241 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************************************
2023-07-28 13:09:09,137 p=9241 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:09:09,141 p=9241 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:09:09,143 p=9241 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************************************
2023-07-28 13:09:09,151 p=9241 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 13:09:09,153 p=9241 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************************************
2023-07-28 13:09:09,162 p=9241 u=ansible n=ansible | skipping: [centos1]
2023-07-28 13:09:09,172 p=9241 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:09:09,178 p=9241 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************************************
2023-07-28 13:09:11,568 p=9241 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:09:11,574 p=9241 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] **********************************************************************************************
2023-07-28 13:09:12,181 p=9241 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:09:12,187 p=9241 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] **********************************************************************************************************
2023-07-28 13:09:12,431 p=9241 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:09:12,437 p=9241 u=ansible n=ansible | TASK [install_docker : Check file existed] ****************************************************************************************************************************************
2023-07-28 13:09:12,661 p=9241 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:09:12,666 p=9241 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************************************
2023-07-28 13:09:12,674 p=9241 u=ansible n=ansible | ok: [ubuntu1] => {
    "msg": "result: {'changed': False, 'stat': {'exists': False}, 'failed': False}"
}
2023-07-28 13:09:12,692 p=9241 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key and unarchive GPG key] **************************************************************************************************
2023-07-28 13:09:14,246 p=9241 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:09:14,251 p=9241 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] ***********************************************************************************************************************
2023-07-28 13:09:14,416 p=9241 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:09:14,422 p=9241 u=ansible n=ansible | TASK [install_docker : Get architecture information] ******************************************************************************************************************************
2023-07-28 13:09:14,579 p=9241 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:09:14,585 p=9241 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] ***************************************************************************************************************************************
2023-07-28 13:09:14,741 p=9241 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:09:14,746 p=9241 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *******************************************************************************************************************
2023-07-28 13:09:14,975 p=9241 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:09:14,980 p=9241 u=ansible n=ansible | TASK [install_docker : Update apt] ************************************************************************************************************************************************
2023-07-28 13:09:17,707 p=9241 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:09:17,712 p=9241 u=ansible n=ansible | TASK [install_docker : Install docker] ********************************************************************************************************************************************
2023-07-28 13:09:18,235 p=9241 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:09:18,241 p=9241 u=ansible n=ansible | TASK [install_docker : Enable and start docker] ***********************************************************************************************************************************
2023-07-28 13:09:18,599 p=9241 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:09:18,604 p=9241 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************************************
2023-07-28 13:09:18,613 p=9241 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 13:09:18,638 p=9241 u=ansible n=ansible | PLAY RECAP ************************************************************************************************************************************************************************
2023-07-28 13:09:18,638 p=9241 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 13:09:18,638 p=9241 u=ansible n=ansible | ubuntu1                    : ok=16   changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 13:11:42,405 p=9621 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************************************
2023-07-28 13:11:42,425 p=9621 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************************************
2023-07-28 13:11:43,724 p=9621 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:11:43,843 p=9621 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:11:43,855 p=9621 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************************************
2023-07-28 13:11:43,868 p=9621 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:11:43,871 p=9621 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:11:43,874 p=9621 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************************************
2023-07-28 13:11:43,883 p=9621 u=ansible n=ansible | ok: [centos1] => {
    "msg": "Ubuntu install docker and print !"
}
2023-07-28 13:11:43,885 p=9621 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************************************
2023-07-28 13:11:43,894 p=9621 u=ansible n=ansible | skipping: [centos1]
2023-07-28 13:11:43,906 p=9621 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:11:43,911 p=9621 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************************************
2023-07-28 13:11:46,138 p=9621 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:11:46,143 p=9621 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] **********************************************************************************************
2023-07-28 13:11:46,665 p=9621 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:11:46,670 p=9621 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] **********************************************************************************************************
2023-07-28 13:11:46,907 p=9621 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:11:46,913 p=9621 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ******************************************************************************************************************************
2023-07-28 13:11:47,134 p=9621 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:11:47,140 p=9621 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ************************************************************************************************************************
2023-07-28 13:11:47,147 p=9621 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:11:47,153 p=9621 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] ***********************************************************************************************************************
2023-07-28 13:11:47,314 p=9621 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:11:47,319 p=9621 u=ansible n=ansible | TASK [install_docker : Get architecture information] ******************************************************************************************************************************
2023-07-28 13:11:47,535 p=9621 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:11:47,540 p=9621 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] ***************************************************************************************************************************************
2023-07-28 13:11:47,697 p=9621 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:11:47,703 p=9621 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *******************************************************************************************************************
2023-07-28 13:11:47,907 p=9621 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:11:47,912 p=9621 u=ansible n=ansible | TASK [install_docker : Update apt] ************************************************************************************************************************************************
2023-07-28 13:11:49,671 p=9621 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:11:49,676 p=9621 u=ansible n=ansible | TASK [install_docker : Install docker] ********************************************************************************************************************************************
2023-07-28 13:11:50,185 p=9621 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:11:50,190 p=9621 u=ansible n=ansible | TASK [install_docker : Enable and start docker] ***********************************************************************************************************************************
2023-07-28 13:11:50,549 p=9621 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:11:50,554 p=9621 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************************************
2023-07-28 13:11:50,563 p=9621 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 13:11:50,587 p=9621 u=ansible n=ansible | PLAY RECAP ************************************************************************************************************************************************************************
2023-07-28 13:11:50,587 p=9621 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 13:11:50,587 p=9621 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 13:19:31,994 p=10021 u=ansible n=ansible | PLAY [Docker playbook] ************************************************************************************************************************************
2023-07-28 13:19:32,013 p=10021 u=ansible n=ansible | TASK [Gathering Facts] ************************************************************************************************************************************
2023-07-28 13:19:33,425 p=10021 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:19:33,617 p=10021 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:19:33,628 p=10021 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ************************************************************************************************
2023-07-28 13:19:33,642 p=10021 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:19:33,648 p=10021 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:19:33,654 p=10021 u=ansible n=ansible | TASK [install_docker : Install yum-utils] *****************************************************************************************************************
2023-07-28 13:19:42,899 p=10021 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:19:42,901 p=10021 u=ansible n=ansible | TASK [install_docker : Add to yum repository] *************************************************************************************************************
2023-07-28 13:19:43,217 p=10021 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (yum_repository) module: url. Supported parameters include: async, attributes, bandwidth, baseurl, cost, deltarpm_metadata_percentage, deltarpm_percentage, description, enabled, enablegroups, exclude, failovermethod, file, gpgcakey, gpgcheck, gpgkey, group, http_caching, include, includepkgs, ip_resolve, keepalive, keepcache, metadata_expire, metadata_expire_filter, metalink, mirrorlist, mirrorlist_expire, mode, module_hotfixes, name, owner, params, password, priority, protect, proxy, proxy_password, proxy_username, repo_gpgcheck, reposdir, retries, s3_enabled, selevel, serole, setype, seuser, skip_if_unavailable, ssl_check_cert_permissions, sslcacert, sslclientcert, sslclientkey, sslverify, state, throttle, timeout, ui_repoid_vars, unsafe_writes, username (attr, ca_cert, client_cert, client_key, validate_certs)."}
2023-07-28 13:19:43,220 p=10021 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ************************************************************************************************
2023-07-28 13:19:43,233 p=10021 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:19:43,236 p=10021 u=ansible n=ansible | TASK [install_docker : Update apt first] ******************************************************************************************************************
2023-07-28 13:19:45,400 p=10021 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:19:45,403 p=10021 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] **********************************************************************
2023-07-28 13:19:45,905 p=10021 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:19:45,908 p=10021 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] **********************************************************************************
2023-07-28 13:19:46,129 p=10021 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:19:46,132 p=10021 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ******************************************************************************************************
2023-07-28 13:19:46,351 p=10021 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:19:46,355 p=10021 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ************************************************************************************************
2023-07-28 13:19:46,362 p=10021 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:19:46,365 p=10021 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] ***********************************************************************************************
2023-07-28 13:19:46,520 p=10021 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:19:46,523 p=10021 u=ansible n=ansible | TASK [install_docker : Get architecture information] ******************************************************************************************************
2023-07-28 13:19:46,744 p=10021 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:19:46,749 p=10021 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] ***************************************************************************************************************
2023-07-28 13:19:46,919 p=10021 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:19:46,922 p=10021 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *******************************************************************************************
2023-07-28 13:19:47,145 p=10021 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:19:47,149 p=10021 u=ansible n=ansible | TASK [install_docker : Update apt] ************************************************************************************************************************
2023-07-28 13:19:48,948 p=10021 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:19:48,951 p=10021 u=ansible n=ansible | TASK [install_docker : Install docker] ********************************************************************************************************************
2023-07-28 13:19:49,479 p=10021 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:19:49,482 p=10021 u=ansible n=ansible | TASK [install_docker : Enable and start docker] ***********************************************************************************************************
2023-07-28 13:19:49,852 p=10021 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:19:49,856 p=10021 u=ansible n=ansible | TASK [install_docker : debug] *****************************************************************************************************************************
2023-07-28 13:19:49,864 p=10021 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 13:19:49,878 p=10021 u=ansible n=ansible | PLAY RECAP ************************************************************************************************************************************************
2023-07-28 13:19:49,878 p=10021 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 13:19:49,878 p=10021 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 13:20:28,424 p=10451 u=ansible n=ansible | PLAY [Docker playbook] ***********************************************************************************************************************************************************************************************************
2023-07-28 13:20:28,443 p=10451 u=ansible n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************************
2023-07-28 13:20:29,435 p=10451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:20:29,684 p=10451 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:20:29,695 p=10451 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ***********************************************************************************************************************************************************************
2023-07-28 13:20:29,707 p=10451 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:20:29,713 p=10451 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:20:29,716 p=10451 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ****************************************************************************************************************************************************************************************
2023-07-28 13:20:30,610 p=10451 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:20:30,613 p=10451 u=ansible n=ansible | TASK [install_docker : Add to yum repository] ************************************************************************************************************************************************************************************
2023-07-28 13:20:30,908 p=10451 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"changed": false, "msg": "Parameter 'description' is required."}
2023-07-28 13:20:30,911 p=10451 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ***********************************************************************************************************************************************************************
2023-07-28 13:20:30,922 p=10451 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:20:30,925 p=10451 u=ansible n=ansible | TASK [install_docker : Update apt first] *****************************************************************************************************************************************************************************************
2023-07-28 13:20:32,852 p=10451 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:20:32,855 p=10451 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *********************************************************************************************************************************************
2023-07-28 13:20:33,402 p=10451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:20:33,405 p=10451 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *********************************************************************************************************************************************************
2023-07-28 13:20:33,614 p=10451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:20:33,617 p=10451 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] *****************************************************************************************************************************************************************************
2023-07-28 13:20:33,842 p=10451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:20:33,846 p=10451 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ***********************************************************************************************************************************************************************
2023-07-28 13:20:33,854 p=10451 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:20:33,858 p=10451 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] **********************************************************************************************************************************************************************
2023-07-28 13:20:34,032 p=10451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:20:34,036 p=10451 u=ansible n=ansible | TASK [install_docker : Get architecture information] *****************************************************************************************************************************************************************************
2023-07-28 13:20:34,270 p=10451 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:20:34,273 p=10451 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] **************************************************************************************************************************************************************************************
2023-07-28 13:20:34,450 p=10451 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:20:34,453 p=10451 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] ******************************************************************************************************************************************************************
2023-07-28 13:20:34,681 p=10451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:20:34,684 p=10451 u=ansible n=ansible | TASK [install_docker : Update apt] ***********************************************************************************************************************************************************************************************
2023-07-28 13:20:36,647 p=10451 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:20:36,650 p=10451 u=ansible n=ansible | TASK [install_docker : Install docker] *******************************************************************************************************************************************************************************************
2023-07-28 13:20:37,213 p=10451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:20:37,217 p=10451 u=ansible n=ansible | TASK [install_docker : Enable and start docker] **********************************************************************************************************************************************************************************
2023-07-28 13:20:37,606 p=10451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:20:37,610 p=10451 u=ansible n=ansible | TASK [install_docker : debug] ****************************************************************************************************************************************************************************************************
2023-07-28 13:20:37,618 p=10451 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 13:20:37,632 p=10451 u=ansible n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************************************************
2023-07-28 13:20:37,632 p=10451 u=ansible n=ansible | centos1                    : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 13:20:37,632 p=10451 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 13:21:37,617 p=10794 u=ansible n=ansible | PLAY [Docker playbook] ***********************************************************************************************************************************************************************************************************
2023-07-28 13:21:37,636 p=10794 u=ansible n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************************************************
2023-07-28 13:21:38,842 p=10794 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:21:38,949 p=10794 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:21:38,960 p=10794 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ***********************************************************************************************************************************************************************
2023-07-28 13:21:38,972 p=10794 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:21:38,977 p=10794 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:21:38,980 p=10794 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ****************************************************************************************************************************************************************************************
2023-07-28 13:21:39,666 p=10794 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:21:39,668 p=10794 u=ansible n=ansible | TASK [install_docker : Add to yum repository] ************************************************************************************************************************************************************************************
2023-07-28 13:21:40,002 p=10794 u=ansible n=ansible | changed: [centos1]
2023-07-28 13:21:40,005 p=10794 u=ansible n=ansible | TASK [install_docker : Install docker] *******************************************************************************************************************************************************************************************
2023-07-28 13:21:42,618 p=10794 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'yum-config-manager': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried", "rc": 1, "results": []}
2023-07-28 13:21:42,620 p=10794 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ***********************************************************************************************************************************************************************
2023-07-28 13:21:42,633 p=10794 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:21:42,636 p=10794 u=ansible n=ansible | TASK [install_docker : Update apt first] *****************************************************************************************************************************************************************************************
2023-07-28 13:21:44,482 p=10794 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:21:44,485 p=10794 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] *********************************************************************************************************************************************
2023-07-28 13:21:44,995 p=10794 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:21:44,998 p=10794 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] *********************************************************************************************************************************************************
2023-07-28 13:21:45,236 p=10794 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:21:45,239 p=10794 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] *****************************************************************************************************************************************************************************
2023-07-28 13:21:45,466 p=10794 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:21:45,469 p=10794 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ***********************************************************************************************************************************************************************
2023-07-28 13:21:45,477 p=10794 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:21:45,481 p=10794 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] **********************************************************************************************************************************************************************
2023-07-28 13:21:45,647 p=10794 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:21:45,650 p=10794 u=ansible n=ansible | TASK [install_docker : Get architecture information] *****************************************************************************************************************************************************************************
2023-07-28 13:21:45,868 p=10794 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:21:45,871 p=10794 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] **************************************************************************************************************************************************************************************
2023-07-28 13:21:46,039 p=10794 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:21:46,043 p=10794 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] ******************************************************************************************************************************************************************
2023-07-28 13:21:46,276 p=10794 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:21:46,280 p=10794 u=ansible n=ansible | TASK [install_docker : Update apt] ***********************************************************************************************************************************************************************************************
2023-07-28 13:21:47,958 p=10794 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:21:47,961 p=10794 u=ansible n=ansible | TASK [install_docker : Install docker] *******************************************************************************************************************************************************************************************
2023-07-28 13:21:48,468 p=10794 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:21:48,471 p=10794 u=ansible n=ansible | TASK [install_docker : Enable and start docker] **********************************************************************************************************************************************************************************
2023-07-28 13:21:48,842 p=10794 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:21:48,846 p=10794 u=ansible n=ansible | TASK [install_docker : debug] ****************************************************************************************************************************************************************************************************
2023-07-28 13:21:48,854 p=10794 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 13:21:48,869 p=10794 u=ansible n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************************************************
2023-07-28 13:21:48,869 p=10794 u=ansible n=ansible | centos1                    : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 13:21:48,869 p=10794 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 13:24:06,899 p=11224 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 13:24:06,918 p=11224 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 13:24:08,257 p=11224 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:24:08,498 p=11224 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:24:08,508 p=11224 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 13:24:08,520 p=11224 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:24:08,525 p=11224 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:24:08,528 p=11224 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 13:24:11,921 p=11224 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'yum-config-manager': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried", "rc": 1, "results": []}
2023-07-28 13:24:11,924 p=11224 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 13:24:11,935 p=11224 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:24:11,940 p=11224 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 13:24:13,945 p=11224 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:24:13,949 p=11224 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 13:24:14,497 p=11224 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:24:14,500 p=11224 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 13:24:14,753 p=11224 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:24:14,757 p=11224 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 13:24:14,985 p=11224 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:24:14,990 p=11224 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 13:24:14,999 p=11224 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:24:15,004 p=11224 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 13:24:15,188 p=11224 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:24:15,191 p=11224 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 13:24:15,403 p=11224 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:24:15,406 p=11224 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 13:24:15,565 p=11224 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:24:15,569 p=11224 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 13:24:15,771 p=11224 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:24:15,774 p=11224 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 13:24:18,119 p=11224 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:24:18,122 p=11224 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 13:24:18,652 p=11224 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:24:18,655 p=11224 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 13:24:19,017 p=11224 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:24:19,021 p=11224 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 13:24:19,029 p=11224 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 13:24:19,044 p=11224 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 13:24:19,044 p=11224 u=ansible n=ansible | centos1                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 13:24:19,044 p=11224 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 13:52:45,640 p=11593 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 13:52:45,662 p=11593 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 13:52:47,140 p=11593 u=ansible n=ansible | ok: [centos1]
2023-07-28 13:52:48,852 p=11593 u=ansible n=ansible | fatal: [ubuntu2]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.64.16 port 22: No route to host", "unreachable": true}
2023-07-28 13:52:48,860 p=11593 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 13:52:48,874 p=11593 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 13:52:48,878 p=11593 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 13:52:58,803 p=11593 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 13:53:04,430 p=11735 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 13:53:04,450 p=11735 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 13:53:06,197 p=11735 u=ansible n=ansible | fatal: [centos2]: UNREACHABLE! => {"changed": false, "msg": "Invalid/incorrect password: Permission denied, please try again.", "unreachable": true}
2023-07-28 13:53:08,394 p=11735 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:53:08,402 p=11735 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 13:53:08,411 p=11735 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:53:08,415 p=11735 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 13:53:08,430 p=11735 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:53:08,434 p=11735 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 13:53:13,414 p=11735 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 13:56:49,448 p=11849 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 13:56:49,468 p=11849 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 13:56:50,741 p=11849 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:56:50,858 p=11849 u=ansible n=ansible | ok: [centos2]
2023-07-28 13:56:50,870 p=11849 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 13:56:50,882 p=11849 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:56:50,887 p=11849 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos2
2023-07-28 13:56:50,890 p=11849 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 13:56:51,666 p=11849 u=ansible n=ansible | ok: [centos2]
2023-07-28 13:56:51,668 p=11849 u=ansible n=ansible | TASK [install_docker : Add to yum repository] *******************************************************************************************************
2023-07-28 13:56:51,975 p=11849 u=ansible n=ansible | changed: [centos2]
2023-07-28 13:56:51,978 p=11849 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 13:56:54,490 p=11849 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'docker-ce': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried", "rc": 1, "results": []}
2023-07-28 13:56:54,493 p=11849 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 13:56:54,505 p=11849 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 13:56:54,509 p=11849 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 13:57:00,106 p=11849 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:57:00,111 p=11849 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 13:57:00,769 p=11849 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:57:00,772 p=11849 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 13:57:01,064 p=11849 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:57:01,068 p=11849 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 13:57:01,321 p=11849 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:57:01,324 p=11849 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 13:57:01,333 p=11849 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 13:57:01,337 p=11849 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 13:57:01,499 p=11849 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:57:01,502 p=11849 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 13:57:01,719 p=11849 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:57:01,722 p=11849 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 13:57:01,884 p=11849 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:57:01,887 p=11849 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 13:57:02,107 p=11849 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:57:02,110 p=11849 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 13:57:03,928 p=11849 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 13:57:03,932 p=11849 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 13:57:04,449 p=11849 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:57:04,453 p=11849 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 13:57:04,817 p=11849 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 13:57:04,821 p=11849 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 13:57:04,829 p=11849 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 13:57:04,843 p=11849 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 13:57:04,844 p=11849 u=ansible n=ansible | centos2                    : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 13:57:04,844 p=11849 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 14:00:41,220 p=12239 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:00:41,240 p=12239 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:00:42,577 p=12239 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:00:42,666 p=12239 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:00:42,677 p=12239 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:00:42,689 p=12239 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:00:42,694 p=12239 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos2
2023-07-28 14:00:42,697 p=12239 u=ansible n=ansible | TASK [install_docker : Remove Docker and related packages] ******************************************************************************************
2023-07-28 14:00:43,480 p=12239 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:00:43,483 p=12239 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 14:00:44,074 p=12239 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:00:44,078 p=12239 u=ansible n=ansible | TASK [install_docker : Add to yum repository] *******************************************************************************************************
2023-07-28 14:00:44,421 p=12239 u=ansible n=ansible | changed: [centos2]
2023-07-28 14:00:44,424 p=12239 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:00:49,834 p=12239 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'docker-ce': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried", "rc": 1, "results": []}
2023-07-28 14:00:49,836 p=12239 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 14:00:49,849 p=12239 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 14:00:49,853 p=12239 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 14:00:54,238 p=12239 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:00:54,241 p=12239 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 14:00:54,753 p=12239 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:00:54,756 p=12239 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 14:00:54,976 p=12239 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:00:54,979 p=12239 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 14:00:55,199 p=12239 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:00:55,202 p=12239 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 14:00:55,210 p=12239 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:00:55,213 p=12239 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 14:00:55,370 p=12239 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:00:55,373 p=12239 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 14:00:55,589 p=12239 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:00:55,592 p=12239 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 14:00:55,753 p=12239 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:00:55,756 p=12239 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 14:00:55,975 p=12239 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:00:55,979 p=12239 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 14:00:57,860 p=12239 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:00:57,863 p=12239 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:00:58,369 p=12239 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:00:58,372 p=12239 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:00:58,739 p=12239 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:00:58,742 p=12239 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:00:58,750 p=12239 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 14:00:58,764 p=12239 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 14:00:58,765 p=12239 u=ansible n=ansible | centos2                    : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 14:00:58,765 p=12239 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 14:05:01,745 p=12678 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:05:01,765 p=12678 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:05:03,149 p=12678 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:05:03,150 p=12678 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:05:03,163 p=12678 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:05:03,175 p=12678 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:05:03,181 p=12678 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos2
2023-07-28 14:05:03,184 p=12678 u=ansible n=ansible | TASK [install_docker : Remove Docker and related packages] ******************************************************************************************
2023-07-28 14:05:03,839 p=12678 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:05:03,841 p=12678 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 14:05:04,355 p=12678 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:05:04,358 p=12678 u=ansible n=ansible | TASK [install_docker : Add to yum repository] *******************************************************************************************************
2023-07-28 14:05:04,646 p=12678 u=ansible n=ansible | changed: [centos2]
2023-07-28 14:05:04,649 p=12678 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:05:06,746 p=12678 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'docker-ce': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried", "rc": 1, "results": []}
2023-07-28 14:05:06,749 p=12678 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 14:05:06,762 p=12678 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 14:05:06,768 p=12678 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 14:05:08,666 p=12678 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:05:08,669 p=12678 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 14:05:09,198 p=12678 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:05:09,201 p=12678 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 14:05:09,429 p=12678 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:05:09,432 p=12678 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 14:05:09,653 p=12678 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:05:09,657 p=12678 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 14:05:09,664 p=12678 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:05:09,668 p=12678 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 14:05:09,834 p=12678 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:05:09,837 p=12678 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 14:05:10,109 p=12678 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:05:10,113 p=12678 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 14:05:10,274 p=12678 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:05:10,277 p=12678 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 14:05:10,498 p=12678 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:05:10,501 p=12678 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 14:05:12,479 p=12678 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:05:12,483 p=12678 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:05:13,009 p=12678 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:05:13,012 p=12678 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:05:13,370 p=12678 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:05:13,373 p=12678 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:05:13,382 p=12678 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 14:05:13,396 p=12678 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 14:05:13,396 p=12678 u=ansible n=ansible | centos2                    : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 14:05:13,396 p=12678 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 14:19:28,470 p=13106 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:19:28,492 p=13106 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:19:30,031 p=13106 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:19:30,132 p=13106 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:19:30,143 p=13106 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:19:30,155 p=13106 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:19:30,160 p=13106 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 14:19:30,163 p=13106 u=ansible n=ansible | TASK [install_docker : Remove Docker and related packages] ******************************************************************************************
2023-07-28 14:21:54,059 p=2358 u=ansible n=ansible | ERROR! the playbook: playbook.yml could not be found
2023-07-28 14:22:00,695 p=2389 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:22:00,733 p=2389 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:22:02,067 p=2389 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:22:02,238 p=2389 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:22:02,251 p=2389 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:22:02,266 p=2389 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:22:02,272 p=2389 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 14:22:02,278 p=2389 u=ansible n=ansible | TASK [install_docker : Remove Docker and related packages] ******************************************************************************************
2023-07-28 14:22:04,744 p=2389 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'yum-config-manager': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried", "rc": 1, "results": []}
2023-07-28 14:22:04,747 p=2389 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 14:22:04,764 p=2389 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 14:22:04,768 p=2389 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 14:22:06,678 p=2389 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:22:06,681 p=2389 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 14:22:07,201 p=2389 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:22:07,204 p=2389 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 14:22:07,438 p=2389 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:22:07,441 p=2389 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 14:22:07,663 p=2389 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:22:07,667 p=2389 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 14:22:07,674 p=2389 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:22:07,678 p=2389 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 14:22:07,854 p=2389 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:22:07,858 p=2389 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 14:22:08,076 p=2389 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:22:08,079 p=2389 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 14:22:08,241 p=2389 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:22:08,245 p=2389 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 14:22:08,341 p=2389 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 14:23:29,348 p=2699 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:23:29,368 p=2699 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:23:30,610 p=2699 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:23:30,646 p=2699 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:23:30,658 p=2699 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:23:30,670 p=2699 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:23:30,675 p=2699 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 14:23:30,678 p=2699 u=ansible n=ansible | TASK [install_docker : Remove Docker and related packages] ******************************************************************************************
2023-07-28 14:23:31,902 p=2699 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:23:31,905 p=2699 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 14:23:32,540 p=2699 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:23:32,542 p=2699 u=ansible n=ansible | TASK [install_docker : Add to yum repository] *******************************************************************************************************
2023-07-28 14:23:32,829 p=2699 u=ansible n=ansible | changed: [centos1]
2023-07-28 14:23:32,831 p=2699 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:23:35,101 p=2699 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'docker-ce': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried", "rc": 1, "results": []}
2023-07-28 14:23:35,105 p=2699 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 14:23:35,120 p=2699 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 14:23:35,123 p=2699 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 14:23:36,969 p=2699 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:23:36,972 p=2699 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 14:23:37,485 p=2699 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:23:37,488 p=2699 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 14:23:37,715 p=2699 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:23:37,719 p=2699 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 14:23:37,946 p=2699 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:23:37,949 p=2699 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 14:23:37,956 p=2699 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:23:37,961 p=2699 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 14:23:38,122 p=2699 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:23:38,125 p=2699 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 14:23:38,343 p=2699 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:23:38,347 p=2699 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 14:23:38,502 p=2699 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:23:38,506 p=2699 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 14:23:38,721 p=2699 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:23:38,724 p=2699 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 14:23:40,398 p=2699 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:23:40,401 p=2699 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:23:40,936 p=2699 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:23:40,939 p=2699 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:23:41,301 p=2699 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:23:41,305 p=2699 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:23:41,314 p=2699 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 14:23:41,328 p=2699 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 14:23:41,328 p=2699 u=ansible n=ansible | centos1                    : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 14:23:41,328 p=2699 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 14:24:53,947 p=3086 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:24:53,967 p=3086 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:24:55,281 p=3086 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:24:55,475 p=3086 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:24:55,487 p=3086 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:24:55,500 p=3086 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:24:55,505 p=3086 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 14:24:55,508 p=3086 u=ansible n=ansible | TASK [install_docker : Remove Docker and related packages] ******************************************************************************************
2023-07-28 14:25:04,338 p=3086 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:25:04,340 p=3086 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 14:25:04,942 p=3086 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:25:04,945 p=3086 u=ansible n=ansible | TASK [install_docker : Add to yum repository] *******************************************************************************************************
2023-07-28 14:25:05,230 p=3086 u=ansible n=ansible | changed: [centos1]
2023-07-28 14:25:05,233 p=3086 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:25:08,212 p=3086 u=ansible n=ansible | fatal: [centos1]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'docker-ce': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried", "rc": 1, "results": []}
2023-07-28 14:25:08,215 p=3086 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 14:25:08,227 p=3086 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 14:25:08,230 p=3086 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 14:25:10,083 p=3086 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:25:10,086 p=3086 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 14:25:10,622 p=3086 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:25:10,626 p=3086 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 14:25:10,874 p=3086 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:25:10,880 p=3086 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 14:25:11,118 p=3086 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:25:11,121 p=3086 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 14:25:11,128 p=3086 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:25:11,131 p=3086 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 14:25:11,299 p=3086 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:25:11,303 p=3086 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 14:25:11,533 p=3086 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:25:11,536 p=3086 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 14:25:11,695 p=3086 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:25:11,698 p=3086 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 14:25:11,919 p=3086 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:25:11,923 p=3086 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 14:25:13,690 p=3086 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:25:13,693 p=3086 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:25:14,206 p=3086 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:25:14,209 p=3086 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:25:14,569 p=3086 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:25:14,573 p=3086 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:25:14,581 p=3086 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 14:25:14,595 p=3086 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 14:25:14,595 p=3086 u=ansible n=ansible | centos1                    : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 14:25:14,595 p=3086 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 14:28:55,873 p=3550 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:28:55,893 p=3550 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:28:57,243 p=3550 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:28:57,492 p=3550 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:28:57,521 p=3550 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:28:57,538 p=3550 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:28:57,545 p=3550 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 14:28:57,549 p=3550 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 14:28:58,513 p=3550 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:28:58,515 p=3550 u=ansible n=ansible | TASK [install_docker : Download Docker CE repository configuration file] ****************************************************************************
2023-07-28 14:28:59,123 p=3550 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:28:59,125 p=3550 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:30:07,609 p=3550 u=ansible n=ansible | changed: [centos1]
2023-07-28 14:30:07,611 p=3550 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:30:09,177 p=3550 u=ansible n=ansible | changed: [centos1]
2023-07-28 14:30:09,180 p=3550 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:30:09,188 p=3550 u=ansible n=ansible | ok: [centos1] => {
    "docker_service_status.status.ActiveState": "inactive"
}
2023-07-28 14:30:09,190 p=3550 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 14:30:09,198 p=3550 u=ansible n=ansible | skipping: [centos1]
2023-07-28 14:30:09,208 p=3550 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 14:30:09,213 p=3550 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 14:30:11,592 p=3550 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:30:11,597 p=3550 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 14:30:12,147 p=3550 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:30:12,153 p=3550 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 14:30:12,386 p=3550 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:30:12,393 p=3550 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 14:30:12,639 p=3550 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:30:12,645 p=3550 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 14:30:12,652 p=3550 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:30:12,658 p=3550 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 14:30:12,827 p=3550 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:30:12,833 p=3550 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 14:30:13,089 p=3550 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:30:13,094 p=3550 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 14:30:13,284 p=3550 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:30:13,291 p=3550 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 14:30:13,548 p=3550 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:30:13,554 p=3550 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 14:30:15,552 p=3550 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:30:15,558 p=3550 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:30:16,209 p=3550 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:30:16,214 p=3550 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:30:16,457 p=3550 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:30:16,461 p=3550 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:30:16,471 p=3550 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 14:30:16,495 p=3550 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 14:30:16,496 p=3550 u=ansible n=ansible | centos1                    : ok=7    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 14:30:16,496 p=3550 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 14:30:45,166 p=3973 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:30:45,186 p=3973 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:30:46,336 p=3973 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:30:46,347 p=3973 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:30:46,362 p=3973 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:30:46,380 p=3973 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:30:46,388 p=3973 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1
2023-07-28 14:30:46,392 p=3973 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 14:30:54,597 p=3973 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:30:54,599 p=3973 u=ansible n=ansible | TASK [install_docker : Download Docker CE repository configuration file] ****************************************************************************
2023-07-28 14:30:55,147 p=3973 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:30:55,150 p=3973 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:30:55,874 p=3973 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:30:55,877 p=3973 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:30:56,316 p=3973 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:30:56,319 p=3973 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:30:56,326 p=3973 u=ansible n=ansible | ok: [centos1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 14:30:56,329 p=3973 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 14:30:56,339 p=3973 u=ansible n=ansible | skipping: [centos1]
2023-07-28 14:30:56,349 p=3973 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 14:30:56,354 p=3973 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 14:31:00,878 p=3973 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:31:00,884 p=3973 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 14:31:01,410 p=3973 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:31:01,415 p=3973 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 14:31:01,659 p=3973 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:31:01,668 p=3973 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 14:31:01,939 p=3973 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:31:01,946 p=3973 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 14:31:01,956 p=3973 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:31:01,964 p=3973 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 14:31:02,133 p=3973 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:31:02,138 p=3973 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 14:31:02,373 p=3973 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:31:02,378 p=3973 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 14:31:02,536 p=3973 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:31:02,542 p=3973 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 14:31:02,759 p=3973 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:31:02,764 p=3973 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 14:31:04,687 p=3973 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:31:04,695 p=3973 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:31:05,330 p=3973 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:31:05,335 p=3973 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:31:05,575 p=3973 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:31:05,580 p=3973 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:31:05,590 p=3973 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 14:31:05,614 p=3973 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 14:31:05,614 p=3973 u=ansible n=ansible | centos1                    : ok=7    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 14:31:05,614 p=3973 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 14:32:08,216 p=4451 u=ansible n=ansible | PLAY [Docker playbook] ******************************************************************************************************************************
2023-07-28 14:32:08,237 p=4451 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 14:32:09,481 p=4451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:32:09,626 p=4451 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:32:09,646 p=4451 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:32:09,662 p=4451 u=ansible n=ansible | TASK [install_docker : Main task install Docker on RedHat] ******************************************************************************************
2023-07-28 14:32:09,682 p=4451 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:32:09,689 p=4451 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/centos.yml for centos1, centos2
2023-07-28 14:32:09,692 p=4451 u=ansible n=ansible | TASK [install_docker : Install yum-utils] ***********************************************************************************************************
2023-07-28 14:32:10,376 p=4451 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:32:10,471 p=4451 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:32:10,474 p=4451 u=ansible n=ansible | TASK [install_docker : Download Docker CE repository configuration file] ****************************************************************************
2023-07-28 14:32:11,162 p=4451 u=ansible n=ansible | ok: [centos2]
2023-07-28 14:32:11,163 p=4451 u=ansible n=ansible | ok: [centos1]
2023-07-28 14:32:11,165 p=4451 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:32:14,653 p=4451 u=ansible n=ansible | changed: [centos1]
2023-07-28 14:33:20,906 p=4451 u=ansible n=ansible | changed: [centos2]
2023-07-28 14:33:20,911 p=4451 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:33:22,868 p=4451 u=ansible n=ansible | changed: [centos2]
2023-07-28 14:33:22,971 p=4451 u=ansible n=ansible | changed: [centos1]
2023-07-28 14:33:22,974 p=4451 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:33:22,987 p=4451 u=ansible n=ansible | ok: [centos1] => {
    "docker_service_status.status.ActiveState": "inactive"
}
2023-07-28 14:33:22,990 p=4451 u=ansible n=ansible | ok: [centos2] => {
    "docker_service_status.status.ActiveState": "inactive"
}
2023-07-28 14:33:22,992 p=4451 u=ansible n=ansible | TASK [install_docker : Main task install Docker on Debian] ******************************************************************************************
2023-07-28 14:33:23,006 p=4451 u=ansible n=ansible | skipping: [centos1]
2023-07-28 14:33:23,007 p=4451 u=ansible n=ansible | skipping: [centos2]
2023-07-28 14:33:23,020 p=4451 u=ansible n=ansible | included: /home/ansible/labs/roles/install_docker/tasks/distro/ubuntu.yml for ubuntu1
2023-07-28 14:33:23,028 p=4451 u=ansible n=ansible | TASK [install_docker : Update apt first] ************************************************************************************************************
2023-07-28 14:33:25,664 p=4451 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:33:25,671 p=4451 u=ansible n=ansible | TASK [install_docker : Install packages to allow apt to use a repository over HTTPS] ****************************************************************
2023-07-28 14:33:26,242 p=4451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:33:26,249 p=4451 u=ansible n=ansible | TASK [install_docker : Create folder to store Docker’s official GPG key] ****************************************************************************
2023-07-28 14:33:26,491 p=4451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:33:26,498 p=4451 u=ansible n=ansible | TASK [install_docker : Check the GPG key is existed] ************************************************************************************************
2023-07-28 14:33:26,726 p=4451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:33:26,734 p=4451 u=ansible n=ansible | TASK [install_docker : Download Docker's official GPG key] ******************************************************************************************
2023-07-28 14:33:26,742 p=4451 u=ansible n=ansible | skipping: [ubuntu1]
2023-07-28 14:33:26,750 p=4451 u=ansible n=ansible | TASK [install_docker : Set permission to read for all user] *****************************************************************************************
2023-07-28 14:33:26,913 p=4451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:33:26,921 p=4451 u=ansible n=ansible | TASK [install_docker : Get architecture information] ************************************************************************************************
2023-07-28 14:33:27,142 p=4451 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:33:27,149 p=4451 u=ansible n=ansible | TASK [install_docker : Get Ubuntu codename] *********************************************************************************************************
2023-07-28 14:33:27,308 p=4451 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:33:27,315 p=4451 u=ansible n=ansible | TASK [install_docker : Add Docker repository to sources.list.d] *************************************************************************************
2023-07-28 14:33:27,523 p=4451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:33:27,530 p=4451 u=ansible n=ansible | TASK [install_docker : Update apt] ******************************************************************************************************************
2023-07-28 14:33:29,272 p=4451 u=ansible n=ansible | changed: [ubuntu1]
2023-07-28 14:33:29,281 p=4451 u=ansible n=ansible | TASK [install_docker : Install docker] **************************************************************************************************************
2023-07-28 14:33:29,864 p=4451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:33:29,872 p=4451 u=ansible n=ansible | TASK [install_docker : Enable and start docker] *****************************************************************************************************
2023-07-28 14:33:30,123 p=4451 u=ansible n=ansible | ok: [ubuntu1]
2023-07-28 14:33:30,131 p=4451 u=ansible n=ansible | TASK [install_docker : debug] ***********************************************************************************************************************
2023-07-28 14:33:30,140 p=4451 u=ansible n=ansible | ok: [ubuntu1] => {
    "docker_service_status.status.ActiveState": "active"
}
2023-07-28 14:33:30,174 p=4451 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 14:33:30,174 p=4451 u=ansible n=ansible | centos1                    : ok=7    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 14:33:30,174 p=4451 u=ansible n=ansible | centos2                    : ok=7    changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 14:33:30,174 p=4451 u=ansible n=ansible | ubuntu1                    : ok=14   changed=4    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-28 14:47:33,369 p=5195 u=ansible n=ansible | - Role install_nexus was created successfully
2023-07-28 15:19:49,478 p=5310 u=ansible n=ansible | ERROR! the playbook: playbook.yml could not be found
2023-07-28 15:19:59,599 p=5345 u=ansible n=ansible | PLAY [Nexus playbook] *******************************************************************************************************************************
2023-07-28 15:19:59,620 p=5345 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 15:20:00,957 p=5345 u=ansible n=ansible | ok: [centos2]
2023-07-28 15:20:00,965 p=5345 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ******************************************************************************************
2023-07-28 15:20:00,978 p=5345 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 15:20:00,981 p=5345 u=ansible n=ansible | TASK [install_nexus : Install Java] *****************************************************************************************************************
2023-07-28 15:20:39,737 p=5345 u=ansible n=ansible | changed: [centos2]
2023-07-28 15:20:39,740 p=5345 u=ansible n=ansible | TASK [install_nexus : Download Nexus repository configuration file] *********************************************************************************
2023-07-28 15:20:40,735 p=5345 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "dest": "/etc/yum.repos.d/nexus.repo", "elapsed": 0, "msg": "Request failed", "response": "HTTP Error 404: Not Found", "status_code": 404, "url": "https://raw.githubusercontent.com/sonatype-nexus-community/ansible-nexus3/master/files/nexus.repo"}
2023-07-28 15:20:40,736 p=5345 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 15:20:40,736 p=5345 u=ansible n=ansible | centos2                    : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 15:26:35,728 p=5511 u=ansible n=ansible | PLAY [Nexus playbook] *******************************************************************************************************************************
2023-07-28 15:26:35,748 p=5511 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 15:26:37,170 p=5511 u=ansible n=ansible | ok: [centos2]
2023-07-28 15:26:37,177 p=5511 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ******************************************************************************************
2023-07-28 15:26:37,188 p=5511 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 15:26:37,192 p=5511 u=ansible n=ansible | TASK [install_nexus : Update yum] *******************************************************************************************************************
2023-07-28 15:38:04,534 p=5511 u=ansible n=ansible | changed: [centos2]
2023-07-28 15:38:04,537 p=5511 u=ansible n=ansible | TASK [install_nexus : Install Java] *****************************************************************************************************************
2023-07-28 15:38:05,203 p=5511 u=ansible n=ansible | ok: [centos2]
2023-07-28 15:38:05,206 p=5511 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ******************************************************************************************
2023-07-28 15:38:05,212 p=5511 u=ansible n=ansible | skipping: [centos2]
2023-07-28 15:38:05,224 p=5511 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 15:38:05,224 p=5511 u=ansible n=ansible | centos2                    : ok=4    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 16:32:11,273 p=5719 u=ansible n=ansible | PLAY [Nexus playbook] *******************************************************************************************************************************
2023-07-28 16:32:11,294 p=5719 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 16:32:12,602 p=5719 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:32:12,609 p=5719 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ******************************************************************************************
2023-07-28 16:32:12,620 p=5719 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 16:32:12,623 p=5719 u=ansible n=ansible | TASK [install_nexus : Update yum] *******************************************************************************************************************
2023-07-28 16:32:13,363 p=5719 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:32:13,366 p=5719 u=ansible n=ansible | TASK [install_nexus : Install Java] *****************************************************************************************************************
2023-07-28 16:32:13,908 p=5719 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:32:13,911 p=5719 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **********************************************************************************************************
2023-07-28 16:35:40,952 p=5719 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "checksum_dest": null, "checksum_src": "99d0cb82471f2b39a6060369e77868dd1462b243", "dest": "/nexus/nexus.tar.gz", "elapsed": 206, "msg": "Destination /nexus does not exist", "src": "/root/.ansible/tmp/ansible-tmp-1690536733.939357-5802-109009253163400/tmpkkdxtme2", "url": "https://download.sonatype.com/nexus/3/latest-unix.tar.gz"}
2023-07-28 16:35:40,952 p=5719 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 16:35:40,952 p=5719 u=ansible n=ansible | centos2                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 16:35:58,548 p=5914 u=ansible n=ansible | PLAY [Nexus playbook] *******************************************************************************************************************************
2023-07-28 16:35:58,569 p=5914 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 16:35:59,723 p=5914 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:35:59,732 p=5914 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ******************************************************************************************
2023-07-28 16:35:59,745 p=5914 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 16:35:59,749 p=5914 u=ansible n=ansible | TASK [install_nexus : Update yum] *******************************************************************************************************************
2023-07-28 16:36:00,428 p=5914 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:36:00,431 p=5914 u=ansible n=ansible | TASK [install_nexus : Install Java] *****************************************************************************************************************
2023-07-28 16:36:00,971 p=5914 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:36:00,974 p=5914 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ************************************************************************************************
2023-07-28 16:36:01,270 p=5914 u=ansible n=ansible | changed: [centos2]
2023-07-28 16:36:01,273 p=5914 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **********************************************************************************************************
2023-07-28 16:38:37,457 p=5914 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 16:53:17,408 p=6098 u=ansible n=ansible | PLAY [Nexus playbook] *******************************************************************************************************************************
2023-07-28 16:53:17,429 p=6098 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 16:53:18,945 p=6098 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:53:18,953 p=6098 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ******************************************************************************************
2023-07-28 16:53:18,968 p=6098 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 16:53:18,972 p=6098 u=ansible n=ansible | TASK [install_nexus : Update yum] *******************************************************************************************************************
2023-07-28 16:53:19,714 p=6098 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:53:19,717 p=6098 u=ansible n=ansible | TASK [install_nexus : Install Java] *****************************************************************************************************************
2023-07-28 16:53:20,320 p=6098 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:53:20,323 p=6098 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ************************************************************************************************
2023-07-28 16:53:20,697 p=6098 u=ansible n=ansible | changed: [centos2]
2023-07-28 16:53:20,700 p=6098 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *****************************************************************************************
2023-07-28 16:53:21,015 p=6098 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:53:21,018 p=6098 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **********************************************************************************************************
2023-07-28 16:53:21,026 p=6098 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The conditional check 'nexus_download.stat.status == false' failed. The error was: error while evaluating conditional (nexus_download.stat.status == false): 'dict object' has no attribute 'status'. 'dict object' has no attribute 'status'\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 21, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Download nexus file\n  ^ here\n"}
2023-07-28 16:53:21,026 p=6098 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 16:53:21,026 p=6098 u=ansible n=ansible | centos2                    : ok=6    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 16:53:59,853 p=6255 u=ansible n=ansible | PLAY [Nexus playbook] *******************************************************************************************************************************
2023-07-28 16:53:59,876 p=6255 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 16:54:01,013 p=6255 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:54:01,022 p=6255 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ******************************************************************************************
2023-07-28 16:54:01,037 p=6255 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 16:54:01,041 p=6255 u=ansible n=ansible | TASK [install_nexus : Update yum] *******************************************************************************************************************
2023-07-28 16:54:01,726 p=6255 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:54:01,729 p=6255 u=ansible n=ansible | TASK [install_nexus : Install Java] *****************************************************************************************************************
2023-07-28 16:54:02,268 p=6255 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:54:02,271 p=6255 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ************************************************************************************************
2023-07-28 16:54:02,581 p=6255 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:54:02,584 p=6255 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *****************************************************************************************
2023-07-28 16:54:02,874 p=6255 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:54:02,877 p=6255 u=ansible n=ansible | TASK [install_nexus : debug] ************************************************************************************************************************
2023-07-28 16:54:02,885 p=6255 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': False, 'stat': {'exists': False}, 'failed': False}"
}
2023-07-28 16:54:02,889 p=6255 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **********************************************************************************************************
2023-07-28 16:54:02,897 p=6255 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The conditional check 'nexus_download.stat.status == false' failed. The error was: error while evaluating conditional (nexus_download.stat.status == false): 'dict object' has no attribute 'status'. 'dict object' has no attribute 'status'\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 24, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Download nexus file\n  ^ here\n"}
2023-07-28 16:54:02,898 p=6255 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 16:54:02,898 p=6255 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 16:55:43,418 p=6426 u=ansible n=ansible | PLAY [Nexus playbook] *******************************************************************************************************************************
2023-07-28 16:55:43,437 p=6426 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 16:55:44,652 p=6426 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:55:44,660 p=6426 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ******************************************************************************************
2023-07-28 16:55:44,674 p=6426 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 16:55:44,677 p=6426 u=ansible n=ansible | TASK [install_nexus : Update yum] *******************************************************************************************************************
2023-07-28 16:55:45,368 p=6426 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:55:45,371 p=6426 u=ansible n=ansible | TASK [install_nexus : Install Java] *****************************************************************************************************************
2023-07-28 16:55:45,911 p=6426 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:55:45,914 p=6426 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ************************************************************************************************
2023-07-28 16:55:46,210 p=6426 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:55:46,212 p=6426 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *****************************************************************************************
2023-07-28 16:55:46,502 p=6426 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:55:46,506 p=6426 u=ansible n=ansible | TASK [install_nexus : debug] ************************************************************************************************************************
2023-07-28 16:55:46,516 p=6426 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': False, 'stat': {'exists': False}, 'failed': False}"
}
2023-07-28 16:55:46,520 p=6426 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **********************************************************************************************************
2023-07-28 16:58:51,016 p=6426 u=ansible n=ansible | changed: [centos2]
2023-07-28 16:58:51,019 p=6426 u=ansible n=ansible | TASK [install_nexus : Check the nexus file is extracted] ********************************************************************************************
2023-07-28 16:58:51,248 p=6426 u=ansible n=ansible | ok: [centos2]
2023-07-28 16:58:51,253 p=6426 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *******************************************************************************************************
2023-07-28 16:58:51,327 p=6426 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-28 16:58:51,328 p=6426 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Could not find or access '/opt/nexus_dir/nexus.tar.gz' on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2023-07-28 16:58:51,328 p=6426 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 16:58:51,328 p=6426 u=ansible n=ansible | centos2                    : ok=9    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:01:03,386 p=6671 u=ansible n=ansible | PLAY [Nexus playbook] *******************************************************************************************************************************
2023-07-28 17:01:03,406 p=6671 u=ansible n=ansible | TASK [Gathering Facts] ******************************************************************************************************************************
2023-07-28 17:01:04,714 p=6671 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:01:04,721 p=6671 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ******************************************************************************************
2023-07-28 17:01:04,733 p=6671 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:01:04,736 p=6671 u=ansible n=ansible | TASK [install_nexus : Update yum] *******************************************************************************************************************
2023-07-28 17:01:05,412 p=6671 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:01:05,415 p=6671 u=ansible n=ansible | TASK [install_nexus : Install Java] *****************************************************************************************************************
2023-07-28 17:01:05,970 p=6671 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:01:05,972 p=6671 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ************************************************************************************************
2023-07-28 17:01:06,264 p=6671 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:01:06,267 p=6671 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *****************************************************************************************
2023-07-28 17:01:06,551 p=6671 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:01:06,554 p=6671 u=ansible n=ansible | TASK [install_nexus : debug] ************************************************************************************************************************
2023-07-28 17:01:06,562 p=6671 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': False, 'stat': {'exists': False}, 'failed': False}"
}
2023-07-28 17:01:06,566 p=6671 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **********************************************************************************************************
2023-07-28 17:01:08,379 p=6671 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:01:08,383 p=6671 u=ansible n=ansible | TASK [install_nexus : Check the nexus file is extracted] ********************************************************************************************
2023-07-28 17:01:08,668 p=6671 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:01:08,672 p=6671 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *******************************************************************************************************
2023-07-28 17:01:08,956 p=6671 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: NoneType: None
2023-07-28 17:01:08,956 p=6671 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "dest '/opt/nexus_dir/nexus' must be an existing dir"}
2023-07-28 17:01:08,957 p=6671 u=ansible n=ansible | PLAY RECAP ******************************************************************************************************************************************
2023-07-28 17:01:08,957 p=6671 u=ansible n=ansible | centos2                    : ok=9    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:15:29,641 p=7018 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:15:29,660 p=7018 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:15:31,058 p=7018 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:15:31,065 p=7018 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:15:31,076 p=7018 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:15:31,080 p=7018 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:15:31,966 p=7018 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:15:31,970 p=7018 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:15:32,679 p=7018 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:15:32,682 p=7018 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:15:32,979 p=7018 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:15:32,982 p=7018 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:15:33,264 p=7018 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:15:33,267 p=7018 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:15:34,871 p=7018 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:15:34,875 p=7018 u=ansible n=ansible | TASK [install_nexus : Create folder before extract] ***************************************************************************
2023-07-28 17:15:35,139 p=7018 u=ansible n=ansible | changed: [centos2]
2023-07-28 17:15:35,143 p=7018 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:15:40,201 p=7018 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "path b'/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop' does not exist", "path": "/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop"}
2023-07-28 17:15:40,202 p=7018 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:15:40,202 p=7018 u=ansible n=ansible | centos2                    : ok=8    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:17:40,014 p=7264 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:17:40,033 p=7264 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:17:41,331 p=7264 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:17:41,338 p=7264 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:17:41,349 p=7264 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:17:41,352 p=7264 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:17:42,180 p=7264 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:17:42,184 p=7264 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:17:42,756 p=7264 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:17:42,759 p=7264 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:17:43,052 p=7264 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:17:43,055 p=7264 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:17:43,338 p=7264 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:17:43,340 p=7264 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:17:44,905 p=7264 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:17:44,908 p=7264 u=ansible n=ansible | TASK [install_nexus : Create folder before extract] ***************************************************************************
2023-07-28 17:17:45,153 p=7264 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:17:45,157 p=7264 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:17:48,849 p=7264 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "path b'/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop' does not exist", "path": "/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop"}
2023-07-28 17:17:48,850 p=7264 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:17:48,850 p=7264 u=ansible n=ansible | centos2                    : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:20:00,906 p=7506 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:20:00,926 p=7506 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:20:02,284 p=7506 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:02,291 p=7506 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:20:02,305 p=7506 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:20:02,308 p=7506 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:20:02,964 p=7506 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:02,967 p=7506 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:20:03,505 p=7506 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:03,508 p=7506 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:20:03,798 p=7506 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:03,801 p=7506 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:20:04,087 p=7506 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:04,090 p=7506 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:20:05,780 p=7506 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:05,783 p=7506 u=ansible n=ansible | TASK [install_nexus : Create folder before extract] ***************************************************************************
2023-07-28 17:20:06,016 p=7506 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:06,019 p=7506 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:20:09,435 p=7506 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "path b'/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop' does not exist", "path": "/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop"}
2023-07-28 17:20:09,436 p=7506 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:20:09,436 p=7506 u=ansible n=ansible | centos2                    : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:20:34,132 p=7724 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:20:34,151 p=7724 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:20:35,231 p=7724 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:35,241 p=7724 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:20:35,257 p=7724 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:20:35,261 p=7724 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:20:35,962 p=7724 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:35,966 p=7724 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:20:36,580 p=7724 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:36,584 p=7724 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:20:36,923 p=7724 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:36,926 p=7724 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:20:37,244 p=7724 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:37,248 p=7724 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:20:38,834 p=7724 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:38,837 p=7724 u=ansible n=ansible | TASK [install_nexus : Create folder before extract] ***************************************************************************
2023-07-28 17:20:39,075 p=7724 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:20:39,078 p=7724 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:20:42,559 p=7724 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "path b'/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop' does not exist", "path": "/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop"}
2023-07-28 17:20:42,560 p=7724 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:20:42,560 p=7724 u=ansible n=ansible | centos2                    : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:22:39,475 p=7932 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:22:39,495 p=7932 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:22:40,904 p=7932 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:22:40,911 p=7932 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:22:40,923 p=7932 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:22:40,927 p=7932 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:22:41,632 p=7932 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:22:41,635 p=7932 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:22:42,213 p=7932 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:22:42,218 p=7932 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:22:42,582 p=7932 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:22:42,585 p=7932 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:22:42,908 p=7932 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:22:42,912 p=7932 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:22:44,455 p=7932 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:22:44,458 p=7932 u=ansible n=ansible | TASK [install_nexus : Create folder before extract] ***************************************************************************
2023-07-28 17:22:44,697 p=7932 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:22:44,700 p=7932 u=ansible n=ansible | TASK [install_nexus : Get nexus file name after extract] **********************************************************************
2023-07-28 17:22:45,075 p=7932 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:22:45,079 p=7932 u=ansible n=ansible | TASK [install_nexus : debug] **************************************************************************************************
2023-07-28 17:22:45,088 p=7932 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': False, 'stat': {'exists': False}, 'failed': False}"
}
2023-07-28 17:22:45,094 p=7932 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:22:48,670 p=7932 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "path b'/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop' does not exist", "path": "/opt/nexus_dir/nexus/-rw-r--r-- 0/0              68 2023-07-25 11:51 nexus-3.58.1-02/.install4j/9d17dc87.lprop"}
2023-07-28 17:22:48,670 p=7932 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:22:48,670 p=7932 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:30:29,490 p=8187 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:30:29,509 p=8187 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:30:30,915 p=8187 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:30:30,922 p=8187 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:30:30,934 p=8187 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:30:30,937 p=8187 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:30:31,827 p=8187 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:30:31,830 p=8187 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:30:32,460 p=8187 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:30:32,463 p=8187 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:30:32,785 p=8187 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:30:32,789 p=8187 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:30:33,119 p=8187 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:30:33,122 p=8187 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:30:34,867 p=8187 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:30:34,870 p=8187 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:30:38,369 p=8187 u=ansible n=ansible | changed: [centos2]
2023-07-28 17:30:38,372 p=8187 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************
2023-07-28 17:30:38,379 p=8187 u=ansible n=ansible | skipping: [centos2]
2023-07-28 17:30:38,390 p=8187 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:30:38,390 p=8187 u=ansible n=ansible | centos2                    : ok=8    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 17:31:28,620 p=8392 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:31:28,639 p=8392 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:31:29,808 p=8392 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:29,815 p=8392 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:31:29,828 p=8392 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:31:29,831 p=8392 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:31:30,637 p=8392 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:30,640 p=8392 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:31:31,222 p=8392 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:31,225 p=8392 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:31:31,519 p=8392 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:31,522 p=8392 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:31:31,802 p=8392 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:31,806 p=8392 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:31:33,260 p=8392 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:33,263 p=8392 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:31:33,493 p=8392 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: NoneType: None
2023-07-28 17:31:33,493 p=8392 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "dest '/opt/nexus_dir/nexus' must be an existing dir"}
2023-07-28 17:31:33,493 p=8392 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:31:33,494 p=8392 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:31:43,799 p=8568 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:31:43,819 p=8568 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:31:44,960 p=8568 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:44,967 p=8568 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:31:44,979 p=8568 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:31:44,982 p=8568 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:31:45,628 p=8568 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:45,631 p=8568 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:31:46,175 p=8568 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:46,178 p=8568 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:31:46,479 p=8568 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:46,482 p=8568 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:31:46,786 p=8568 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:46,789 p=8568 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:31:48,527 p=8568 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:31:48,530 p=8568 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:31:53,634 p=8568 u=ansible n=ansible | changed: [centos2]
2023-07-28 17:31:53,637 p=8568 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************
2023-07-28 17:31:53,644 p=8568 u=ansible n=ansible | skipping: [centos2]
2023-07-28 17:31:53,662 p=8568 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:31:53,662 p=8568 u=ansible n=ansible | centos2                    : ok=8    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 17:34:50,519 p=8777 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:34:50,538 p=8777 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:34:51,799 p=8777 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:34:51,806 p=8777 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:34:51,820 p=8777 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:34:51,823 p=8777 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:34:52,878 p=8777 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:34:52,881 p=8777 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:34:53,512 p=8777 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:34:53,516 p=8777 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:34:53,821 p=8777 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:34:53,824 p=8777 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:34:54,126 p=8777 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:34:54,129 p=8777 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:34:55,838 p=8777 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:34:55,841 p=8777 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:34:59,432 p=8777 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:34:59,434 p=8777 u=ansible n=ansible | TASK [install_nexus : Get the file name after extract] ************************************************************************
2023-07-28 17:34:59,725 p=8777 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:34:59,728 p=8777 u=ansible n=ansible | TASK [install_nexus : debug] **************************************************************************************************
2023-07-28 17:34:59,738 p=8777 u=ansible n=ansible | ok: [centos2] => {
    "msg": "name: {'files': [{'path': '/opt/nexus_dir/nexus-3.58.1-02', 'mode': '0755', 'isdir': True, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 0, 'size': 181, 'inode': 89679, 'dev': 64768, 'nlink': 10, 'atime': 1690540312.0389025, 'mtime': 1690540312.1889002, 'ctime': 1690540312.1889002, 'gr_name': 'root', 'pw_name': 'root', 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': False, 'rgrp': True, 'xgrp': True, 'woth': False, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False}], 'changed': False, 'msg': 'All paths examined', 'matched': 1, 'examined': 3, 'skipped_paths': {}, 'failed': False}"
}
2023-07-28 17:34:59,741 p=8777 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************
2023-07-28 17:34:59,748 p=8777 u=ansible n=ansible | skipping: [centos2]
2023-07-28 17:34:59,762 p=8777 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:34:59,762 p=8777 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 17:36:33,150 p=9021 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************************************
2023-07-28 17:36:33,168 p=9021 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************************************
2023-07-28 17:36:34,455 p=9021 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:34,462 p=9021 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************************************
2023-07-28 17:36:34,474 p=9021 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:36:34,477 p=9021 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************************************
2023-07-28 17:36:35,158 p=9021 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:35,161 p=9021 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************************************
2023-07-28 17:36:35,725 p=9021 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:35,728 p=9021 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************************************
2023-07-28 17:36:36,073 p=9021 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:36,077 p=9021 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************************************
2023-07-28 17:36:36,398 p=9021 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:36,402 p=9021 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************************************
2023-07-28 17:36:37,915 p=9021 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:37,919 p=9021 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************************************
2023-07-28 17:36:41,428 p=9021 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:41,431 p=9021 u=ansible n=ansible | TASK [install_nexus : Get the folder name after extract] **********************************************************************************************
2023-07-28 17:36:41,734 p=9021 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:41,737 p=9021 u=ansible n=ansible | TASK [install_nexus : debug] **************************************************************************************************************************
2023-07-28 17:36:41,745 p=9021 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'dict object' has no attribute 'path'. 'dict object' has no attribute 'path'\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 47, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- debug:\n  ^ here\n"}
2023-07-28 17:36:41,746 p=9021 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************************************
2023-07-28 17:36:41,747 p=9021 u=ansible n=ansible | centos2                    : ok=9    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:36:58,002 p=9263 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************************************
2023-07-28 17:36:58,022 p=9263 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************************************
2023-07-28 17:36:59,088 p=9263 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:59,095 p=9263 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************************************
2023-07-28 17:36:59,107 p=9263 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:36:59,110 p=9263 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************************************
2023-07-28 17:36:59,734 p=9263 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:36:59,737 p=9263 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************************************
2023-07-28 17:37:00,270 p=9263 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:37:00,272 p=9263 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************************************
2023-07-28 17:37:00,563 p=9263 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:37:00,566 p=9263 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************************************
2023-07-28 17:37:00,880 p=9263 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:37:00,883 p=9263 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************************************
2023-07-28 17:37:02,669 p=9263 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:37:02,673 p=9263 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************************************
2023-07-28 17:37:06,285 p=9263 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:37:06,288 p=9263 u=ansible n=ansible | TASK [install_nexus : Get the folder name after extract] **********************************************************************************************
2023-07-28 17:37:06,577 p=9263 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:37:06,580 p=9263 u=ansible n=ansible | TASK [install_nexus : debug] **************************************************************************************************************************
2023-07-28 17:37:06,591 p=9263 u=ansible n=ansible | ok: [centos2] => {
    "msg": "name: {'files': [{'path': '/opt/nexus_dir/nexus-3.58.1-02', 'mode': '0755', 'isdir': True, 'ischr': False, 'isblk': False, 'isreg': False, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 0, 'size': 181, 'inode': 89679, 'dev': 64768, 'nlink': 10, 'atime': 1690540312.0389025, 'mtime': 1690540312.1889002, 'ctime': 1690540312.1889002, 'gr_name': 'root', 'pw_name': 'root', 'wusr': True, 'rusr': True, 'xusr': True, 'wgrp': False, 'rgrp': True, 'xgrp': True, 'woth': False, 'roth': True, 'xoth': True, 'isuid': False, 'isgid': False}], 'changed': False, 'msg': 'All paths examined', 'matched': 1, 'examined': 3, 'skipped_paths': {}, 'failed': False}"
}
2023-07-28 17:37:06,594 p=9263 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************************************
2023-07-28 17:37:06,604 p=9263 u=ansible n=ansible | skipping: [centos2]
2023-07-28 17:37:06,618 p=9263 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************************************
2023-07-28 17:37:06,619 p=9263 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 17:42:17,650 p=9519 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:42:17,670 p=9519 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:42:18,981 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:18,988 p=9519 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:42:19,000 p=9519 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:42:19,003 p=9519 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:42:19,637 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:19,639 p=9519 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:42:20,195 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:20,199 p=9519 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:42:20,556 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:20,561 p=9519 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:42:20,876 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:20,879 p=9519 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:42:22,656 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:22,659 p=9519 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:42:26,191 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:26,194 p=9519 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:42:26,486 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:26,491 p=9519 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:42:26,521 p=9519 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:26,524 p=9519 u=ansible n=ansible | TASK [install_nexus : debug] **************************************************************************************************
2023-07-28 17:42:26,533 p=9519 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: ['nexus-3.58.1-02']"
}
2023-07-28 17:42:26,536 p=9519 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************
2023-07-28 17:42:26,545 p=9519 u=ansible n=ansible | skipping: [centos2]
2023-07-28 17:42:26,558 p=9519 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:42:26,558 p=9519 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 17:42:50,704 p=9744 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:42:50,724 p=9744 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:42:51,848 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:51,855 p=9744 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:42:51,867 p=9744 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:42:51,870 p=9744 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:42:52,534 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:52,537 p=9744 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:42:53,089 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:53,092 p=9744 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:42:53,401 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:53,404 p=9744 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:42:53,694 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:53,697 p=9744 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:42:55,262 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:55,265 p=9744 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:42:58,765 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:58,768 p=9744 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:42:59,088 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:59,117 p=9744 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:42:59,158 p=9744 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:42:59,164 p=9744 u=ansible n=ansible | TASK [install_nexus : debug] **************************************************************************************************
2023-07-28 17:42:59,179 p=9744 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: nexus-3.58.1-02"
}
2023-07-28 17:42:59,184 p=9744 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************
2023-07-28 17:42:59,194 p=9744 u=ansible n=ansible | skipping: [centos2]
2023-07-28 17:42:59,216 p=9744 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:42:59,217 p=9744 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 17:44:26,836 p=9961 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:44:26,856 p=9961 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:44:28,207 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:28,214 p=9961 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:44:28,225 p=9961 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:44:28,228 p=9961 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:44:28,900 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:28,910 p=9961 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:44:29,530 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:29,534 p=9961 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:44:29,875 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:29,878 p=9961 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:44:30,186 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:30,189 p=9961 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:44:31,735 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:31,738 p=9961 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:44:35,298 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:35,301 p=9961 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:44:35,611 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:35,614 p=9961 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:44:35,649 p=9961 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:44:35,654 p=9961 u=ansible n=ansible | TASK [install_nexus : debug] **************************************************************************************************
2023-07-28 17:44:35,666 p=9961 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: nexus-3.58.1-02"
}
2023-07-28 17:44:35,671 p=9961 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************
2023-07-28 17:44:35,681 p=9961 u=ansible n=ansible | skipping: [centos2]
2023-07-28 17:44:35,696 p=9961 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:44:35,696 p=9961 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 17:45:06,766 p=10205 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:45:06,785 p=10205 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:45:07,838 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:07,845 p=10205 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:45:07,858 p=10205 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:45:07,861 p=10205 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:45:08,493 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:08,496 p=10205 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:45:09,028 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:09,031 p=10205 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:45:09,324 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:09,327 p=10205 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:45:09,611 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:09,614 p=10205 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:45:11,188 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:11,191 p=10205 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:45:14,658 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:14,661 p=10205 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:45:14,953 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:14,956 p=10205 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:45:14,983 p=10205 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:14,987 p=10205 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:45:15,219 p=10205 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "src option requires state to be 'link' or 'hard'", "path": "/opt/nexus_dir/nexus"}
2023-07-28 17:45:15,220 p=10205 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:45:15,220 p=10205 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:45:36,617 p=10441 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:45:36,636 p=10441 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:45:37,835 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:37,842 p=10441 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:45:37,854 p=10441 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:45:37,857 p=10441 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:45:38,540 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:38,544 p=10441 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:45:39,149 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:39,152 p=10441 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:45:39,456 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:39,459 p=10441 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:45:39,746 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:39,749 p=10441 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:45:41,189 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:41,192 p=10441 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:45:44,659 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:44,662 p=10441 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:45:44,951 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:44,954 p=10441 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:45:44,979 p=10441 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:45:44,983 p=10441 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:45:45,220 p=10441 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "msg": "src option requires state to be 'link' or 'hard'", "owner": "root", "path": "/opt/nexus_dir/nexus-3.58.1-02", "secontext": "unconfined_u:object_r:usr_t:s0", "size": 181, "state": "directory", "uid": 0}
2023-07-28 17:45:45,221 p=10441 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:45:45,221 p=10441 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:47:26,840 p=10674 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:47:26,859 p=10674 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:47:28,178 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:28,185 p=10674 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:47:28,197 p=10674 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:47:28,200 p=10674 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:47:28,836 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:28,839 p=10674 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:47:29,375 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:29,378 p=10674 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:47:29,671 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:29,674 p=10674 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:47:29,956 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:29,959 p=10674 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:47:31,598 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:31,601 p=10674 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:47:35,212 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:35,217 p=10674 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:47:35,607 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:35,611 p=10674 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:47:35,644 p=10674 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:35,647 p=10674 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:47:35,931 p=10674 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (file) module: backup. Supported parameters include: _diff_peek, _original_basename, access_time, access_time_format, attributes, follow, force, group, mode, modification_time, modification_time_format, owner, path, recurse, selevel, serole, setype, seuser, src, state, unsafe_writes (attr, dest, name)."}
2023-07-28 17:47:35,932 p=10674 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:47:35,932 p=10674 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:47:56,027 p=10908 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:47:56,046 p=10908 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:47:57,189 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:57,196 p=10908 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:47:57,210 p=10908 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:47:57,213 p=10908 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:47:57,991 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:57,994 p=10908 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:47:58,575 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:58,578 p=10908 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:47:58,876 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:58,879 p=10908 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:47:59,174 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:47:59,177 p=10908 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:48:00,712 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:00,715 p=10908 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:48:04,196 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:04,198 p=10908 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:48:04,485 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:04,488 p=10908 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:48:04,514 p=10908 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:04,517 p=10908 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:48:04,748 p=10908 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (file) module: backup. Supported parameters include: _diff_peek, _original_basename, access_time, access_time_format, attributes, follow, force, group, mode, modification_time, modification_time_format, owner, path, recurse, selevel, serole, setype, seuser, src, state, unsafe_writes (attr, dest, name)."}
2023-07-28 17:48:04,749 p=10908 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:48:04,749 p=10908 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:48:42,326 p=11139 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:48:42,344 p=11139 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:48:43,484 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:43,491 p=11139 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:48:43,503 p=11139 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:48:43,506 p=11139 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:48:44,231 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:44,236 p=11139 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:48:44,854 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:44,857 p=11139 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:48:45,215 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:45,219 p=11139 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:48:45,544 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:45,550 p=11139 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:48:47,407 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:47,410 p=11139 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:48:50,876 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:50,879 p=11139 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:48:51,166 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:51,169 p=11139 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:48:51,194 p=11139 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:48:51,198 p=11139 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:48:51,430 p=11139 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "src option requires state to be 'link' or 'hard'", "path": "/opt/nexus_dir/nexus"}
2023-07-28 17:48:51,430 p=11139 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:48:51,431 p=11139 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:53:05,274 p=11373 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:53:05,294 p=11373 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:53:06,599 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:06,606 p=11373 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:53:06,619 p=11373 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:53:06,623 p=11373 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:53:07,263 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:07,266 p=11373 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:53:07,800 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:07,802 p=11373 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:53:08,096 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:08,099 p=11373 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:53:08,381 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:08,384 p=11373 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:53:10,010 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:10,014 p=11373 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:53:13,560 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:13,563 p=11373 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:53:13,869 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:13,872 p=11373 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:53:13,898 p=11373 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:53:13,902 p=11373 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:53:14,140 p=11373 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "src option requires state to be 'link' or 'hard'", "path": "/opt/nexus_dir/nexus"}
2023-07-28 17:53:14,141 p=11373 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:53:14,141 p=11373 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:56:07,225 p=11610 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:56:07,243 p=11610 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:56:08,582 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:08,590 p=11610 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:56:08,602 p=11610 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:56:08,606 p=11610 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:56:09,251 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:09,253 p=11610 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:56:09,798 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:09,801 p=11610 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:56:10,104 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:10,107 p=11610 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:56:10,392 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:10,395 p=11610 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:56:11,938 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:11,942 p=11610 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:56:15,655 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:15,658 p=11610 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:56:15,952 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:15,955 p=11610 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:56:15,980 p=11610 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:15,984 p=11610 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:56:16,217 p=11610 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "src option requires state to be 'link' or 'hard'", "path": "nexus"}
2023-07-28 17:56:16,217 p=11610 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:56:16,217 p=11610 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:56:40,473 p=11852 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:56:40,493 p=11852 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:56:41,578 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:41,584 p=11852 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:56:41,597 p=11852 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:56:41,599 p=11852 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:56:42,233 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:42,236 p=11852 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:56:42,767 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:42,770 p=11852 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:56:43,061 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:43,064 p=11852 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:56:43,346 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:43,349 p=11852 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:56:44,778 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:44,781 p=11852 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:56:48,338 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:48,341 p=11852 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:56:48,626 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:48,630 p=11852 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:56:48,655 p=11852 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:56:48,658 p=11852 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:56:48,892 p=11852 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Error while linking: [Errno 1] Operation not permitted: b'/opt/nexus_dir/nexus-3.58.1-02' -> b'/opt/nexus_dir/nexus'", "path": "/opt/nexus_dir/nexus"}
2023-07-28 17:56:48,892 p=11852 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:56:48,892 p=11852 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:57:52,641 p=12087 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:57:52,660 p=12087 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:57:53,909 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:57:53,916 p=12087 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:57:53,928 p=12087 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:57:53,930 p=12087 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:57:54,560 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:57:54,563 p=12087 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:57:55,108 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:57:55,110 p=12087 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:57:55,404 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:57:55,407 p=12087 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:57:55,692 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:57:55,695 p=12087 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:57:57,204 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:57:57,207 p=12087 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:58:00,679 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:00,683 p=12087 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:58:00,977 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:00,980 p=12087 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:58:01,006 p=12087 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:01,009 p=12087 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:58:01,248 p=12087 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "src option requires state to be 'link' or 'hard'", "path": "/opt/nexus_dir/nexus"}
2023-07-28 17:58:01,249 p=12087 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:58:01,249 p=12087 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 17:58:07,793 p=12311 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 17:58:07,812 p=12311 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 17:58:08,820 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:08,827 p=12311 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 17:58:08,840 p=12311 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 17:58:08,843 p=12311 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 17:58:09,474 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:09,477 p=12311 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 17:58:10,011 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:10,013 p=12311 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 17:58:10,307 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:10,310 p=12311 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 17:58:10,626 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:10,629 p=12311 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 17:58:12,393 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:12,397 p=12311 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 17:58:15,865 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:15,868 p=12311 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 17:58:16,156 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:16,159 p=12311 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 17:58:16,184 p=12311 u=ansible n=ansible | ok: [centos2]
2023-07-28 17:58:16,187 p=12311 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 17:58:16,422 p=12311 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Error while linking: [Errno 1] Operation not permitted: b'/opt/nexus_dir/nexus-3.58.1-02' -> b'/opt/nexus_dir/nexus'", "path": "/opt/nexus_dir/nexus"}
2023-07-28 17:58:16,423 p=12311 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 17:58:16,423 p=12311 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 18:00:44,006 p=12542 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 18:00:44,024 p=12542 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 18:00:45,323 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:45,330 p=12542 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 18:00:45,343 p=12542 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 18:00:45,346 p=12542 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 18:00:46,161 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:46,164 p=12542 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 18:00:46,846 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:46,850 p=12542 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 18:00:47,205 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:47,208 p=12542 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 18:00:47,513 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:47,516 p=12542 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 18:00:49,032 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:49,035 p=12542 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 18:00:52,515 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:52,518 p=12542 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 18:00:52,817 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:52,820 p=12542 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 18:00:52,845 p=12542 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:00:52,848 p=12542 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 18:00:53,108 p=12542 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "src option requires state to be 'link' or 'hard'", "path": "/opt/nexus_dir/nexus"}
2023-07-28 18:00:53,109 p=12542 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 18:00:53,109 p=12542 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 18:02:04,601 p=12788 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 18:02:04,620 p=12788 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 18:02:06,042 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:06,052 p=12788 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 18:02:06,071 p=12788 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 18:02:06,077 p=12788 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 18:02:06,864 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:06,867 p=12788 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 18:02:07,430 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:07,434 p=12788 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 18:02:07,770 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:07,773 p=12788 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 18:02:08,055 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:08,058 p=12788 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 18:02:09,582 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:09,586 p=12788 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 18:02:13,060 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:13,063 p=12788 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 18:02:13,356 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:13,359 p=12788 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 18:02:13,385 p=12788 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:02:13,389 p=12788 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 18:02:13,628 p=12788 u=ansible n=ansible | [WARNING]: Both option path and its alias dest are set.

2023-07-28 18:02:13,628 p=12788 u=ansible n=ansible | changed: [centos2]
2023-07-28 18:02:13,631 p=12788 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************
2023-07-28 18:02:13,638 p=12788 u=ansible n=ansible | skipping: [centos2]
2023-07-28 18:02:13,651 p=12788 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 18:02:13,651 p=12788 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 18:08:28,757 p=13040 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 18:08:28,778 p=13040 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 18:08:30,063 p=13040 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:08:30,070 p=13040 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 18:08:30,083 p=13040 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 18:08:30,086 p=13040 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 18:08:30,757 p=13040 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:08:30,760 p=13040 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 18:08:31,549 p=13040 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:08:31,552 p=13040 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 18:08:31,892 p=13040 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:08:31,895 p=13040 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 18:08:32,203 p=13040 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:08:32,206 p=13040 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 18:08:34,173 p=13040 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:08:34,176 p=13040 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 18:08:37,964 p=13040 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:08:37,967 p=13040 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 18:08:38,288 p=13040 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": "mv nexus-3* nexus", "delta": "0:00:00.002624", "end": "2023-07-28 18:08:38.252044", "msg": "non-zero return code", "rc": 1, "start": "2023-07-28 18:08:38.249420", "stderr": "mv: cannot stat 'nexus-3*': No such file or directory", "stderr_lines": ["mv: cannot stat 'nexus-3*': No such file or directory"], "stdout": "", "stdout_lines": []}
2023-07-28 18:08:38,288 p=13040 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 18:08:38,289 p=13040 u=ansible n=ansible | centos2                    : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 18:09:11,318 p=13260 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 18:09:11,336 p=13260 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 18:09:12,483 p=13260 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:12,492 p=13260 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 18:09:12,506 p=13260 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 18:09:12,510 p=13260 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 18:09:13,227 p=13260 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:13,230 p=13260 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 18:09:13,798 p=13260 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:13,803 p=13260 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 18:09:14,112 p=13260 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:14,115 p=13260 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 18:09:14,398 p=13260 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:14,401 p=13260 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 18:09:15,882 p=13260 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:15,885 p=13260 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 18:09:19,418 p=13260 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:19,421 p=13260 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 18:09:19,741 p=13260 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": "mv nexus* nexus", "delta": "0:00:00.001882", "end": "2023-07-28 18:09:19.707719", "msg": "non-zero return code", "rc": 1, "start": "2023-07-28 18:09:19.705837", "stderr": "mv: cannot stat 'nexus*': No such file or directory", "stderr_lines": ["mv: cannot stat 'nexus*': No such file or directory"], "stdout": "", "stdout_lines": []}
2023-07-28 18:09:19,742 p=13260 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 18:09:19,742 p=13260 u=ansible n=ansible | centos2                    : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 18:09:34,768 p=13463 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 18:09:34,786 p=13463 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 18:09:35,882 p=13463 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:35,889 p=13463 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 18:09:35,901 p=13463 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 18:09:35,903 p=13463 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 18:09:36,536 p=13463 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:36,539 p=13463 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 18:09:37,075 p=13463 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:37,078 p=13463 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 18:09:37,371 p=13463 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:37,374 p=13463 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 18:09:37,660 p=13463 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:37,664 p=13463 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 18:09:39,160 p=13463 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:39,163 p=13463 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 18:09:42,757 p=13463 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:09:42,760 p=13463 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 18:09:43,047 p=13463 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": "mv /opt/nexus_dir/nexus* /opt/nexus_dir/nexus", "delta": "0:00:00.001821", "end": "2023-07-28 18:09:43.014221", "msg": "non-zero return code", "rc": 1, "start": "2023-07-28 18:09:43.012400", "stderr": "mv: target '/opt/nexus_dir/nexus' is not a directory", "stderr_lines": ["mv: target '/opt/nexus_dir/nexus' is not a directory"], "stdout": "", "stdout_lines": []}
2023-07-28 18:09:43,048 p=13463 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 18:09:43,048 p=13463 u=ansible n=ansible | centos2                    : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 18:21:21,098 p=13726 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 18:21:21,118 p=13726 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 18:21:22,362 p=13726 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:21:22,369 p=13726 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 18:21:22,381 p=13726 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 18:21:22,384 p=13726 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 18:21:23,059 p=13726 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:21:23,062 p=13726 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 18:21:23,606 p=13726 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:21:23,609 p=13726 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 18:21:23,902 p=13726 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:21:23,905 p=13726 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 18:21:24,191 p=13726 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:21:24,194 p=13726 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 18:21:26,193 p=13726 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:21:26,197 p=13726 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 18:21:29,717 p=13726 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:21:29,720 p=13726 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 18:21:30,008 p=13726 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": ["mv", "/opt/nexus_dir/nexus*", "/opt/nexus_dir/nexus"], "delta": "0:00:00.001698", "end": "2023-07-28 18:21:29.974530", "msg": "non-zero return code", "rc": 1, "start": "2023-07-28 18:21:29.972832", "stderr": "mv: cannot stat '/opt/nexus_dir/nexus*': No such file or directory", "stderr_lines": ["mv: cannot stat '/opt/nexus_dir/nexus*': No such file or directory"], "stdout": "", "stdout_lines": []}
2023-07-28 18:21:30,008 p=13726 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 18:21:30,008 p=13726 u=ansible n=ansible | centos2                    : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 18:23:20,932 p=13946 u=ansible n=ansible | PLAY [Nexus playbook] *********************************************************************************************************
2023-07-28 18:23:20,951 p=13946 u=ansible n=ansible | TASK [Gathering Facts] ********************************************************************************************************
2023-07-28 18:23:22,249 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:22,259 p=13946 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] ********************************************************************
2023-07-28 18:23:22,274 p=13946 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 18:23:22,278 p=13946 u=ansible n=ansible | TASK [install_nexus : Update yum] *********************************************************************************************
2023-07-28 18:23:23,003 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:23,006 p=13946 u=ansible n=ansible | TASK [install_nexus : Install Java] *******************************************************************************************
2023-07-28 18:23:23,623 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:23,626 p=13946 u=ansible n=ansible | TASK [install_nexus : Create folder before download] **************************************************************************
2023-07-28 18:23:23,922 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:23,925 p=13946 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] *******************************************************************
2023-07-28 18:23:24,210 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:24,212 p=13946 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ************************************************************************************
2023-07-28 18:23:25,698 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:25,701 p=13946 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] *********************************************************************************
2023-07-28 18:23:29,171 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:29,174 p=13946 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ****************************************************************
2023-07-28 18:23:29,461 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:29,464 p=13946 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ************************************************************************
2023-07-28 18:23:29,489 p=13946 u=ansible n=ansible | ok: [centos2]
2023-07-28 18:23:29,492 p=13946 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] **************************************************************************************
2023-07-28 18:23:29,780 p=13946 u=ansible n=ansible | changed: [centos2]
2023-07-28 18:23:29,782 p=13946 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] ********************************************************************
2023-07-28 18:23:29,789 p=13946 u=ansible n=ansible | skipping: [centos2]
2023-07-28 18:23:29,800 p=13946 u=ansible n=ansible | PLAY RECAP ********************************************************************************************************************
2023-07-28 18:23:29,800 p=13946 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-28 20:58:41,035 p=2500 u=ansible n=ansible | ERROR! the playbook: playbook.yml could not be found
2023-07-28 20:58:47,872 p=2531 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 20:58:47,910 p=2531 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 20:58:49,259 p=2531 u=ansible n=ansible | ok: [centos2]
2023-07-28 20:58:49,266 p=2531 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 20:58:49,277 p=2531 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  found unacceptable key (unhashable type: 'AnsibleMapping')

The error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 23, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  get_url:
    url: {{nexus_url}}
          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2023-07-28 20:59:24,193 p=2621 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 20:59:24,212 p=2621 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 20:59:25,324 p=2621 u=ansible n=ansible | ok: [centos2]
2023-07-28 20:59:25,331 p=2621 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 20:59:25,344 p=2621 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 20:59:25,347 p=2621 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 20:59:26,100 p=2621 u=ansible n=ansible | ok: [centos2]
2023-07-28 20:59:26,103 p=2621 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 20:59:26,844 p=2621 u=ansible n=ansible | ok: [centos2]
2023-07-28 20:59:26,847 p=2621 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 20:59:27,191 p=2621 u=ansible n=ansible | ok: [centos2]
2023-07-28 20:59:27,194 p=2621 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] ****************************************************************************************
2023-07-28 20:59:27,488 p=2621 u=ansible n=ansible | ok: [centos2]
2023-07-28 20:59:27,491 p=2621 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 20:59:48,406 p=2621 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "dest": "/opt/nexus_dir/nexus.tar.gz", "elapsed": 20, "gid": 0, "group": "root", "mode": "0644", "msg": "Request failed: <urlopen error timed out>", "owner": "root", "secontext": "system_u:object_r:usr_t:s0", "size": 213495610, "state": "file", "uid": 0, "url": "https://download.sonatype.com/nexus/3/latest-unix.tar.gz"}
2023-07-28 20:59:48,407 p=2621 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 20:59:48,407 p=2621 u=ansible n=ansible | centos2                    : ok=6    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-28 21:00:45,938 p=2823 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 21:00:45,957 p=2823 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 21:00:47,023 p=2823 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:00:47,030 p=2823 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 21:00:47,043 p=2823 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 21:00:47,046 p=2823 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 21:00:47,741 p=2823 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:00:47,744 p=2823 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 21:00:48,348 p=2823 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:00:48,351 p=2823 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 21:00:48,646 p=2823 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:00:48,650 p=2823 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] ****************************************************************************************
2023-07-28 21:00:48,967 p=2823 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:00:48,972 p=2823 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 21:01:03,098 p=2823 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 21:01:22,387 p=3033 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 21:01:22,407 p=3033 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 21:01:23,526 p=3033 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:01:23,533 p=3033 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 21:01:23,545 p=3033 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 21:01:23,548 p=3033 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 21:01:24,277 p=3033 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:01:24,280 p=3033 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 21:01:24,838 p=3033 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:01:24,841 p=3033 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 21:01:25,160 p=3033 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:01:25,163 p=3033 u=ansible n=ansible | TASK [install_nexus : Check nexus download file is existed] ****************************************************************************************
2023-07-28 21:01:25,692 p=3033 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:01:25,696 p=3033 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 21:01:25,703 p=3033 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:01:25,709 p=3033 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 21:01:30,919 p=3033 u=ansible n=ansible | changed: [centos2]
2023-07-28 21:01:30,922 p=3033 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 21:01:31,231 p=3033 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:01:31,235 p=3033 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 21:01:31,266 p=3033 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:01:31,271 p=3033 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 21:01:31,566 p=3033 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": ["mv", "/opt/nexus_dir/nexus", "/opt/nexus_dir/nexus"], "delta": "0:00:00.002064", "end": "2023-07-28 19:31:46.842675", "msg": "non-zero return code", "rc": 1, "start": "2023-07-28 19:31:46.840611", "stderr": "mv: cannot move '/opt/nexus_dir/nexus' to a subdirectory of itself, '/opt/nexus_dir/nexus/nexus'", "stderr_lines": ["mv: cannot move '/opt/nexus_dir/nexus' to a subdirectory of itself, '/opt/nexus_dir/nexus/nexus'"], "stdout": "", "stdout_lines": []}
2023-07-28 21:01:31,567 p=3033 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 21:01:31,567 p=3033 u=ansible n=ansible | centos2                    : ok=9    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-28 21:09:45,681 p=3268 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 21:09:45,700 p=3268 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 21:09:47,142 p=3268 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:09:47,149 p=3268 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 21:09:47,162 p=3268 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 21:09:47,165 p=3268 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 21:09:47,963 p=3268 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:09:47,967 p=3268 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 21:09:48,653 p=3268 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:09:48,657 p=3268 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 21:09:48,960 p=3268 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:09:48,963 p=3268 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 21:09:49,460 p=3268 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:09:49,463 p=3268 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 21:09:49,470 p=3268 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:09:49,474 p=3268 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 21:09:53,019 p=3268 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:09:53,022 p=3268 u=ansible n=ansible | TASK [install_nexus : Check file was renamed] ******************************************************************************************************
2023-07-28 21:09:53,260 p=3268 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:09:53,263 p=3268 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 21:09:53,270 p=3268 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:09:53,274 p=3268 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 21:09:53,282 p=3268 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:09:53,285 p=3268 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 21:09:53,293 p=3268 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:09:53,296 p=3268 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 21:09:53,689 p=3268 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 21:09:53,689 p=3268 u=ansible n=ansible | changed: [centos2]
2023-07-28 21:09:53,692 p=3268 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 21:09:54,259 p=3268 u=ansible n=ansible | changed: [centos2]
2023-07-28 21:09:54,262 p=3268 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 21:09:54,499 p=3268 u=ansible n=ansible | changed: [centos2]
2023-07-28 21:09:54,502 p=3268 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 21:09:54,508 p=3268 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:09:54,520 p=3268 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 21:09:54,520 p=3268 u=ansible n=ansible | centos2                    : ok=11   changed=3    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2023-07-28 21:10:48,689 p=3543 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 21:10:48,710 p=3543 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 21:10:49,790 p=3543 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:10:49,797 p=3543 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 21:10:49,810 p=3543 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 21:10:49,814 p=3543 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 21:10:50,475 p=3543 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:10:50,478 p=3543 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 21:10:51,030 p=3543 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:10:51,033 p=3543 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 21:10:51,324 p=3543 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:10:51,327 p=3543 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 21:10:51,771 p=3543 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:10:51,774 p=3543 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 21:10:51,780 p=3543 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:10:51,784 p=3543 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 21:10:56,761 p=3543 u=ansible n=ansible | changed: [centos2]
2023-07-28 21:10:56,764 p=3543 u=ansible n=ansible | TASK [install_nexus : Check file was renamed] ******************************************************************************************************
2023-07-28 21:10:56,991 p=3543 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:10:56,994 p=3543 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 21:10:57,000 p=3543 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:10:57,004 p=3543 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 21:10:57,014 p=3543 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:10:57,019 p=3543 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 21:10:57,027 p=3543 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:10:57,031 p=3543 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 21:10:57,363 p=3543 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 21:10:57,363 p=3543 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:10:57,366 p=3543 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 21:10:57,895 p=3543 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:10:57,898 p=3543 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 21:10:58,140 p=3543 u=ansible n=ansible | changed: [centos2]
2023-07-28 21:10:58,143 p=3543 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 21:10:58,150 p=3543 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:10:58,161 p=3543 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 21:10:58,161 p=3543 u=ansible n=ansible | centos2                    : ok=11   changed=2    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
2023-07-28 21:18:37,700 p=3881 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 21:18:37,720 p=3881 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 21:18:39,025 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:39,033 p=3881 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 21:18:39,046 p=3881 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 21:18:39,049 p=3881 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 21:18:39,733 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:39,736 p=3881 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 21:18:40,486 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:40,489 p=3881 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 21:18:40,817 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:40,820 p=3881 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 21:18:41,253 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:41,257 p=3881 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 21:18:41,266 p=3881 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:18:41,270 p=3881 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 21:18:41,515 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:41,519 p=3881 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 21:18:41,526 p=3881 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:18:41,530 p=3881 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 21:18:41,540 p=3881 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:18:41,543 p=3881 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 21:18:41,553 p=3881 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:18:41,557 p=3881 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 21:18:41,565 p=3881 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:18:41,569 p=3881 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 21:18:41,927 p=3881 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 21:18:41,927 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:41,930 p=3881 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 21:18:42,482 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:42,485 p=3881 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 21:18:42,729 p=3881 u=ansible n=ansible | ok: [centos2]
2023-07-28 21:18:42,732 p=3881 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 21:18:42,739 p=3881 u=ansible n=ansible | skipping: [centos2]
2023-07-28 21:18:42,753 p=3881 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 21:18:42,753 p=3881 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 21:33:46,073 p=4285 u=ansible n=ansible | ERROR! Unable to read source file (/roles/install_nexus/vars/encrypt.yml): [Errno 2] No such file or directory: '/roles/install_nexus/vars/encrypt.yml'
2023-07-28 21:34:39,606 p=4428 u=ansible n=ansible | Encryption successful
2023-07-28 21:35:17,731 p=4516 u=ansible n=ansible | Decryption successful
2023-07-28 21:39:51,644 p=4581 u=ansible n=ansible | ERROR! input is not vault encrypted data. roles/install_nexus/vars/encrypt.yml is not a vault encrypted file for roles/install_nexus/vars/encrypt.yml
2023-07-28 21:39:59,853 p=4621 u=ansible n=ansible | Encryption successful
2023-07-28 21:40:22,731 p=4667 u=ansible n=ansible | Decryption successful
2023-07-28 21:44:49,453 p=4917 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/roles/install_nexus/vars/thanhnc85 was not found

2023-07-28 21:44:49,453 p=4917 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/roles/install_nexus/vars/thanhnc85 was not found
2023-07-28 21:45:39,374 p=5060 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/thanhnc85 was not found

2023-07-28 21:45:39,374 p=5060 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/thanhnc85 was not found
2023-07-28 21:46:16,439 p=5090 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/password was not found

2023-07-28 21:46:16,439 p=5090 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/password was not found
2023-07-28 21:46:29,535 p=5140 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/roles/install_nexus/vars/password was not found

2023-07-28 21:46:29,535 p=5140 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/roles/install_nexus/vars/password was not found
2023-07-28 21:46:43,824 p=5166 u=ansible n=ansible | Encryption successful
2023-07-28 21:47:35,035 p=5252 u=ansible n=ansible | Encryption successful
2023-07-28 21:49:51,327 p=5331 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 21:50:16,618 p=5331 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 21:50:24,002 p=5409 u=ansible n=ansible | ERROR! input is not vault encrypted data. /home/ansible/labs/roles/install_nexus/vars/main.yml is not a vault encrypted file for /home/ansible/labs/roles/install_nexus/vars/main.yml
2023-07-28 21:50:34,387 p=5435 u=ansible n=ansible | ERROR! Unable to read source file (/home/ansible/labs/roles/install_nexus/vars/password.yml): [Errno 2] No such file or directory: '/home/ansible/labs/roles/install_nexus/vars/password.yml'
2023-07-28 21:50:46,821 p=5474 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 21:51:04,115 p=5474 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 21:51:16,725 p=5548 u=ansible n=ansible | ERROR! input is not vault encrypted data. main.yml is not a vault encrypted file for main.yml
2023-07-28 21:51:38,252 p=5598 u=ansible n=ansible | ERROR! Unable to read source file (_password): [Errno 2] No such file or directory: '_password'
2023-07-28 21:52:33,817 p=5688 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)

2023-07-28 21:52:33,818 p=5688 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)
2023-07-28 21:52:55,815 p=5725 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)

2023-07-28 21:52:55,815 p=5725 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)
2023-07-28 21:53:05,932 p=5751 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)

2023-07-28 21:53:05,932 p=5751 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)
2023-07-28 21:53:12,139 p=5769 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)

2023-07-28 21:53:12,139 p=5769 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)
2023-07-28 21:53:30,594 p=5795 u=ansible n=ansible | The number of --name options do not match the number of args.
2023-07-28 21:53:30,595 p=5795 u=ansible n=ansible | The last named variable will be "_password". The rest will not have names.
2023-07-28 21:53:30,632 p=5795 u=ansible n=ansible | Encryption successful
2023-07-28 21:54:14,251 p=5835 u=ansible n=ansible | The number of --name options do not match the number of args.
2023-07-28 21:54:14,251 p=5835 u=ansible n=ansible | The last named variable will be "_password". The rest will not have names.
2023-07-28 21:54:14,285 p=5835 u=ansible n=ansible | Encryption successful
2023-07-28 21:54:20,509 p=5856 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)

2023-07-28 21:54:20,509 p=5856 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)
2023-07-28 21:55:38,627 p=5905 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)

2023-07-28 21:55:38,627 p=5905 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)
2023-07-28 21:55:41,362 p=5920 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)

2023-07-28 21:55:41,362 p=5920 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/nexus_user_password.yml)
2023-07-28 21:55:58,328 p=5946 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/roles/install_nexus/vars/password.yml was not
found

2023-07-28 21:55:58,328 p=5946 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/roles/install_nexus/vars/password.yml was not found
2023-07-28 21:56:35,902 p=5995 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/encrypt.yml)

2023-07-28 21:56:35,902 p=5995 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/encrypt.yml)
2023-07-28 21:56:42,393 p=6035 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/encrypt.yml)

2023-07-28 21:56:42,393 p=6035 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/encrypt.yml)
2023-07-28 21:56:56,913 p=6072 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/encrypt.yml)

2023-07-28 21:56:56,913 p=6072 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/encrypt.yml)
2023-07-28 21:57:19,306 p=6098 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/encrypt.yml)

2023-07-28 21:57:19,306 p=6098 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/encrypt.yml)
2023-07-28 21:57:41,480 p=6125 u=ansible n=ansible | The number of --name options do not match the number of args.
2023-07-28 21:57:41,480 p=6125 u=ansible n=ansible | The last named variable will be "_password". The rest will not have names.
2023-07-28 21:57:41,517 p=6125 u=ansible n=ansible | Encryption successful
2023-07-28 21:58:02,725 p=6178 u=ansible n=ansible | ERROR! input is not vault encrypted data. encrypt.yml is not a vault encrypted file for encrypt.yml
2023-07-28 21:58:49,413 p=6238 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 22:01:09,180 p=6304 u=ansible n=ansible | Encryption successful
2023-07-28 22:01:42,124 p=6371 u=ansible n=ansible | Decryption successful
2023-07-28 22:01:50,688 p=6375 u=ansible n=ansible | Encryption successful
2023-07-28 22:11:12,575 p=6494 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/roles/install_nexus/vars/vault_password.txt was
not found

2023-07-28 22:11:12,575 p=6494 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/roles/install_nexus/vars/vault_password.txt was not found
2023-07-28 22:11:30,324 p=6532 u=ansible n=ansible | [WARNING]: Error in vault password file loading (default): Invalid vault password was provided from file
(/home/ansible/labs/roles/install_nexus/vars/vault_password.txt)

2023-07-28 22:11:30,325 p=6532 u=ansible n=ansible | ERROR! Invalid vault password was provided from file (/home/ansible/labs/roles/install_nexus/vars/vault_password.txt)
2023-07-28 22:13:35,756 p=6610 u=ansible n=ansible | Encryption successful
2023-07-28 22:14:11,670 p=6704 u=ansible n=ansible | ERROR! Decryption failed (no vault secrets were found that could decrypt) on nexus_user_password.yml for nexus_user_password.yml
2023-07-28 22:16:51,036 p=6784 u=ansible n=ansible | Decryption successful
2023-07-28 22:18:34,885 p=6894 u=ansible n=ansible | Encryption successful
2023-07-28 22:19:45,639 p=6980 u=ansible n=ansible | ERROR! the playbook: playbook.yml could not be found
2023-07-28 22:19:51,540 p=6984 u=ansible n=ansible | ERROR! the playbook: playbook.yml could not be found
2023-07-28 22:20:02,791 p=7019 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/vault_password was not found

2023-07-28 22:20:02,791 p=7019 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/vault_password was not found
2023-07-28 22:20:10,374 p=7046 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/vault_password.txt was not found

2023-07-28 22:20:10,374 p=7046 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/vault_password.txt was not found
2023-07-28 22:20:29,324 p=7061 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/vault_password was not found

2023-07-28 22:20:29,324 p=7061 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/vault_password was not found
2023-07-28 22:20:31,755 p=7076 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:20:31,776 p=7076 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:20:33,238 p=7076 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:20:33,245 p=7076 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:20:33,260 p=7076 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:20:33,263 p=7076 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:20:34,030 p=7076 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:20:34,033 p=7076 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:20:34,587 p=7076 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:20:34,590 p=7076 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:20:34,899 p=7076 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:20:34,902 p=7076 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:20:35,398 p=7076 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:20:35,401 p=7076 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:20:35,408 p=7076 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:20:35,412 p=7076 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:20:35,651 p=7076 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:20:35,654 p=7076 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:20:35,660 p=7076 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:20:35,663 p=7076 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:20:35,673 p=7076 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:20:35,677 p=7076 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:20:35,699 p=7076 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:20:35,702 p=7076 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:20:35,711 p=7076 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:20:35,716 p=7076 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:20:35,724 p=7076 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'nexus_user_password' is undefined. 'nexus_user_password' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 57, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Print decrypted variable\n  ^ here\n"}
2023-07-28 22:20:35,725 p=7076 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:20:35,725 p=7076 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:22:18,460 p=7325 u=ansible n=ansible | Decryption successful
2023-07-28 22:23:10,329 p=7423 u=ansible n=ansible | Encryption successful
2023-07-28 22:23:25,803 p=7477 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:23:25,821 p=7477 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:23:27,123 p=7477 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:27,130 p=7477 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:23:27,143 p=7477 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:23:27,147 p=7477 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:23:27,795 p=7477 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:27,799 p=7477 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:23:28,337 p=7477 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:28,340 p=7477 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:23:28,633 p=7477 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:28,636 p=7477 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:23:29,045 p=7477 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:29,049 p=7477 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:23:29,055 p=7477 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:29,058 p=7477 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:23:29,292 p=7477 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:29,295 p=7477 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:23:29,302 p=7477 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:29,305 p=7477 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:23:29,312 p=7477 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:29,316 p=7477 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:23:29,323 p=7477 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:29,327 p=7477 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:23:29,335 p=7477 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:29,338 p=7477 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:23:29,346 p=7477 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'nexus_user_password' is undefined. 'nexus_user_password' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 57, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Print decrypted variable\n  ^ here\n"}
2023-07-28 22:23:29,347 p=7477 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:23:29,347 p=7477 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:23:55,959 p=7643 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:23:55,980 p=7643 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:23:57,107 p=7643 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:57,114 p=7643 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:23:57,128 p=7643 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:23:57,131 p=7643 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:23:57,772 p=7643 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:57,775 p=7643 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:23:58,322 p=7643 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:58,325 p=7643 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:23:58,624 p=7643 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:58,626 p=7643 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:23:59,064 p=7643 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:59,067 p=7643 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:23:59,073 p=7643 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:59,077 p=7643 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:23:59,311 p=7643 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:23:59,314 p=7643 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:23:59,320 p=7643 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:59,324 p=7643 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:23:59,332 p=7643 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:59,336 p=7643 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:23:59,344 p=7643 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:59,347 p=7643 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:23:59,355 p=7643 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:23:59,359 p=7643 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:23:59,366 p=7643 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'nexus_user_password' is undefined. 'nexus_user_password' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 57, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Print decrypted variable\n  ^ here\n"}
2023-07-28 22:23:59,367 p=7643 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:23:59,367 p=7643 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:24:52,801 p=7836 u=ansible n=ansible | ERROR! Attempting to decrypt but no vault secrets found
2023-07-28 22:25:01,197 p=7874 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:25:01,222 p=7874 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:25:02,507 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:02,535 p=7874 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:25:02,560 p=7874 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:25:02,577 p=7874 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:25:03,306 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:03,316 p=7874 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:25:04,003 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:04,013 p=7874 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:25:04,408 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:04,417 p=7874 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:25:04,870 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:04,879 p=7874 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:25:04,885 p=7874 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:25:04,895 p=7874 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:25:05,154 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:05,166 p=7874 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:25:05,177 p=7874 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:25:05,188 p=7874 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:25:05,200 p=7874 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:25:05,213 p=7874 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:25:05,222 p=7874 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:25:05,233 p=7874 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:25:05,240 p=7874 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:25:05,251 p=7874 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:25:05,263 p=7874 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: 123456"
}
2023-07-28 22:25:05,275 p=7874 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:25:05,625 p=7874 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:25:05,626 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:05,635 p=7874 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:25:06,183 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:06,192 p=7874 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:25:06,429 p=7874 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:25:06,438 p=7874 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:25:06,447 p=7874 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:25:06,491 p=7874 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:25:06,492 p=7874 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:26:21,076 p=8108 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:26:21,102 p=8108 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:26:22,393 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:26:22,420 p=8108 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:26:22,439 p=8108 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:26:22,455 p=8108 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:26:23,159 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:26:23,168 p=8108 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:26:23,744 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:26:23,753 p=8108 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:26:24,146 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:26:24,158 p=8108 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:26:24,623 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:26:24,632 p=8108 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:26:24,639 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:26:24,649 p=8108 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:26:24,903 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:26:24,912 p=8108 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:26:24,920 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:26:24,930 p=8108 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:26:24,938 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:26:24,948 p=8108 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:26:24,955 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:26:24,966 p=8108 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:26:24,974 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:26:24,985 p=8108 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:26:24,994 p=8108 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: 123456"
}
2023-07-28 22:26:25,004 p=8108 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:26:25,632 p=8108 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:26:25,632 p=8108 u=ansible n=ansible | changed: [centos2]
2023-07-28 22:26:25,644 p=8108 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:26:26,315 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:26:26,327 p=8108 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:26:26,585 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:26:26,594 p=8108 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:26:26,602 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:26:26,646 p=8108 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:26:26,647 p=8108 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:27:53,140 p=8361 u=ansible n=ansible | Decryption successful
2023-07-28 22:29:56,274 p=8547 u=ansible n=ansible | Encryption successful
2023-07-28 22:35:35,092 p=9040 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:35:48,206 p=9040 u=ansible n=ansible | [WARNING]: 
There was a vault format error in -: Vault format unhexlify error: Non-hexadecimal digit found
2023-07-28 22:35:48,206 p=9040 u=ansible n=ansible | ERROR! Vault format unhexlify error: Non-hexadecimal digit found for -
2023-07-28 22:36:03,226 p=9122 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:36:16,116 p=9122 u=ansible n=ansible | [WARNING]: 
There was a vault format error in -: Vault format unhexlify error: Odd-length string
2023-07-28 22:36:16,116 p=9122 u=ansible n=ansible | ERROR! Vault format unhexlify error: Odd-length string for -
2023-07-28 22:36:43,095 p=9220 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:36:49,892 p=9220 u=ansible n=ansible | Decryption successful
2023-07-28 22:37:03,510 p=9314 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:37:18,240 p=9314 u=ansible n=ansible | [WARNING]: 
There was a vault format error in -: Vault format unhexlify error: Odd-length string
2023-07-28 22:37:18,240 p=9314 u=ansible n=ansible | ERROR! Vault format unhexlify error: Odd-length string for -
2023-07-28 22:37:28,588 p=9423 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:37:39,035 p=9423 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 22:37:47,724 p=9528 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:37:55,362 p=9528 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 22:38:00,378 p=9602 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:38:04,506 p=9602 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-28 22:38:11,635 p=9647 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:38:20,382 p=9647 u=ansible n=ansible | [WARNING]: 
There was a vault format error in -: Vault format unhexlify error: Odd-length string
2023-07-28 22:38:20,382 p=9647 u=ansible n=ansible | ERROR! Vault format unhexlify error: Odd-length string for -
2023-07-28 22:38:26,318 p=9720 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:38:30,649 p=9720 u=ansible n=ansible | Decryption successful
2023-07-28 22:39:54,211 p=9861 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  could not find expected ':'

The error appears to be in '/home/ansible/labs/roles/install_nexus/vars/sensitive.yml': line 3, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

$ANSIBLE_VAULT;1.1;AES256
37613737323139383435353833363966626361633737376537663337316530663031336537363366
^ here

2023-07-28 22:40:31,275 p=9892 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:40:31,295 p=9892 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:40:32,734 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:32,741 p=9892 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:40:32,754 p=9892 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:40:32,757 p=9892 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:40:33,580 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:33,584 p=9892 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:40:34,206 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:34,209 p=9892 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:40:34,502 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:34,505 p=9892 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:40:35,035 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:35,043 p=9892 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:40:35,057 p=9892 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:35,062 p=9892 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:40:35,375 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:35,380 p=9892 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:40:35,389 p=9892 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:35,395 p=9892 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:40:35,403 p=9892 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:35,408 p=9892 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:40:35,421 p=9892 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:35,456 p=9892 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:40:35,477 p=9892 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:35,483 p=9892 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:40:35,503 p=9892 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: 123456"
}
2023-07-28 22:40:35,512 p=9892 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:40:35,886 p=9892 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:40:35,886 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:35,889 p=9892 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:40:36,424 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:36,426 p=9892 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:40:36,664 p=9892 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:36,667 p=9892 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:40:36,673 p=9892 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:36,687 p=9892 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:40:36,688 p=9892 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:40:53,977 p=10133 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:40:53,997 p=10133 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:40:55,084 p=10133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:55,092 p=10133 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:40:55,106 p=10133 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:40:55,110 p=10133 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:40:55,749 p=10133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:55,752 p=10133 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:40:56,292 p=10133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:56,295 p=10133 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:40:56,592 p=10133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:56,595 p=10133 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:40:57,005 p=10133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:57,009 p=10133 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:40:57,014 p=10133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:57,019 p=10133 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:40:57,250 p=10133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:57,253 p=10133 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:40:57,260 p=10133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:57,264 p=10133 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:40:57,272 p=10133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:57,276 p=10133 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:40:57,283 p=10133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:57,286 p=10133 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:40:57,296 p=10133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:57,300 p=10133 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:40:57,318 p=10133 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: 123456"
}
2023-07-28 22:40:57,322 p=10133 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:40:57,691 p=10133 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:40:57,691 p=10133 u=ansible n=ansible | changed: [centos2]
2023-07-28 22:40:57,694 p=10133 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:40:58,227 p=10133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:58,230 p=10133 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:40:58,475 p=10133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:40:58,479 p=10133 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:40:58,484 p=10133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:40:58,498 p=10133 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:40:58,498 p=10133 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:41:39,796 p=10365 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:41:39,816 p=10365 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:41:40,891 p=10365 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:41:40,899 p=10365 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:41:40,912 p=10365 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:41:40,916 p=10365 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:41:41,559 p=10365 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:41:41,562 p=10365 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:41:42,112 p=10365 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:41:42,115 p=10365 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:41:42,413 p=10365 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:41:42,416 p=10365 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:41:42,827 p=10365 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:41:42,831 p=10365 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:41:42,837 p=10365 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:41:42,840 p=10365 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:41:43,078 p=10365 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:41:43,081 p=10365 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:41:43,087 p=10365 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:41:43,091 p=10365 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:41:43,100 p=10365 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:41:43,104 p=10365 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:41:43,112 p=10365 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:41:43,117 p=10365 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:41:43,125 p=10365 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:41:43,129 p=10365 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:41:43,139 p=10365 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-28 22:41:43,140 p=10365 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:41:43,140 p=10365 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:42:25,907 p=10536 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:42:25,926 p=10536 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:42:26,978 p=10536 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:42:26,985 p=10536 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:42:26,999 p=10536 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:42:27,003 p=10536 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:42:27,642 p=10536 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:42:27,645 p=10536 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:42:28,187 p=10536 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:42:28,190 p=10536 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:42:28,484 p=10536 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:42:28,487 p=10536 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:42:28,918 p=10536 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:42:28,921 p=10536 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:42:28,928 p=10536 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:42:28,931 p=10536 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:42:29,159 p=10536 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:42:29,162 p=10536 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:42:29,169 p=10536 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:42:29,173 p=10536 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:42:29,180 p=10536 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:42:29,184 p=10536 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:42:29,193 p=10536 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:42:29,197 p=10536 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:42:29,206 p=10536 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:42:29,210 p=10536 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:42:29,217 p=10536 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-28 22:42:29,219 p=10536 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:42:29,219 p=10536 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:43:08,825 p=10704 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:43:08,844 p=10704 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:43:09,928 p=10704 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:43:09,935 p=10704 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:43:09,950 p=10704 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:43:09,953 p=10704 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:43:10,610 p=10704 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:43:10,613 p=10704 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:43:11,232 p=10704 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:43:11,235 p=10704 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:43:11,540 p=10704 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:43:11,543 p=10704 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:43:11,959 p=10704 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:43:11,962 p=10704 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:43:11,970 p=10704 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:43:11,976 p=10704 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:43:12,342 p=10704 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:43:12,346 p=10704 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:43:12,357 p=10704 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:43:12,361 p=10704 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:43:12,373 p=10704 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:43:12,377 p=10704 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:43:12,389 p=10704 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:43:12,395 p=10704 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:43:12,405 p=10704 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:43:12,409 p=10704 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:43:12,434 p=10704 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: $ANSIBLE_VAULT;1.1;AES256 37613737323139383435353833363966626361633737376537663337316530663031336537363366 3732613833383833623262663935343234613639386131340a383139306334366266303838633362 63326638653032383561353666366363613564616636383436636439393538333839313066346663 6135353966363439620a383565646366666163643236343064386538363533333431656638373832 3563"
}
2023-07-28 22:43:12,438 p=10704 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:43:12,843 p=10704 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:43:12,843 p=10704 u=ansible n=ansible | changed: [centos2]
2023-07-28 22:43:12,848 p=10704 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:43:13,478 p=10704 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:43:13,481 p=10704 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:43:13,741 p=10704 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:43:13,745 p=10704 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:43:13,758 p=10704 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:43:13,788 p=10704 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:43:13,788 p=10704 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:44:16,566 p=10924 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:44:46,746 p=10924 u=ansible n=ansible | Decryption successful
2023-07-28 22:45:09,717 p=11031 u=ansible n=ansible | Reading ciphertext input from stdin
2023-07-28 22:45:14,125 p=11031 u=ansible n=ansible | ERROR! AES256376137373231393834353538333639666263616337373765376633373165306630313365373633663732613833383833623262663935343234613639386131340a383139306334366266303838633362633266386530323835613536663663636135646166363834366364393935383338393130663466636135353966363439620a3835656463666661636432363430643865383635333334316566383738323563 cipher could not be found for -
2023-07-28 22:45:33,350 p=11153 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:45:33,372 p=11153 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:45:34,779 p=11153 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:45:34,787 p=11153 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:45:34,799 p=11153 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:45:34,802 p=11153 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:45:35,467 p=11153 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:45:35,470 p=11153 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:45:36,200 p=11153 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:45:36,203 p=11153 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:45:36,506 p=11153 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:45:36,510 p=11153 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:45:36,963 p=11153 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:45:36,966 p=11153 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:45:36,972 p=11153 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:45:36,975 p=11153 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:45:37,220 p=11153 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:45:37,223 p=11153 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:45:37,230 p=11153 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:45:37,234 p=11153 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:45:37,245 p=11153 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:45:37,251 p=11153 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:45:37,262 p=11153 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:45:37,267 p=11153 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:45:37,278 p=11153 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:45:37,282 p=11153 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:45:37,296 p=11153 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: $ANSIBLE_VAULT;1.1;AES256 37613737323139383435353833363966626361633737376537663337316530663031336537363366 3732613833383833623262663935343234613639386131340a383139306334366266303838633362 63326638653032383561353666366363613564616636383436636439393538333839313066346663 6135353966363439620a383565646366666163643236343064386538363533333431656638373832 3563"
}
2023-07-28 22:45:37,300 p=11153 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:45:37,673 p=11153 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:45:37,673 p=11153 u=ansible n=ansible | changed: [centos2]
2023-07-28 22:45:37,676 p=11153 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:45:38,207 p=11153 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:45:38,210 p=11153 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:45:38,452 p=11153 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:45:38,455 p=11153 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:45:38,462 p=11153 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:45:38,478 p=11153 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:45:38,478 p=11153 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:47:09,056 p=11396 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:47:09,075 p=11396 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:47:10,348 p=11396 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:47:10,356 p=11396 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:47:10,369 p=11396 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:47:10,372 p=11396 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:47:11,102 p=11396 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:47:11,105 p=11396 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:47:11,730 p=11396 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:47:11,734 p=11396 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:47:12,027 p=11396 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:47:12,030 p=11396 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:47:12,599 p=11396 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:47:12,603 p=11396 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:47:12,611 p=11396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:47:12,615 p=11396 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:47:12,872 p=11396 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:47:12,876 p=11396 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:47:12,883 p=11396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:47:12,887 p=11396 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:47:12,895 p=11396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:47:12,899 p=11396 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:47:12,907 p=11396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:47:12,911 p=11396 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:47:12,919 p=11396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:47:12,924 p=11396 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:47:12,932 p=11396 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-28 22:47:12,933 p=11396 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:47:12,933 p=11396 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:49:00,482 p=11584 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:49:00,503 p=11584 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:49:01,812 p=11584 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:01,819 p=11584 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:49:01,833 p=11584 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:49:01,837 p=11584 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:49:02,483 p=11584 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:02,486 p=11584 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:49:03,039 p=11584 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:03,042 p=11584 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:49:03,342 p=11584 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:03,345 p=11584 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:49:03,762 p=11584 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:03,765 p=11584 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:49:03,771 p=11584 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:03,774 p=11584 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:49:04,010 p=11584 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:04,013 p=11584 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:49:04,019 p=11584 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:04,022 p=11584 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:49:04,031 p=11584 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:04,035 p=11584 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:49:04,044 p=11584 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:04,048 p=11584 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:49:04,056 p=11584 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:04,060 p=11584 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:49:04,077 p=11584 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: 123456"
}
2023-07-28 22:49:04,081 p=11584 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:49:04,456 p=11584 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:49:04,456 p=11584 u=ansible n=ansible | changed: [centos2]
2023-07-28 22:49:04,459 p=11584 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:49:04,990 p=11584 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:04,993 p=11584 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:49:05,234 p=11584 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:05,237 p=11584 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:49:05,243 p=11584 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:05,257 p=11584 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:49:05,257 p=11584 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:49:39,808 p=11849 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:49:39,827 p=11849 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:49:40,883 p=11849 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:40,891 p=11849 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:49:40,906 p=11849 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:49:40,910 p=11849 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:49:41,546 p=11849 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:41,549 p=11849 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:49:42,091 p=11849 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:42,094 p=11849 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:49:42,387 p=11849 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:42,390 p=11849 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:49:42,799 p=11849 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:42,802 p=11849 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:49:42,809 p=11849 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:42,813 p=11849 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:49:43,046 p=11849 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:49:43,049 p=11849 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:49:43,056 p=11849 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:43,060 p=11849 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:49:43,067 p=11849 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:43,072 p=11849 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:49:43,080 p=11849 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:43,084 p=11849 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:49:43,093 p=11849 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:49:43,096 p=11849 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:49:43,104 p=11849 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-28 22:49:43,105 p=11849 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:49:43,105 p=11849 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:50:12,375 p=12007 u=ansible n=ansible | [DEPRECATION WARNING]: Specifying a list of dictionaries for vars is deprecated in favor of specifying a dictionary. This feature will be removed 
in version 2.18. Deprecation warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
2023-07-28 22:50:12,375 p=12007 u=ansible n=ansible | ERROR! Vars in a Play must be specified as a dictionary

The error appears to be in '/home/ansible/labs/playbook.yml': line 16, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  vars:
    - roles/install_nexus/vars/sensitive.yml
    ^ here

2023-07-28 22:50:41,102 p=12037 u=ansible n=ansible | ERROR! 'include_vars' is not a valid attribute for a Play

The error appears to be in '/home/ansible/labs/playbook.yml': line 13, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Nexus playbook
  ^ here

2023-07-28 22:50:58,847 p=12065 u=ansible n=ansible | ERROR! Invalid vars_files entry found: {'file': 'roles/install_nexus/vars/sensitive.yml'}
vars_files entries should be either a string type or a list of string types after template expansion
2023-07-28 22:51:16,395 p=12092 u=ansible n=ansible | ERROR! 'include_vars' is not a valid attribute for a Play

The error appears to be in '/home/ansible/labs/playbook.yml': line 13, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Nexus playbook
  ^ here

2023-07-28 22:53:03,362 p=12133 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:53:03,382 p=12133 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:53:04,663 p=12133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:04,671 p=12133 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:53:04,684 p=12133 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:53:04,688 p=12133 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:53:05,329 p=12133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:05,332 p=12133 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:53:05,874 p=12133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:05,877 p=12133 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:53:06,182 p=12133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:06,185 p=12133 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:53:06,600 p=12133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:06,603 p=12133 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:53:06,610 p=12133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:06,614 p=12133 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:53:06,844 p=12133 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:06,848 p=12133 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:53:06,856 p=12133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:06,860 p=12133 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:53:06,867 p=12133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:06,871 p=12133 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:53:06,881 p=12133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:06,885 p=12133 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:53:06,895 p=12133 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:06,900 p=12133 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:53:06,912 p=12133 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-28 22:53:06,913 p=12133 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:53:06,913 p=12133 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:53:26,960 p=12308 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:53:26,979 p=12308 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:53:28,083 p=12308 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:28,091 p=12308 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:53:28,104 p=12308 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:53:28,109 p=12308 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:53:28,782 p=12308 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:28,785 p=12308 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:53:29,353 p=12308 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:29,356 p=12308 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:53:29,666 p=12308 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:29,670 p=12308 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:53:30,081 p=12308 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:30,084 p=12308 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:53:30,090 p=12308 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:30,094 p=12308 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:53:30,321 p=12308 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:30,325 p=12308 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:53:30,332 p=12308 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:30,335 p=12308 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:53:30,342 p=12308 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:30,346 p=12308 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:53:30,352 p=12308 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:30,357 p=12308 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:53:30,365 p=12308 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:30,369 p=12308 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:53:30,735 p=12308 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:53:30,735 p=12308 u=ansible n=ansible | changed: [centos2]
2023-07-28 22:53:30,738 p=12308 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:53:31,268 p=12308 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:31,271 p=12308 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:53:31,511 p=12308 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:31,514 p=12308 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:53:31,520 p=12308 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:31,533 p=12308 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:53:31,533 p=12308 u=ansible n=ansible | centos2                    : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:53:44,725 p=12535 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:53:44,744 p=12535 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:53:45,821 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:45,829 p=12535 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:53:45,842 p=12535 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:53:45,846 p=12535 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:53:46,483 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:46,486 p=12535 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:53:47,030 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:47,033 p=12535 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:53:47,328 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:47,331 p=12535 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:53:47,743 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:47,746 p=12535 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:53:47,752 p=12535 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:47,756 p=12535 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:53:47,991 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:47,994 p=12535 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:53:48,001 p=12535 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:48,005 p=12535 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:53:48,012 p=12535 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:48,015 p=12535 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:53:48,023 p=12535 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:48,028 p=12535 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:53:48,035 p=12535 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:48,039 p=12535 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:53:48,048 p=12535 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: $ANSIBLE_VAULT;1.1;AES256 37613737323139383435353833363966626361633737376537663337316530663031336537363366 3732613833383833623262663935343234613639386131340a383139306334366266303838633362 63326638653032383561353666366363613564616636383436636439393538333839313066346663 6135353966363439620a383565646366666163643236343064386538363533333431656638373832 3563"
}
2023-07-28 22:53:48,051 p=12535 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:53:48,381 p=12535 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:53:48,381 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:48,384 p=12535 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:53:48,921 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:48,924 p=12535 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:53:49,205 p=12535 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:53:49,209 p=12535 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:53:49,217 p=12535 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:53:49,235 p=12535 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:53:49,235 p=12535 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:55:48,707 p=12767 u=ansible n=ansible | [DEPRECATION WARNING]: Specifying a list of dictionaries for vars is deprecated in favor of specifying a dictionary. This feature will be removed 
in version 2.18. Deprecation warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
2023-07-28 22:55:48,707 p=12767 u=ansible n=ansible | ERROR! Vars in a Play must be specified as a dictionary

The error appears to be in '/home/ansible/labs/playbook.yml': line 16, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  vars:
    - roles/install_nexus/vars/sensitive.yml
    ^ here

2023-07-28 22:56:02,406 p=12794 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:56:02,426 p=12794 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:56:03,721 p=12794 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:56:03,728 p=12794 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:56:03,741 p=12794 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:56:03,744 p=12794 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:56:04,387 p=12794 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:56:04,390 p=12794 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:56:04,937 p=12794 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:56:04,940 p=12794 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:56:05,240 p=12794 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:56:05,243 p=12794 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:56:05,658 p=12794 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:56:05,661 p=12794 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:56:05,668 p=12794 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:56:05,671 p=12794 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:56:05,907 p=12794 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:56:05,910 p=12794 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:56:05,917 p=12794 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:56:05,921 p=12794 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:56:05,929 p=12794 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:56:05,933 p=12794 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:56:05,942 p=12794 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:56:05,945 p=12794 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:56:05,954 p=12794 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:56:05,958 p=12794 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:56:05,965 p=12794 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'nexus_user_password' is undefined. 'nexus_user_password' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 57, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Print decrypted variable\n  ^ here\n"}
2023-07-28 22:56:05,965 p=12794 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:56:05,965 p=12794 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 22:58:28,815 p=12975 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:58:28,835 p=12975 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:58:30,090 p=12975 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:58:30,098 p=12975 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:58:30,131 p=12975 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:58:30,136 p=12975 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:58:30,778 p=12975 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:58:30,781 p=12975 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:58:31,406 p=12975 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:58:31,411 p=12975 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:58:31,734 p=12975 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:58:31,737 p=12975 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:58:32,157 p=12975 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:58:32,160 p=12975 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:58:32,166 p=12975 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:58:32,170 p=12975 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:58:32,403 p=12975 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:58:32,406 p=12975 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:58:32,413 p=12975 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:58:32,416 p=12975 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:58:32,426 p=12975 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:58:32,429 p=12975 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:58:32,437 p=12975 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:58:32,441 p=12975 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:58:32,448 p=12975 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:58:32,453 p=12975 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:58:32,472 p=12975 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: 123456"
}
2023-07-28 22:58:32,476 p=12975 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 22:58:32,826 p=12975 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 22:58:32,826 p=12975 u=ansible n=ansible | changed: [centos2]
2023-07-28 22:58:32,829 p=12975 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 22:58:33,356 p=12975 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:58:33,359 p=12975 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 22:58:33,597 p=12975 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:58:33,600 p=12975 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 22:58:33,606 p=12975 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:58:33,618 p=12975 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:58:33,618 p=12975 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 22:59:19,992 p=13209 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 22:59:20,012 p=13209 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 22:59:21,096 p=13209 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:59:21,104 p=13209 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 22:59:21,118 p=13209 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 22:59:21,122 p=13209 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 22:59:21,762 p=13209 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:59:21,765 p=13209 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 22:59:22,309 p=13209 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:59:22,312 p=13209 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 22:59:22,625 p=13209 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:59:22,629 p=13209 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 22:59:23,109 p=13209 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:59:23,113 p=13209 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 22:59:23,124 p=13209 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:59:23,129 p=13209 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 22:59:23,393 p=13209 u=ansible n=ansible | ok: [centos2]
2023-07-28 22:59:23,396 p=13209 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 22:59:23,404 p=13209 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:59:23,408 p=13209 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 22:59:23,415 p=13209 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:59:23,419 p=13209 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 22:59:23,429 p=13209 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:59:23,432 p=13209 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 22:59:23,441 p=13209 u=ansible n=ansible | skipping: [centos2]
2023-07-28 22:59:23,445 p=13209 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 22:59:23,452 p=13209 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-28 22:59:23,454 p=13209 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 22:59:23,454 p=13209 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 23:00:46,116 p=13373 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:00:46,138 p=13373 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:00:47,306 p=13373 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:00:47,314 p=13373 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:00:47,327 p=13373 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:00:47,330 p=13373 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:00:48,004 p=13373 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:00:48,007 p=13373 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:00:48,653 p=13373 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:00:48,656 p=13373 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:00:48,991 p=13373 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:00:48,994 p=13373 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:00:49,441 p=13373 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:00:49,444 p=13373 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:00:49,451 p=13373 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:00:49,455 p=13373 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:00:49,731 p=13373 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:00:49,735 p=13373 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:00:49,744 p=13373 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:00:49,748 p=13373 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:00:49,759 p=13373 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:00:49,763 p=13373 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:00:49,771 p=13373 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:00:49,776 p=13373 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:00:49,783 p=13373 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:00:49,788 p=13373 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 23:00:49,806 p=13373 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: 123456"
}
2023-07-28 23:00:49,811 p=13373 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 23:00:50,179 p=13373 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 23:00:50,179 p=13373 u=ansible n=ansible | changed: [centos2]
2023-07-28 23:00:50,182 p=13373 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 23:00:50,766 p=13373 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:00:50,769 p=13373 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 23:00:51,009 p=13373 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:00:51,012 p=13373 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 23:00:51,021 p=13373 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:00:51,035 p=13373 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:00:51,035 p=13373 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 23:02:19,407 p=13610 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:02:19,426 p=13610 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:02:20,733 p=13610 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:02:20,741 p=13610 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:02:20,754 p=13610 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:02:20,757 p=13610 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:02:21,400 p=13610 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:02:21,403 p=13610 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:02:21,947 p=13610 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:02:21,951 p=13610 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:02:22,243 p=13610 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:02:22,246 p=13610 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:02:22,658 p=13610 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:02:22,661 p=13610 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:02:22,667 p=13610 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:02:22,670 p=13610 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:02:22,901 p=13610 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:02:22,904 p=13610 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:02:22,911 p=13610 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:02:22,915 p=13610 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:02:22,925 p=13610 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:02:22,929 p=13610 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:02:22,937 p=13610 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:02:22,941 p=13610 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:02:22,949 p=13610 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:02:22,953 p=13610 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 23:02:22,970 p=13610 u=ansible n=ansible | ok: [centos2] => {
    "msg": "Decrypted variable: 123456"
}
2023-07-28 23:02:22,974 p=13610 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 23:02:23,345 p=13610 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 23:02:23,345 p=13610 u=ansible n=ansible | changed: [centos2]
2023-07-28 23:02:23,349 p=13610 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 23:02:23,880 p=13610 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:02:23,883 p=13610 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 23:02:24,121 p=13610 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:02:24,124 p=13610 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 23:02:24,130 p=13610 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:02:24,144 p=13610 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:02:24,144 p=13610 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 23:07:00,295 p=13853 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:07:00,315 p=13853 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:07:01,664 p=13853 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:07:01,674 p=13853 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:07:01,690 p=13853 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:07:01,694 p=13853 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:07:02,459 p=13853 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:07:02,463 p=13853 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:07:03,065 p=13853 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:07:03,068 p=13853 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:07:03,361 p=13853 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:07:03,364 p=13853 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:07:03,774 p=13853 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:07:03,777 p=13853 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:07:03,783 p=13853 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:07:03,786 p=13853 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:07:04,016 p=13853 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:07:04,019 p=13853 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:07:04,026 p=13853 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:07:04,031 p=13853 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:07:04,040 p=13853 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:07:04,044 p=13853 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:07:04,053 p=13853 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:07:04,056 p=13853 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:07:04,065 p=13853 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:07:04,068 p=13853 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 23:07:04,442 p=13853 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 23:07:04,442 p=13853 u=ansible n=ansible | changed: [centos2]
2023-07-28 23:07:04,445 p=13853 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 23:07:04,973 p=13853 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:07:04,976 p=13853 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 23:07:05,213 p=13853 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:07:05,216 p=13853 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 23:07:05,223 p=13853 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:07:05,236 p=13853 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:07:05,236 p=13853 u=ansible n=ansible | centos2                    : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 23:08:21,223 p=14126 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:08:21,241 p=14126 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:08:22,513 p=14126 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:22,521 p=14126 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:08:22,534 p=14126 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:08:22,538 p=14126 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:08:23,214 p=14126 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:23,217 p=14126 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:08:23,771 p=14126 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:23,773 p=14126 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:08:24,068 p=14126 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:24,071 p=14126 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:08:24,480 p=14126 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:24,483 p=14126 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:08:24,490 p=14126 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:24,494 p=14126 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:08:24,730 p=14126 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:24,733 p=14126 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:08:24,740 p=14126 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:24,743 p=14126 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:08:24,750 p=14126 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:24,755 p=14126 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:08:24,763 p=14126 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:24,767 p=14126 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:08:24,775 p=14126 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:24,778 p=14126 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 23:08:24,788 p=14126 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: '_nexus_user_password' is undefined. '_nexus_user_password' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 57, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Print decrypted variable\n  ^ here\n"}
2023-07-28 23:08:24,789 p=14126 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:08:24,789 p=14126 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 23:08:50,824 p=14307 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:08:50,843 p=14307 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:08:51,997 p=14307 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:52,004 p=14307 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:08:52,018 p=14307 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:08:52,022 p=14307 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:08:52,649 p=14307 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:52,652 p=14307 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:08:53,194 p=14307 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:53,197 p=14307 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:08:53,492 p=14307 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:53,495 p=14307 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:08:53,905 p=14307 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:53,908 p=14307 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:08:53,914 p=14307 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:53,919 p=14307 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:08:54,149 p=14307 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:08:54,152 p=14307 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:08:54,159 p=14307 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:54,163 p=14307 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:08:54,172 p=14307 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:54,176 p=14307 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:08:54,183 p=14307 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:54,188 p=14307 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:08:54,196 p=14307 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:08:54,200 p=14307 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-28 23:08:54,208 p=14307 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: '_nexus_user_password' is undefined. '_nexus_user_password' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml': line 57, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- debug:\n  ^ here\n"}
2023-07-28 23:08:54,209 p=14307 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:08:54,209 p=14307 u=ansible n=ansible | centos2                    : ok=7    changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-28 23:10:02,406 p=14488 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:10:02,425 p=14488 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:10:03,691 p=14488 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:10:03,698 p=14488 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:10:03,712 p=14488 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:10:03,715 p=14488 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:10:04,361 p=14488 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:10:04,364 p=14488 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:10:04,908 p=14488 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:10:04,911 p=14488 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:10:05,202 p=14488 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:10:05,205 p=14488 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:10:05,635 p=14488 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:10:05,638 p=14488 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:10:05,647 p=14488 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:10:05,651 p=14488 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:10:05,902 p=14488 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:10:05,906 p=14488 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:10:05,916 p=14488 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:10:05,924 p=14488 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:10:05,937 p=14488 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:10:05,942 p=14488 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:10:05,954 p=14488 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:10:05,958 p=14488 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:10:05,984 p=14488 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:10:05,989 p=14488 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-28 23:10:06,003 p=14488 u=ansible n=ansible | ok: [centos2] => {
    "msg": 123456
}
2023-07-28 23:10:06,006 p=14488 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 23:10:06,384 p=14488 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 23:10:06,384 p=14488 u=ansible n=ansible | changed: [centos2]
2023-07-28 23:10:06,387 p=14488 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 23:10:06,942 p=14488 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:10:06,946 p=14488 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 23:10:07,181 p=14488 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:10:07,184 p=14488 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 23:10:07,190 p=14488 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:10:07,203 p=14488 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:10:07,203 p=14488 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 23:11:02,111 p=14712 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:11:02,131 p=14712 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:11:03,257 p=14712 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:03,265 p=14712 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:11:03,278 p=14712 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:11:03,281 p=14712 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:11:03,920 p=14712 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:03,922 p=14712 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:11:04,464 p=14712 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:04,467 p=14712 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:11:04,762 p=14712 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:04,765 p=14712 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:11:05,195 p=14712 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:05,199 p=14712 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:11:05,207 p=14712 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:05,211 p=14712 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:11:05,511 p=14712 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:05,515 p=14712 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:11:05,528 p=14712 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:05,533 p=14712 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:11:05,545 p=14712 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:05,550 p=14712 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:11:05,562 p=14712 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:05,566 p=14712 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:11:05,580 p=14712 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:05,585 p=14712 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-28 23:11:05,598 p=14712 u=ansible n=ansible | ok: [centos2] => {
    "msg": 123456
}
2023-07-28 23:11:05,602 p=14712 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 23:11:06,055 p=14712 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 23:11:06,056 p=14712 u=ansible n=ansible | changed: [centos2]
2023-07-28 23:11:06,059 p=14712 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 23:11:06,627 p=14712 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:06,631 p=14712 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 23:11:06,928 p=14712 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:06,932 p=14712 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 23:11:06,944 p=14712 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:06,958 p=14712 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:11:06,958 p=14712 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 23:11:48,021 p=14928 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:11:48,041 p=14928 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:11:49,221 p=14928 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:49,228 p=14928 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:11:49,242 p=14928 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:11:49,246 p=14928 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:11:49,919 p=14928 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:49,922 p=14928 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:11:50,470 p=14928 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:50,473 p=14928 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:11:50,771 p=14928 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:50,774 p=14928 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:11:51,190 p=14928 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:51,193 p=14928 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:11:51,200 p=14928 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:51,204 p=14928 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:11:51,443 p=14928 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:51,447 p=14928 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:11:51,453 p=14928 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:51,457 p=14928 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:11:51,466 p=14928 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:51,469 p=14928 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:11:51,477 p=14928 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:51,481 p=14928 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:11:51,489 p=14928 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:51,493 p=14928 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-28 23:11:51,501 p=14928 u=ansible n=ansible | ok: [centos2] => {
    "msg": 123456
}
2023-07-28 23:11:51,505 p=14928 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 23:11:51,871 p=14928 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 23:11:51,871 p=14928 u=ansible n=ansible | changed: [centos2]
2023-07-28 23:11:51,874 p=14928 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 23:11:52,409 p=14928 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:52,412 p=14928 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 23:11:52,650 p=14928 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:11:52,653 p=14928 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 23:11:52,660 p=14928 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:11:52,673 p=14928 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:11:52,673 p=14928 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 23:12:47,008 p=15171 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:12:47,027 p=15171 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:12:48,192 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:48,202 p=15171 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:12:48,217 p=15171 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:12:48,221 p=15171 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:12:48,968 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:48,971 p=15171 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:12:49,621 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:49,624 p=15171 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:12:49,937 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:49,940 p=15171 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:12:50,360 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:50,363 p=15171 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:12:50,370 p=15171 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:12:50,373 p=15171 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:12:50,604 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:50,607 p=15171 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:12:50,614 p=15171 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:12:50,618 p=15171 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:12:50,625 p=15171 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:12:50,628 p=15171 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:12:50,636 p=15171 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:12:50,640 p=15171 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:12:50,648 p=15171 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:12:50,653 p=15171 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 23:12:50,671 p=15171 u=ansible n=ansible | ok: [centos2] => {
    "msg": "123456"
}
2023-07-28 23:12:50,674 p=15171 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 23:12:51,006 p=15171 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 23:12:51,006 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:51,010 p=15171 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 23:12:51,539 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:51,542 p=15171 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 23:12:51,779 p=15171 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:12:51,782 p=15171 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 23:12:51,789 p=15171 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:12:51,801 p=15171 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:12:51,801 p=15171 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-28 23:13:01,481 p=15396 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-28 23:13:01,502 p=15396 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-28 23:13:02,605 p=15396 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:13:02,613 p=15396 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-28 23:13:02,626 p=15396 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-28 23:13:02,629 p=15396 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-28 23:13:03,269 p=15396 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:13:03,272 p=15396 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-28 23:13:03,814 p=15396 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:13:03,816 p=15396 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-28 23:13:04,111 p=15396 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:13:04,114 p=15396 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-28 23:13:04,527 p=15396 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:13:04,530 p=15396 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-28 23:13:04,536 p=15396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:13:04,540 p=15396 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-28 23:13:04,770 p=15396 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:13:04,773 p=15396 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-28 23:13:04,780 p=15396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:13:04,784 p=15396 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-28 23:13:04,793 p=15396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:13:04,797 p=15396 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-28 23:13:04,804 p=15396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:13:04,809 p=15396 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-28 23:13:04,818 p=15396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:13:04,822 p=15396 u=ansible n=ansible | TASK [install_nexus : Print decrypted variable] ****************************************************************************************************
2023-07-28 23:13:04,841 p=15396 u=ansible n=ansible | ok: [centos2] => {
    "msg": "123456"
}
2023-07-28 23:13:04,845 p=15396 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-28 23:13:05,216 p=15396 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-28 23:13:05,216 p=15396 u=ansible n=ansible | changed: [centos2]
2023-07-28 23:13:05,219 p=15396 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-28 23:13:05,750 p=15396 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:13:05,753 p=15396 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-28 23:13:05,992 p=15396 u=ansible n=ansible | ok: [centos2]
2023-07-28 23:13:05,995 p=15396 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-28 23:13:06,001 p=15396 u=ansible n=ansible | skipping: [centos2]
2023-07-28 23:13:06,014 p=15396 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-28 23:13:06,014 p=15396 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-29 00:39:25,740 p=15902 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 00:39:25,762 p=15902 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 00:39:27,265 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:27,275 p=15902 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 00:39:27,293 p=15902 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 00:39:27,297 p=15902 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 00:39:28,318 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:28,321 p=15902 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 00:39:28,957 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:28,961 p=15902 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 00:39:29,280 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:29,284 p=15902 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 00:39:29,807 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:29,811 p=15902 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 00:39:29,819 p=15902 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:39:29,822 p=15902 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 00:39:30,079 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:30,082 p=15902 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 00:39:30,090 p=15902 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:39:30,094 p=15902 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 00:39:30,100 p=15902 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:39:30,104 p=15902 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 00:39:30,113 p=15902 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:39:30,118 p=15902 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 00:39:30,127 p=15902 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:39:30,130 p=15902 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 00:39:30,492 p=15902 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 00:39:30,493 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:30,496 p=15902 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 00:39:31,111 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:31,115 p=15902 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 00:39:31,379 p=15902 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:39:31,382 p=15902 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 00:39:31,694 p=15902 u=ansible n=ansible | changed: [centos2]
2023-07-29 00:39:31,698 p=15902 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-29 00:39:31,704 p=15902 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:39:31,718 p=15902 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 00:39:31,719 p=15902 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-29 00:59:04,588 p=16180 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 00:59:04,592 p=16180 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 00:59:06,007 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:06,015 p=16180 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 00:59:06,030 p=16180 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 00:59:06,034 p=16180 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 00:59:06,742 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:06,745 p=16180 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 00:59:07,335 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:07,340 p=16180 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 00:59:07,728 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:07,732 p=16180 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 00:59:08,198 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:08,202 p=16180 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 00:59:08,210 p=16180 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:59:08,214 p=16180 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 00:59:08,490 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:08,494 p=16180 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 00:59:08,501 p=16180 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:59:08,505 p=16180 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 00:59:08,514 p=16180 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:59:08,518 p=16180 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 00:59:08,529 p=16180 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:59:08,533 p=16180 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 00:59:08,543 p=16180 u=ansible n=ansible | skipping: [centos2]
2023-07-29 00:59:08,548 p=16180 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 00:59:08,924 p=16180 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 00:59:08,924 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:08,928 p=16180 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 00:59:09,546 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:09,549 p=16180 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 00:59:09,802 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:09,806 p=16180 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 00:59:10,158 p=16180 u=ansible n=ansible | ok: [centos2]
2023-07-29 00:59:10,164 p=16180 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 00:59:10,276 p=16180 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-29 00:59:10,276 p=16180 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Could not find or access '/labs/roles/install_nexus/templates/nexus.service.j2' on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}
2023-07-29 00:59:10,277 p=16180 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 00:59:10,278 p=16180 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-29 01:07:46,415 p=16487 u=ansible n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/ansible/labs/roles/install_nexus/handlers/hanlders_service.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-29 01:07:57,904 p=16587 u=ansible n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/ansible/labs/roles/install_nexus/handlers/hanlders_service.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-29 01:08:23,233 p=16622 u=ansible n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/ansible/labs/hanlders_service.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-29 01:09:42,486 p=16717 u=ansible n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/ansible/labs/roles/install_nexus/handlers/hanlders_service.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-29 01:11:01,853 p=16751 u=ansible n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/ansible/labs/roles/install_nexus/handlers/handlders_service.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-29 01:11:22,319 p=16797 u=ansible n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/ansible/labs/roles/install_nexus/handlers/handlders_service.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-29 01:11:51,149 p=16866 u=ansible n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/ansible/labs/roles/install_nexus/handlers/handlders_service.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2023-07-29 01:12:06,605 p=16894 u=ansible n=ansible | [WARNING]: file /home/ansible/labs/roles/install_nexus/handlers/main.yml is empty and had no tasks to include

2023-07-29 01:12:06,612 p=16894 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:12:06,636 p=16894 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:12:07,994 p=16894 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:08,002 p=16894 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:12:08,017 p=16894 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:12:08,021 p=16894 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:12:08,717 p=16894 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:08,720 p=16894 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:12:09,285 p=16894 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-29 01:12:43,741 p=17032 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:12:43,745 p=17032 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:12:44,915 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:44,923 p=17032 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:12:44,937 p=17032 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:12:44,940 p=17032 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:12:45,690 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:45,695 p=17032 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:12:46,334 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:46,338 p=17032 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 01:12:46,655 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:46,659 p=17032 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 01:12:47,107 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:47,110 p=17032 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 01:12:47,118 p=17032 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:12:47,122 p=17032 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 01:12:47,391 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:47,395 p=17032 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 01:12:47,405 p=17032 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:12:47,409 p=17032 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 01:12:47,421 p=17032 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:12:47,425 p=17032 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 01:12:47,437 p=17032 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:12:47,442 p=17032 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 01:12:47,454 p=17032 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:12:47,461 p=17032 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 01:12:47,895 p=17032 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 01:12:47,896 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:47,901 p=17032 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 01:12:48,514 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:48,517 p=17032 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 01:12:48,775 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:48,778 p=17032 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 01:12:49,081 p=17032 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:12:49,085 p=17032 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 01:12:49,799 p=17032 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:12:49,803 p=17032 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 01:12:50,508 p=17032 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:12:50,511 p=17032 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 01:12:50,859 p=17032 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Unable to start service nexus: Job for nexus.service failed because the control process exited with error code.\nSee \"systemctl status nexus.service\" and \"journalctl -xeu nexus.service\" for details.\n"}
2023-07-29 01:12:50,860 p=17032 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 01:12:50,860 p=17032 u=ansible n=ansible | centos2                    : ok=13   changed=2    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-29 01:18:26,497 p=17388 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:18:26,502 p=17388 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:18:28,266 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:28,276 p=17388 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:18:28,296 p=17388 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:18:28,302 p=17388 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:18:29,833 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:29,838 p=17388 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:18:31,123 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:31,126 p=17388 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 01:18:31,484 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:31,487 p=17388 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 01:18:32,204 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:32,208 p=17388 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 01:18:32,216 p=17388 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:18:32,221 p=17388 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 01:18:32,473 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:32,477 p=17388 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 01:18:32,485 p=17388 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:18:32,489 p=17388 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 01:18:32,498 p=17388 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:18:32,502 p=17388 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 01:18:32,511 p=17388 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:18:32,516 p=17388 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 01:18:32,526 p=17388 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:18:32,531 p=17388 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 01:18:32,911 p=17388 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 01:18:32,911 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:32,914 p=17388 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 01:18:33,541 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:33,545 p=17388 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 01:18:34,276 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:34,280 p=17388 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 01:18:34,604 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:34,607 p=17388 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 01:18:35,159 p=17388 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:18:35,162 p=17388 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 01:18:35,665 p=17388 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:18:35,669 p=17388 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 01:18:36,017 p=17388 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Unable to start service nexus: Warning: The unit file, source configuration file or drop-ins of nexus.service changed on disk. Run 'systemctl daemon-reload' to reload units.\nJob for nexus.service failed because the control process exited with error code.\nSee \"systemctl status nexus.service\" and \"journalctl -xeu nexus.service\" for details.\n"}
2023-07-29 01:18:36,018 p=17388 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 01:18:36,018 p=17388 u=ansible n=ansible | centos2                    : ok=13   changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-29 01:19:49,256 p=17723 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:19:49,260 p=17723 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:19:50,647 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:50,655 p=17723 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:19:50,668 p=17723 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:19:50,672 p=17723 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:19:51,675 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:51,679 p=17723 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:19:52,522 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:52,525 p=17723 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 01:19:52,886 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:52,889 p=17723 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 01:19:53,600 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:53,603 p=17723 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 01:19:53,611 p=17723 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:19:53,615 p=17723 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 01:19:53,883 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:53,887 p=17723 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 01:19:53,894 p=17723 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:19:53,898 p=17723 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 01:19:53,906 p=17723 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:19:53,910 p=17723 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 01:19:53,917 p=17723 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:19:53,922 p=17723 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 01:19:53,930 p=17723 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:19:53,933 p=17723 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 01:19:54,306 p=17723 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 01:19:54,306 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:54,309 p=17723 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 01:19:54,921 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:54,925 p=17723 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 01:19:55,634 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:55,638 p=17723 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 01:19:55,951 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:55,955 p=17723 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 01:19:56,397 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:56,401 p=17723 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 01:19:56,890 p=17723 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:19:56,893 p=17723 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 01:19:57,239 p=17723 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Unable to start service nexus: Job for nexus.service failed because the control process exited with error code.\nSee \"systemctl status nexus.service\" and \"journalctl -xeu nexus.service\" for details.\n"}
2023-07-29 01:19:57,240 p=17723 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 01:19:57,240 p=17723 u=ansible n=ansible | centos2                    : ok=13   changed=0    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-29 01:22:40,890 p=18057 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:22:40,894 p=18057 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:22:42,312 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:42,320 p=18057 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:22:42,333 p=18057 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:22:42,337 p=18057 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:22:43,400 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:43,405 p=18057 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:22:44,204 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:44,208 p=18057 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 01:22:44,529 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:44,533 p=18057 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 01:22:45,291 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:45,295 p=18057 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 01:22:45,305 p=18057 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:22:45,309 p=18057 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 01:22:45,579 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:45,583 p=18057 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 01:22:45,591 p=18057 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:22:45,596 p=18057 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 01:22:45,603 p=18057 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:22:45,608 p=18057 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 01:22:45,616 p=18057 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:22:45,620 p=18057 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 01:22:45,628 p=18057 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:22:45,632 p=18057 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 01:22:46,009 p=18057 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 01:22:46,009 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:46,012 p=18057 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 01:22:46,594 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:46,597 p=18057 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 01:22:47,310 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:47,313 p=18057 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 01:22:47,629 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:47,632 p=18057 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 01:22:48,194 p=18057 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:22:48,197 p=18057 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 01:22:48,668 p=18057 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:22:48,671 p=18057 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 01:22:49,014 p=18057 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Unable to start service nexus: Warning: The unit file, source configuration file or drop-ins of nexus.service changed on disk. Run 'systemctl daemon-reload' to reload units.\nJob for nexus.service failed because the control process exited with error code.\nSee \"systemctl status nexus.service\" and \"journalctl -xeu nexus.service\" for details.\n"}
2023-07-29 01:22:49,015 p=18057 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 01:22:49,015 p=18057 u=ansible n=ansible | centos2                    : ok=13   changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2023-07-29 01:24:44,041 p=18388 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-29 01:24:51,116 p=18422 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:24:51,120 p=18422 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:24:52,484 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:52,492 p=18422 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:24:52,507 p=18422 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:24:52,511 p=18422 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:24:53,512 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:53,515 p=18422 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:24:54,186 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:54,190 p=18422 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 01:24:54,516 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:54,520 p=18422 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 01:24:55,244 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:55,271 p=18422 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 01:24:55,296 p=18422 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:24:55,302 p=18422 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 01:24:55,622 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:55,625 p=18422 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 01:24:55,635 p=18422 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:24:55,639 p=18422 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 01:24:55,646 p=18422 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:24:55,651 p=18422 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 01:24:55,659 p=18422 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:24:55,664 p=18422 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 01:24:55,673 p=18422 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:24:55,677 p=18422 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 01:24:56,095 p=18422 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 01:24:56,095 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:56,098 p=18422 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 01:24:56,683 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:56,687 p=18422 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 01:24:57,415 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:57,419 p=18422 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 01:24:57,752 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:57,755 p=18422 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 01:24:58,223 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:58,227 p=18422 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************
2023-07-29 01:24:58,774 p=18422 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:24:58,778 p=18422 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 01:24:59,252 p=18422 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:24:59,255 p=18422 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 01:24:59,699 p=18422 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:24:59,703 p=18422 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-29 01:24:59,713 p=18422 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:24:59,730 p=18422 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 01:24:59,730 p=18422 u=ansible n=ansible | centos2                    : ok=15   changed=2    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-29 01:27:27,140 p=18770 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:27:27,144 p=18770 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:27:28,553 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:28,561 p=18770 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:27:28,576 p=18770 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:27:28,580 p=18770 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:27:29,476 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:29,479 p=18770 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:27:30,222 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:30,227 p=18770 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 01:27:30,593 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:30,596 p=18770 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 01:27:31,280 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:31,284 p=18770 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 01:27:31,291 p=18770 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:27:31,295 p=18770 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 01:27:31,556 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:31,560 p=18770 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 01:27:31,568 p=18770 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:27:31,572 p=18770 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 01:27:31,581 p=18770 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:27:31,585 p=18770 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 01:27:31,594 p=18770 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:27:31,599 p=18770 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 01:27:31,607 p=18770 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:27:31,611 p=18770 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 01:27:32,137 p=18770 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 01:27:32,138 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:32,141 p=18770 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 01:27:32,751 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:32,755 p=18770 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 01:27:33,534 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:33,540 p=18770 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 01:27:33,878 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:33,882 p=18770 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 01:27:34,337 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:34,340 p=18770 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************
2023-07-29 01:27:34,847 p=18770 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:27:34,851 p=18770 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 01:27:35,338 p=18770 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:27:35,342 p=18770 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 01:27:35,800 p=18770 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:27:35,804 p=18770 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-29 01:27:35,815 p=18770 u=ansible n=ansible | ok: [centos2] => {
    "docker_service_status.status.ActiveState": "failed"
}
2023-07-29 01:27:35,818 p=18770 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-29 01:27:35,829 p=18770 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:27:35,848 p=18770 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 01:27:35,848 p=18770 u=ansible n=ansible | centos2                    : ok=16   changed=2    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-29 01:33:12,429 p=19165 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:33:12,433 p=19165 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:33:14,167 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:14,175 p=19165 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:33:14,193 p=19165 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:33:14,199 p=19165 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:33:15,463 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:15,467 p=19165 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:33:16,574 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:16,578 p=19165 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 01:33:16,936 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:16,940 p=19165 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 01:33:17,651 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:17,655 p=19165 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 01:33:17,662 p=19165 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:33:17,666 p=19165 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 01:33:17,940 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:17,943 p=19165 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 01:33:17,951 p=19165 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:33:17,954 p=19165 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 01:33:17,963 p=19165 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:33:17,967 p=19165 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 01:33:17,978 p=19165 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:33:17,982 p=19165 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 01:33:17,990 p=19165 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:33:17,995 p=19165 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 01:33:18,395 p=19165 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 01:33:18,395 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:18,399 p=19165 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 01:33:19,077 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:19,081 p=19165 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 01:33:19,829 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:19,832 p=19165 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 01:33:20,158 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:20,161 p=19165 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 01:33:20,614 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:20,617 p=19165 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************
2023-07-29 01:33:21,206 p=19165 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:33:21,210 p=19165 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 01:33:21,687 p=19165 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:33:21,691 p=19165 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 01:33:22,134 p=19165 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:33:22,139 p=19165 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-29 01:33:22,149 p=19165 u=ansible n=ansible | ok: [centos2] => {
    "nexus_service_status.status.ActiveState": "failed"
}
2023-07-29 01:33:22,153 p=19165 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-29 01:33:22,163 p=19165 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:33:22,178 p=19165 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 01:33:22,178 p=19165 u=ansible n=ansible | centos2                    : ok=16   changed=2    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-29 01:38:28,236 p=19519 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 01:38:28,240 p=19519 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 01:38:29,715 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:29,723 p=19519 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 01:38:29,738 p=19519 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 01:38:29,742 p=19519 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 01:38:31,014 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:31,020 p=19519 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 01:38:32,029 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:32,032 p=19519 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 01:38:32,366 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:32,369 p=19519 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 01:38:33,172 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:33,175 p=19519 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 01:38:33,184 p=19519 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:38:33,187 p=19519 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 01:38:33,450 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:33,454 p=19519 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 01:38:33,462 p=19519 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:38:33,466 p=19519 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 01:38:33,475 p=19519 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:38:33,479 p=19519 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 01:38:33,487 p=19519 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:38:33,492 p=19519 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 01:38:33,504 p=19519 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:38:33,509 p=19519 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 01:38:33,893 p=19519 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 01:38:33,893 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:33,896 p=19519 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 01:38:34,520 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:34,524 p=19519 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 01:38:35,270 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:35,274 p=19519 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 01:38:35,602 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:35,606 p=19519 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 01:38:36,053 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:36,056 p=19519 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************
2023-07-29 01:38:36,600 p=19519 u=ansible n=ansible | changed: [centos2]
2023-07-29 01:38:36,604 p=19519 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 01:38:37,083 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:37,087 p=19519 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 01:38:37,430 p=19519 u=ansible n=ansible | ok: [centos2]
2023-07-29 01:38:37,433 p=19519 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-29 01:38:37,442 p=19519 u=ansible n=ansible | ok: [centos2] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-29 01:38:37,448 p=19519 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-29 01:38:37,456 p=19519 u=ansible n=ansible | skipping: [centos2]
2023-07-29 01:38:37,469 p=19519 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 01:38:37,469 p=19519 u=ansible n=ansible | centos2                    : ok=16   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-29 17:35:07,261 p=2316 u=ansible n=ansible | ERROR! the playbook: playbook.yml could not be found
2023-07-29 17:35:15,279 p=2338 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 17:35:15,287 p=2338 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 17:35:16,779 p=2338 u=ansible n=ansible | ok: [ubuntu2]
2023-07-29 17:35:17,098 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:35:17,109 p=2338 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 17:35:17,122 p=2338 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-29 17:35:17,129 p=2338 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 17:35:17,133 p=2338 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 17:38:11,291 p=2338 u=ansible n=ansible | changed: [centos2]
2023-07-29 17:38:11,295 p=2338 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 17:38:12,113 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:12,116 p=2338 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 17:38:12,434 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:12,437 p=2338 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 17:38:13,145 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:13,147 p=2338 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 17:38:13,154 p=2338 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:38:13,157 p=2338 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 17:38:13,430 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:13,433 p=2338 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 17:38:13,440 p=2338 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:38:13,442 p=2338 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 17:38:13,451 p=2338 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:38:13,454 p=2338 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 17:38:13,462 p=2338 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:38:13,465 p=2338 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 17:38:13,472 p=2338 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:38:13,475 p=2338 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 17:38:13,819 p=2338 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 17:38:13,819 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:13,822 p=2338 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 17:38:14,428 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:14,432 p=2338 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 17:38:15,155 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:15,158 p=2338 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 17:38:15,457 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:15,460 p=2338 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 17:38:15,917 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:15,920 p=2338 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************
2023-07-29 17:38:16,349 p=2338 u=ansible n=ansible | changed: [centos2]
2023-07-29 17:38:16,352 p=2338 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 17:38:16,808 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:16,811 p=2338 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 17:38:17,118 p=2338 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:38:17,121 p=2338 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-29 17:38:17,129 p=2338 u=ansible n=ansible | ok: [centos2] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-29 17:38:17,132 p=2338 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-29 17:38:17,141 p=2338 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:38:17,153 p=2338 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu2
2023-07-29 17:38:17,159 p=2338 u=ansible n=ansible | TASK [install_nexus : Update apt] ******************************************************************************************************************
2023-07-29 17:38:18,240 p=2338 u=ansible n=ansible | ok: [ubuntu2]
2023-07-29 17:38:18,246 p=2338 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 17:38:18,616 p=2338 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "No package matching 'java-1.8.0-openjdk' is available"}
2023-07-29 17:38:18,627 p=2338 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 17:38:18,627 p=2338 u=ansible n=ansible | centos2                    : ok=16   changed=2    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-29 17:38:18,627 p=2338 u=ansible n=ansible | ubuntu2                    : ok=3    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-29 17:48:43,400 p=2787 u=ansible n=ansible | PLAY [Nexus playbook] ******************************************************************************************************************************
2023-07-29 17:48:43,404 p=2787 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-29 17:48:44,739 p=2787 u=ansible n=ansible | ok: [ubuntu2]
2023-07-29 17:48:44,852 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:44,864 p=2787 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on RedHat] *****************************************************************************************
2023-07-29 17:48:44,877 p=2787 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-29 17:48:44,883 p=2787 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos2
2023-07-29 17:48:44,887 p=2787 u=ansible n=ansible | TASK [install_nexus : Update yum] ******************************************************************************************************************
2023-07-29 17:48:46,078 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:46,081 p=2787 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 17:48:46,656 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:46,658 p=2787 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 17:48:46,956 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:46,959 p=2787 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 17:48:47,494 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:47,497 p=2787 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 17:48:47,504 p=2787 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:48:47,507 p=2787 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 17:48:47,744 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:47,747 p=2787 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 17:48:47,754 p=2787 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:48:47,757 p=2787 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 17:48:47,764 p=2787 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:48:47,767 p=2787 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 17:48:47,776 p=2787 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:48:47,779 p=2787 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 17:48:47,786 p=2787 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:48:47,789 p=2787 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 17:48:48,132 p=2787 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-29 17:48:48,132 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:48,135 p=2787 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 17:48:48,666 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:48,669 p=2787 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 17:48:49,334 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:49,337 p=2787 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 17:48:49,628 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:49,631 p=2787 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 17:48:50,034 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:50,037 p=2787 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************
2023-07-29 17:48:50,501 p=2787 u=ansible n=ansible | changed: [centos2]
2023-07-29 17:48:50,503 p=2787 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 17:48:50,944 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:50,947 p=2787 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 17:48:51,258 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-29 17:48:51,260 p=2787 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-29 17:48:51,269 p=2787 u=ansible n=ansible | ok: [centos2] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-29 17:48:51,272 p=2787 u=ansible n=ansible | TASK [install_nexus : Main task install Jenkins on Debian] *****************************************************************************************
2023-07-29 17:48:51,282 p=2787 u=ansible n=ansible | skipping: [centos2]
2023-07-29 17:48:51,293 p=2787 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu2
2023-07-29 17:48:51,299 p=2787 u=ansible n=ansible | TASK [install_nexus : Update apt] ******************************************************************************************************************
2023-07-29 17:48:52,006 p=2787 u=ansible n=ansible | ok: [ubuntu2]
2023-07-29 17:48:52,011 p=2787 u=ansible n=ansible | TASK [install_nexus : Install Java] ****************************************************************************************************************
2023-07-29 17:49:10,779 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:10,786 p=2787 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ***********************************************************************************************
2023-07-29 17:49:10,984 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:10,989 p=2787 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ***************************************************************************************
2023-07-29 17:49:11,145 p=2787 u=ansible n=ansible | ok: [ubuntu2]
2023-07-29 17:49:11,151 p=2787 u=ansible n=ansible | TASK [install_nexus : Download nexus file] *********************************************************************************************************
2023-07-29 17:49:38,362 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:38,368 p=2787 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ******************************************************************************
2023-07-29 17:49:38,521 p=2787 u=ansible n=ansible | ok: [ubuntu2]
2023-07-29 17:49:38,527 p=2787 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ******************************************************************************************************
2023-07-29 17:49:43,268 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:43,274 p=2787 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] *************************************************************************************
2023-07-29 17:49:43,504 p=2787 u=ansible n=ansible | ok: [ubuntu2]
2023-07-29 17:49:43,509 p=2787 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] *********************************************************************************************
2023-07-29 17:49:43,550 p=2787 u=ansible n=ansible | ok: [ubuntu2]
2023-07-29 17:49:43,557 p=2787 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ***********************************************************************************************************
2023-07-29 17:49:43,717 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:43,723 p=2787 u=ansible n=ansible | TASK [install_nexus : Add user nexus] **************************************************************************************************************
2023-07-29 17:49:43,942 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:43,948 p=2787 u=ansible n=ansible | TASK [install_nexus : Add line no password to sudoers file] ****************************************************************************************
2023-07-29 17:49:44,117 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:44,123 p=2787 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *****************************************************************************************
2023-07-29 17:49:44,325 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:44,330 p=2787 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] *********************************************************************************
2023-07-29 17:49:44,492 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:44,498 p=2787 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] *************************************************************************************
2023-07-29 17:49:44,657 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:44,662 p=2787 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] ************************************************************************************************
2023-07-29 17:49:45,031 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:45,037 p=2787 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************
2023-07-29 17:49:45,364 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:45,369 p=2787 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] ************************************************************************************************
2023-07-29 17:49:45,801 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:45,806 p=2787 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] *********************************************************************************************************
2023-07-29 17:49:46,236 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:46,242 p=2787 u=ansible n=ansible | TASK [install_nexus : debug] ***********************************************************************************************************************
2023-07-29 17:49:46,252 p=2787 u=ansible n=ansible | ok: [ubuntu2] => {
    "nexus_service_status.status.ActiveState": "inactive"
}
2023-07-29 17:49:46,292 p=2787 u=ansible n=ansible | RUNNING HANDLER [Reload Nexus systemd service] *****************************************************************************************************
2023-07-29 17:49:48,082 p=2787 u=ansible n=ansible | changed: [ubuntu2]
2023-07-29 17:49:48,091 p=2787 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-29 17:49:48,092 p=2787 u=ansible n=ansible | centos2                    : ok=16   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-29 17:49:48,092 p=2787 u=ansible n=ansible | ubuntu2                    : ok=23   changed=15   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-29 19:04:39,303 p=4070 u=ansible n=ansible | - Role install_sonarqube was created successfully
2023-07-29 20:01:07,102 p=4462 u=ansible n=ansible | [WARNING]: Error getting vault password file (default): The vault password file /home/ansible/labs/roles/vault_password was not found

2023-07-29 20:01:07,102 p=4462 u=ansible n=ansible | ERROR! The vault password file /home/ansible/labs/roles/vault_password was not found
2023-07-29 20:01:23,616 p=4508 u=ansible n=ansible | Encryption successful
2023-07-30 00:07:47,415 p=2340 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 00:07:47,454 p=2340 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 00:07:49,184 p=2340 u=ansible n=ansible | ok: [ubuntu2]
2023-07-30 00:07:49,305 p=2340 u=ansible n=ansible | ok: [centos2]
2023-07-30 00:07:49,317 p=2340 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 00:07:49,329 p=2340 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-30 00:07:49,333 p=2340 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  found unacceptable key (unhashable type: 'AnsibleMapping')

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 34, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  yum:
    name: {{ postgresql_url }}
           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2023-07-30 00:08:55,907 p=2458 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 00:08:55,927 p=2458 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 00:08:57,241 p=2458 u=ansible n=ansible | ok: [centos2]
2023-07-30 00:08:57,249 p=2458 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 00:08:57,261 p=2458 u=ansible n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  found unacceptable key (unhashable type: 'AnsibleMapping')

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 34, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  yum:
    name: {{ postgresql_url }}
           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2023-07-30 00:09:33,296 p=2541 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 00:09:33,316 p=2541 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 00:09:34,395 p=2541 u=ansible n=ansible | ok: [centos2]
2023-07-30 00:09:34,403 p=2541 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 00:09:34,437 p=2541 u=ansible n=ansible | ERROR! couldn't resolve module/action 'dnf_module'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 37, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Disable PostgreSQL module
  ^ here

2023-07-30 00:10:39,002 p=2629 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 00:10:39,023 p=2629 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 00:10:40,447 p=2629 u=ansible n=ansible | ok: [centos2]
2023-07-30 00:10:40,457 p=2629 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 00:10:40,495 p=2629 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 00:10:40,499 p=2629 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 00:10:40,801 p=2629 u=ansible n=ansible | changed: [centos2]
2023-07-30 00:10:40,804 p=2629 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 00:10:41,292 p=2629 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 00:10:41,292 p=2629 u=ansible n=ansible | changed: [centos2]
2023-07-30 00:10:41,298 p=2629 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 00:10:46,609 p=2629 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-07-30 00:10:46,610 p=2629 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 00:10:46,610 p=2629 u=ansible n=ansible | centos2                    : ok=4    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 00:31:31,304 p=2787 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 00:31:31,326 p=2787 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 00:31:32,805 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-30 00:31:32,814 p=2787 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 00:31:32,849 p=2787 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 00:31:32,852 p=2787 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 00:31:33,210 p=2787 u=ansible n=ansible | changed: [centos2]
2023-07-30 00:31:33,214 p=2787 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 00:31:33,666 p=2787 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 00:31:33,667 p=2787 u=ansible n=ansible | ok: [centos2]
2023-07-30 00:31:33,670 p=2787 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 00:31:40,795 p=2787 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-07-30 00:31:40,796 p=2787 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 00:31:40,796 p=2787 u=ansible n=ansible | centos2                    : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 01:13:43,627 p=2989 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 01:13:43,659 p=2989 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 01:13:45,079 p=2989 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:13:45,087 p=2989 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 01:13:45,119 p=2989 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 01:13:45,122 p=2989 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 01:13:45,455 p=2989 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:13:45,458 p=2989 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 01:13:45,874 p=2989 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 01:13:45,874 p=2989 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:13:45,877 p=2989 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 01:14:09,025 p=2989 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:14:09,028 p=2989 u=ansible n=ansible | TASK [install_sonarqube : Set OpenJDK 11 as default Java version] **********************************************************************************
2023-07-30 01:14:09,371 p=2989 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Specified path /usr/lib/jvm/java-11-openjdk-amd64/bin/java does not exist"}
2023-07-30 01:14:09,372 p=2989 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 01:14:09,372 p=2989 u=ansible n=ansible | centos2                    : ok=5    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 01:19:17,258 p=3175 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 01:19:17,277 p=3175 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 01:19:18,529 p=3175 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:19:18,537 p=3175 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 01:19:18,568 p=3175 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 01:19:18,571 p=3175 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 01:19:18,872 p=3175 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:19:18,875 p=3175 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 01:19:19,216 p=3175 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 01:19:19,216 p=3175 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:19:19,219 p=3175 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 01:19:19,826 p=3175 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:19:19,829 p=3175 u=ansible n=ansible | TASK [install_sonarqube : Set OpenJDK 11 as default Java version] **********************************************************************************
2023-07-30 01:19:20,115 p=3175 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:19:20,118 p=3175 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 01:22:55,214 p=3175 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:22:55,220 p=3175 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 01:22:57,281 p=3175 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchfqstpctj.rpm is not installed"}
2023-07-30 01:22:57,282 p=3175 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 01:22:57,282 p=3175 u=ansible n=ansible | centos2                    : ok=7    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 01:26:11,080 p=3421 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 01:26:11,100 p=3421 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 01:26:12,526 p=3421 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:26:12,536 p=3421 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 01:26:12,568 p=3421 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 01:26:12,572 p=3421 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 01:26:12,876 p=3421 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:26:12,880 p=3421 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 01:26:13,235 p=3421 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 01:26:13,235 p=3421 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:26:13,238 p=3421 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 01:26:13,938 p=3421 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:26:13,941 p=3421 u=ansible n=ansible | TASK [install_sonarqube : Set OpenJDK 11 as default Java version] **********************************************************************************
2023-07-30 01:26:14,230 p=3421 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:26:14,233 p=3421 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 01:26:14,841 p=3421 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:26:14,844 p=3421 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 01:26:17,077 p=3421 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:26:17,082 p=3421 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 01:26:17,355 p=3421 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "value of state must be one of: absent, installed, latest, present, removed, got: disabled"}
2023-07-30 01:26:17,356 p=3421 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 01:26:17,356 p=3421 u=ansible n=ansible | centos2                    : ok=8    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 01:27:24,780 p=3638 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 01:27:24,802 p=3638 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 01:27:26,170 p=3638 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:27:26,178 p=3638 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 01:27:26,210 p=3638 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 01:27:26,214 p=3638 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 01:27:26,633 p=3638 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:27:26,637 p=3638 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 01:27:27,083 p=3638 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 01:27:27,083 p=3638 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:27:27,087 p=3638 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 01:27:27,823 p=3638 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:27:27,826 p=3638 u=ansible n=ansible | TASK [install_sonarqube : Set OpenJDK 11 as default Java version] **********************************************************************************
2023-07-30 01:27:28,136 p=3638 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:27:28,139 p=3638 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 01:27:28,753 p=3638 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:27:28,756 p=3638 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 01:27:30,255 p=3638 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:27:30,260 p=3638 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 01:27:30,599 p=3638 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "value of state must be one of: absent, installed, latest, present, removed, got: disabled"}
2023-07-30 01:27:30,600 p=3638 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 01:27:30,600 p=3638 u=ansible n=ansible | centos2                    : ok=8    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 01:31:02,606 p=3851 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 01:31:02,627 p=3851 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 01:31:03,962 p=3851 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:31:03,969 p=3851 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 01:31:03,982 p=3851 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 01:31:03,985 p=3851 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 01:31:04,285 p=3851 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:31:04,288 p=3851 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 01:31:04,665 p=3851 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 01:31:04,665 p=3851 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:31:04,669 p=3851 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 01:31:05,404 p=3851 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:31:05,408 p=3851 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *******************************************************************************************
2023-07-30 01:31:05,724 p=3851 u=ansible n=ansible | changed: [centos2]
2023-07-30 01:31:05,727 p=3851 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 01:31:06,493 p=3851 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:31:06,497 p=3851 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 01:31:08,663 p=3851 u=ansible n=ansible | ok: [centos2]
2023-07-30 01:31:08,667 p=3851 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 01:31:08,993 p=3851 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "value of state must be one of: absent, installed, latest, present, removed, got: disabled"}
2023-07-30 01:31:08,993 p=3851 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 01:31:08,994 p=3851 u=ansible n=ansible | centos2                    : ok=8    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 09:54:07,211 p=2679 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 09:54:07,252 p=2679 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 09:54:08,774 p=2679 u=ansible n=ansible | ok: [centos2]
2023-07-30 09:54:08,782 p=2679 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 09:54:08,794 p=2679 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 09:54:08,798 p=2679 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 09:54:09,172 p=2679 u=ansible n=ansible | changed: [centos2]
2023-07-30 09:54:09,177 p=2679 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 09:54:09,574 p=2679 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 09:54:09,575 p=2679 u=ansible n=ansible | ok: [centos2]
2023-07-30 09:54:09,578 p=2679 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 09:54:10,592 p=2679 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'baseos': Cannot prepare internal mirrorlist: Curl error (6): Couldn't resolve host name for https://mirrors.centos.org/metalink?repo=centos-baseos-9-stream&arch=aarch64&protocol=https,http [Could not resolve host: mirrors.centos.org]", "rc": 1, "results": []}
2023-07-30 09:54:10,592 p=2679 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 09:54:10,593 p=2679 u=ansible n=ansible | centos2                    : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 09:59:25,476 p=2862 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 09:59:25,497 p=2862 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 09:59:26,892 p=2862 u=ansible n=ansible | ok: [centos2]
2023-07-30 09:59:26,900 p=2862 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 09:59:26,912 p=2862 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 09:59:26,916 p=2862 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 09:59:27,219 p=2862 u=ansible n=ansible | changed: [centos2]
2023-07-30 09:59:27,222 p=2862 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 09:59:27,568 p=2862 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 09:59:27,568 p=2862 u=ansible n=ansible | ok: [centos2]
2023-07-30 09:59:27,572 p=2862 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 09:59:30,941 p=2862 u=ansible n=ansible | ok: [centos2]
2023-07-30 09:59:30,945 p=2862 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *******************************************************************************************
2023-07-30 09:59:31,254 p=2862 u=ansible n=ansible | changed: [centos2]
2023-07-30 09:59:31,257 p=2862 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 09:59:31,910 p=2862 u=ansible n=ansible | ok: [centos2]
2023-07-30 09:59:31,913 p=2862 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 09:59:34,207 p=2862 u=ansible n=ansible | ok: [centos2]
2023-07-30 09:59:34,210 p=2862 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 09:59:34,482 p=2862 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "value of state must be one of: absent, installed, latest, present, removed, got: disabled"}
2023-07-30 09:59:34,483 p=2862 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 09:59:34,483 p=2862 u=ansible n=ansible | centos2                    : ok=8    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 10:06:44,994 p=3140 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 10:06:45,015 p=3140 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 10:06:46,436 p=3140 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:06:46,443 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 10:06:46,455 p=3140 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 10:06:46,458 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 10:06:46,766 p=3140 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:06:46,770 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 10:06:47,123 p=3140 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 10:06:47,123 p=3140 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:06:47,127 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 10:06:48,102 p=3140 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:06:48,106 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *******************************************************************************************
2023-07-30 10:06:48,452 p=3140 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:06:48,456 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 10:06:49,082 p=3140 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:06:49,085 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 10:06:51,102 p=3140 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:06:51,105 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 10:06:51,701 p=3140 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:06:51,705 p=3140 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14 database Server] ***********************************************************************************
2023-07-30 10:06:52,299 p=3140 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "failures": ["No package postgresql14 available.", "No package postgresql14-server available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2023-07-30 10:06:52,300 p=3140 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 10:06:52,300 p=3140 u=ansible n=ansible | centos2                    : ok=9    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 10:16:16,111 p=3387 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 10:16:16,133 p=3387 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 10:16:17,592 p=3387 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:16:17,601 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 10:16:17,616 p=3387 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 10:16:17,620 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 10:16:17,964 p=3387 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:16:17,968 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 10:16:18,394 p=3387 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 10:16:18,394 p=3387 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:16:18,397 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 10:16:19,080 p=3387 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:16:19,084 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *******************************************************************************************
2023-07-30 10:16:19,397 p=3387 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:16:19,400 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 10:16:20,031 p=3387 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:16:20,034 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 10:16:21,774 p=3387 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:16:21,779 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 10:16:22,451 p=3387 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:16:22,455 p=3387 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14 database Server] ***********************************************************************************
2023-07-30 10:16:23,149 p=3387 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "failures": ["No package postgresql14 available.", "No package postgresql14-server available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2023-07-30 10:16:23,150 p=3387 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 10:16:23,150 p=3387 u=ansible n=ansible | centos2                    : ok=9    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 10:20:05,230 p=3614 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 10:20:05,250 p=3614 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 10:20:06,477 p=3614 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:20:06,485 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 10:20:06,498 p=3614 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 10:20:06,501 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 10:20:06,826 p=3614 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:20:06,830 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 10:20:07,198 p=3614 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 10:20:07,198 p=3614 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:20:07,202 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 10:20:07,967 p=3614 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:20:07,970 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *******************************************************************************************
2023-07-30 10:20:08,290 p=3614 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:20:08,294 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 10:20:08,914 p=3614 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:20:08,917 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 10:20:10,844 p=3614 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:20:10,847 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 10:20:11,436 p=3614 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:20:11,439 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 10:20:15,739 p=3614 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:20:15,742 p=3614 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 10:20:15,997 p=3614 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "cmd": "/usr/pgsql-14/bin/postgresql-14-setup initdb", "msg": "[Errno 2] No such file or directory: b'/usr/pgsql-14/bin/postgresql-14-setup'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-30 10:20:15,998 p=3614 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 10:20:15,998 p=3614 u=ansible n=ansible | centos2                    : ok=10   changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 10:40:06,993 p=3894 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 10:40:07,017 p=3894 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 10:40:08,497 p=3894 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:40:08,504 p=3894 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 10:40:08,518 p=3894 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 10:40:08,521 p=3894 u=ansible n=ansible | TASK [install_sonarqube : Add limits for sonarqube in limits.conf] *********************************************************************************
2023-07-30 10:40:08,823 p=3894 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:40:08,826 p=3894 u=ansible n=ansible | TASK [install_sonarqube : Add user SonarQube] ******************************************************************************************************
2023-07-30 10:40:09,292 p=3894 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 10:40:09,292 p=3894 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:40:09,296 p=3894 u=ansible n=ansible | TASK [install_sonarqube : Install Java] ************************************************************************************************************
2023-07-30 10:40:10,224 p=3894 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:40:10,228 p=3894 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *******************************************************************************************
2023-07-30 10:40:10,541 p=3894 u=ansible n=ansible | changed: [centos2]
2023-07-30 10:40:10,544 p=3894 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 10:40:11,249 p=3894 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:40:11,252 p=3894 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 10:40:12,792 p=3894 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: OSError: Could not open: /root/.ansible/tmp/ansible-tmp-1690688411.2831593-4039-107930556695285/pgdg-redhat-repo-latest.noarch.rpmseuhzf1i0
2023-07-30 10:40:12,792 p=3894 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "module_stderr": "Shared connection to 192.168.64.13 closed.\r\n", "module_stdout": "Traceback (most recent call last):\r\n  File \"/root/.ansible/tmp/ansible-tmp-1690688411.2831593-4039-107930556695285/AnsiballZ_dnf.py\", line 107, in <module>\r\n    _ansiballz_main()\r\n  File \"/root/.ansible/tmp/ansible-tmp-1690688411.2831593-4039-107930556695285/AnsiballZ_dnf.py\", line 99, in _ansiballz_main\r\n    invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS)\r\n  File \"/root/.ansible/tmp/ansible-tmp-1690688411.2831593-4039-107930556695285/AnsiballZ_dnf.py\", line 47, in invoke_module\r\n    runpy.run_module(mod_name='ansible.modules.dnf', init_globals=dict(_module_fqn='ansible.modules.dnf', _modlib_path=modlib_path),\r\n  File \"/usr/lib64/python3.9/runpy.py\", line 225, in run_module\r\n    return _run_module_code(code, init_globals, run_name, mod_spec)\r\n  File \"/usr/lib64/python3.9/runpy.py\", line 97, in _run_module_code\r\n    _run_code(code, mod_globals, init_globals,\r\n  File \"/usr/lib64/python3.9/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/tmp/ansible_ansible.legacy.dnf_payload_4coal_dz/ansible_ansible.legacy.dnf_payload.zip/ansible/modules/dnf.py\", line 1481, in <module>\r\n  File \"/tmp/ansible_ansible.legacy.dnf_payload_4coal_dz/ansible_ansible.legacy.dnf_payload.zip/ansible/modules/dnf.py\", line 1470, in main\r\n  File \"/tmp/ansible_ansible.legacy.dnf_payload_4coal_dz/ansible_ansible.legacy.dnf_payload.zip/ansible/modules/dnf.py\", line 1443, in run\r\n  File \"/tmp/ansible_ansible.legacy.dnf_payload_4coal_dz/ansible_ansible.legacy.dnf_payload.zip/ansible/modules/dnf.py\", line 1088, in ensure\r\n  File \"/tmp/ansible_ansible.legacy.dnf_payload_4coal_dz/ansible_ansible.legacy.dnf_payload.zip/ansible/modules/dnf.py\", line 988, in _install_remote_rpms\r\n  File \"/usr/lib/python3.9/site-packages/dnf/base.py\", line 1341, in add_remote_rpms\r\n    raise IOError(_(\"Could not open: {}\").format(' '.join(pkgs_error)))\r\nOSError: Could not open: /root/.ansible/tmp/ansible-tmp-1690688411.2831593-4039-107930556695285/pgdg-redhat-repo-latest.noarch.rpmseuhzf1i0\r\n", "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error", "rc": 1}
2023-07-30 10:40:12,793 p=3894 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 10:40:12,793 p=3894 u=ansible n=ansible | centos2                    : ok=7    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 10:42:06,903 p=4116 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 10:42:06,923 p=4116 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 10:42:08,199 p=4116 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:42:08,206 p=4116 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 10:42:08,219 p=4116 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 10:42:08,223 p=4116 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 10:42:08,917 p=4116 u=ansible n=ansible | ok: [centos2]
2023-07-30 10:42:08,920 p=4116 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL 10 repository] ************************************************************************************
2023-07-30 10:59:06,594 p=4116 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.64.13 port 22: No route to host"}
2023-07-30 10:59:06,596 p=4116 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 10:59:06,596 p=4116 u=ansible n=ansible | centos2                    : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 11:02:14,288 p=4271 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 11:02:14,310 p=4271 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 11:02:15,817 p=4271 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:02:15,824 p=4271 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 11:02:15,836 p=4271 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 11:02:15,839 p=4271 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 11:02:17,338 p=4271 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:02:17,342 p=4271 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL 10 repository] ************************************************************************************
2023-07-30 11:02:26,137 p=4271 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "failures": [], "msg": "Depsolve Error occurred: \n Problem: conflicting requests\n  - package postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline does not have a compatible architecture\n  - nothing provides postgresql10-libs(x86-64) = 10.23-1PGDG.rhel7 needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.11)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.14)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.15)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.2.5)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.3)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.3.4)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.4)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.6)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libc.so.6(GLIBC_2.7)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libm.so.6(GLIBC_2.2.5)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libpthread.so.0(GLIBC_2.2.5)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides libreadline.so.6()(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline\n  - nothing provides librt.so.1(GLIBC_2.2.5)(64bit) needed by postgresql10-10.23-1PGDG.rhel7.x86_64 from @commandline", "rc": 1, "results": []}
2023-07-30 11:02:26,137 p=4271 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 11:02:26,137 p=4271 u=ansible n=ansible | centos2                    : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 11:15:11,486 p=4455 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 11:15:11,508 p=4455 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 11:15:12,864 p=4455 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:15:12,872 p=4455 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 11:15:12,887 p=4455 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 11:15:12,892 p=4455 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 11:15:13,792 p=4455 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:15:13,797 p=4455 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL 10 repository] ************************************************************************************
2023-07-30 11:15:15,402 p=4455 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:15:15,406 p=4455 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 11:15:16,149 p=4455 u=ansible n=ansible | changed: [centos2]
2023-07-30 11:15:16,153 p=4455 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 10 database Server] ***********************************************************************************
2023-07-30 11:15:16,826 p=4455 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "failures": ["No package postgresql10-server available.", "No package postgresql10-contrib available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2023-07-30 11:15:16,827 p=4455 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 11:15:16,827 p=4455 u=ansible n=ansible | centos2                    : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 11:42:32,346 p=4642 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 11:42:32,369 p=4642 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 11:42:33,788 p=4642 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:42:33,795 p=4642 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 11:42:33,807 p=4642 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 11:42:33,810 p=4642 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 11:42:34,514 p=4642 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:42:34,517 p=4642 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 11:42:36,303 p=4642 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:42:36,307 p=4642 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 11:42:37,103 p=4642 u=ansible n=ansible | changed: [centos2]
2023-07-30 11:42:37,108 p=4642 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 11:42:37,824 p=4642 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:42:37,828 p=4642 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 11:42:38,275 p=4642 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": ["/usr/bin/postgresql-setup", "initdb"], "delta": "0:00:00.106944", "end": "2023-07-30 11:42:38.232346", "msg": "non-zero return code", "rc": 1, "start": "2023-07-30 11:42:38.125402", "stderr": "WARNING: using obsoleted argument syntax, try --help\nWARNING: arguments transformed to: postgresql-setup --initdb --unit postgresql\n * Initializing database in '/var/lib/pgsql/data'\nERROR: Data directory /var/lib/pgsql/data is not empty!\nERROR: Initializing database failed, possibly see /var/lib/pgsql/initdb_postgresql.log", "stderr_lines": ["WARNING: using obsoleted argument syntax, try --help", "WARNING: arguments transformed to: postgresql-setup --initdb --unit postgresql", " * Initializing database in '/var/lib/pgsql/data'", "ERROR: Data directory /var/lib/pgsql/data is not empty!", "ERROR: Initializing database failed, possibly see /var/lib/pgsql/initdb_postgresql.log"], "stdout": "", "stdout_lines": []}
2023-07-30 11:42:38,276 p=4642 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 11:42:38,276 p=4642 u=ansible n=ansible | centos2                    : ok=6    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 11:50:18,983 p=4846 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 11:50:19,003 p=4846 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 11:50:20,353 p=4846 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:50:20,361 p=4846 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 11:50:20,374 p=4846 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 11:50:20,377 p=4846 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 11:50:21,141 p=4846 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:50:21,144 p=4846 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 11:50:22,734 p=4846 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:50:22,739 p=4846 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 11:50:23,483 p=4846 u=ansible n=ansible | changed: [centos2]
2023-07-30 11:50:23,486 p=4846 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 11:50:24,108 p=4846 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:50:24,112 p=4846 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 11:50:24,906 p=4846 u=ansible n=ansible | changed: [centos2]
2023-07-30 11:50:24,909 p=4846 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 11:50:25,543 p=4846 u=ansible n=ansible | changed: [centos2]
2023-07-30 11:50:25,547 p=4846 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 11:50:25,556 p=4846 u=ansible n=ansible | skipping: [centos2]
2023-07-30 11:50:25,572 p=4846 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 11:50:25,572 p=4846 u=ansible n=ansible | centos2                    : ok=8    changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-30 11:54:04,188 p=5057 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 11:54:04,208 p=5057 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 11:54:05,558 p=5057 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:54:05,566 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 11:54:05,578 p=5057 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 11:54:05,581 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 11:54:06,475 p=5057 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:54:06,479 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 11:54:08,219 p=5057 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:54:08,223 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 11:54:08,881 p=5057 u=ansible n=ansible | changed: [centos2]
2023-07-30 11:54:08,884 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 11:54:09,512 p=5057 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:54:09,515 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 11:54:09,806 p=5057 u=ansible n=ansible | ok: [centos2]
2023-07-30 11:54:09,809 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 11:54:10,654 p=5057 u=ansible n=ansible | changed: [centos2]
2023-07-30 11:54:10,659 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 11:54:11,151 p=5057 u=ansible n=ansible | changed: [centos2]
2023-07-30 11:54:11,155 p=5057 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 11:54:11,164 p=5057 u=ansible n=ansible | skipping: [centos2]
2023-07-30 11:54:11,180 p=5057 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 11:54:11,181 p=5057 u=ansible n=ansible | centos2                    : ok=9    changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-30 12:14:49,962 p=5299 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 12:14:49,966 p=5299 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 12:14:51,320 p=5299 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:14:51,328 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 12:14:51,356 p=5299 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 12:14:51,360 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 12:14:52,540 p=5299 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:14:52,543 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 12:14:55,036 p=5299 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:14:55,039 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Disable PostgreSQL module] ***********************************************************************************************
2023-07-30 12:14:55,701 p=5299 u=ansible n=ansible | changed: [centos2]
2023-07-30 12:14:55,704 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 12:14:56,341 p=5299 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:14:56,344 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 12:14:56,653 p=5299 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:14:56,657 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 12:14:56,664 p=5299 u=ansible n=ansible | skipping: [centos2]
2023-07-30 12:14:56,668 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 12:14:57,163 p=5299 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:14:57,166 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 12:14:57,463 p=5299 u=ansible n=ansible | changed: [centos2]
2023-07-30 12:14:57,466 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 12:14:57,822 p=5299 u=ansible n=ansible | changed: [centos2]
2023-07-30 12:14:57,825 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 12:14:58,142 p=5299 u=ansible n=ansible | changed: [centos2]
2023-07-30 12:14:58,145 p=5299 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 12:14:58,153 p=5299 u=ansible n=ansible | skipping: [centos2]
2023-07-30 12:14:58,163 p=5299 u=ansible n=ansible | RUNNING HANDLER [Restart PostgreSQL] ***************************************************************************************************************
2023-07-30 12:14:58,524 p=5299 u=ansible n=ansible | changed: [centos2]
2023-07-30 12:14:58,530 p=5299 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 12:14:58,530 p=5299 u=ansible n=ansible | centos2                    : ok=12   changed=5    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-30 12:47:11,047 p=5974 u=ansible n=ansible | Encryption successful
2023-07-30 12:56:59,710 p=6033 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 12:56:59,714 p=6033 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 12:57:01,267 p=6033 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:57:01,275 p=6033 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 12:57:01,290 p=6033 u=ansible n=ansible | ERROR! couldn't resolve module/action 'postgres_db'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 89, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Create sonarqubedb database
  ^ here

2023-07-30 12:57:14,566 p=6112 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 12:57:14,570 p=6112 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 12:57:15,624 p=6112 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:57:15,633 p=6112 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 12:57:15,652 p=6112 u=ansible n=ansible | ERROR! couldn't resolve module/action 'postgres_db_module'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 89, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Create sonarqubedb database
  ^ here

2023-07-30 12:58:39,188 p=6176 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 12:58:39,192 p=6176 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 12:58:40,623 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:40,631 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 12:58:40,649 p=6176 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 12:58:40,653 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 12:58:42,394 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:42,398 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 12:58:45,040 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:45,044 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 12:58:45,651 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:45,654 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 12:58:45,953 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:45,956 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 12:58:45,963 p=6176 u=ansible n=ansible | skipping: [centos2]
2023-07-30 12:58:45,967 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 12:58:46,442 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:46,445 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 12:58:46,752 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:46,755 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 12:58:46,993 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:46,997 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 12:58:47,239 p=6176 u=ansible n=ansible | ok: [centos2]
2023-07-30 12:58:47,242 p=6176 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 12:59:54,129 p=6176 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 13:00:24,617 p=6480 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:00:24,621 p=6480 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:00:25,736 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:25,744 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:00:25,760 p=6480 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:00:25,764 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:00:26,555 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:26,558 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:00:28,917 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:28,920 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:00:29,532 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:29,536 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:00:29,856 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:29,860 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:00:29,867 p=6480 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:00:29,871 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:00:30,363 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:30,367 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:00:30,672 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:30,675 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:00:30,911 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:30,914 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:00:31,151 p=6480 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:00:31,154 p=6480 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:00:31,443 p=6480 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "cmd": "whoai", "msg": "[Errno 2] No such file or directory: b'whoai'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-30 13:00:31,443 p=6480 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 13:00:31,443 p=6480 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 13:00:59,620 p=6709 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:00:59,624 p=6709 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:01:00,669 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:00,679 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:01:00,698 p=6709 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:01:00,704 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:01:01,462 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:01,466 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:01:03,982 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:03,986 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:01:04,691 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:04,694 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:01:04,992 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:04,995 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:01:05,002 p=6709 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:01:05,005 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:01:05,449 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:05,452 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:01:05,754 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:05,757 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:01:06,029 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:06,032 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:01:06,272 p=6709 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:01:06,275 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:01:06,584 p=6709 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:01:06,588 p=6709 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:01:06,596 p=6709 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:01:06.551888', 'end': '2023-07-30 13:01:06.554409', 'delta': '0:00:00.002521', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:01:06,601 p=6709 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:03:56,876 p=6709 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 13:05:35,452 p=7190 u=ansible n=ansible | Using /etc/ansible/ansible.cfg as config file
2023-07-30 13:05:35,551 p=7190 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:05:35,555 p=7190 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:05:36,926 p=7190 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:05:36,933 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:05:36,948 p=7190 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:05:36,952 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:05:37,664 p=7190 u=ansible n=ansible | ok: [centos2] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}
2023-07-30 13:05:37,666 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:05:39,829 p=7190 u=ansible n=ansible | ok: [centos2] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": ["Installed /root/.ansible/tmp/ansible-tmp-1690697137.6976051-7257-174289874503216/pgdg-redhat-repo-latest.noarchvplppewo.rpm"]}
2023-07-30 13:05:39,833 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:05:40,423 p=7190 u=ansible n=ansible | ok: [centos2] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}
2023-07-30 13:05:40,426 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:05:40,735 p=7190 u=ansible n=ansible | ok: [centos2] => {"changed": false, "stat": {"atime": 1690694246.6539638, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "binary", "ctime": 1690694114.6265717, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 26, "gr_name": "postgres", "inode": 67664232, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "inode/directory", "mode": "0700", "mtime": 1690694114.6265717, "nlink": 20, "path": "/var/lib/pgsql/data", "pw_name": "postgres", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 4096, "uid": 26, "version": "2850351817", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-30 13:05:40,739 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:05:40,746 p=7190 u=ansible n=ansible | skipping: [centos2] => {"changed": false, "false_condition": "data_file.stat.exists == false", "skip_reason": "Conditional result was False"}
2023-07-30 13:05:40,750 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:05:41,238 p=7190 u=ansible n=ansible | ok: [centos2] => {"changed": false, "enabled": true, "name": "postgresql", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:postgresql_unit_file_t:s0", "ActiveEnterTimestamp": "Sun 2023-07-30 12:14:58 +07", "ActiveEnterTimestampMonotonic": "4494705529", "ActiveExitTimestamp": "Sun 2023-07-30 12:14:58 +07", "ActiveExitTimestampMonotonic": "4494663689", "ActiveState": "active", "After": "network.target basic.target systemd-journald.socket sysinit.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Sun 2023-07-30 12:14:58 +07", "AssertTimestampMonotonic": "4494676854", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "1093330000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Sun 2023-07-30 12:14:58 +07", "ConditionTimestampMonotonic": "4494676853", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/postgresql.service", "ControlGroupId": "5258", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "PostgreSQL database server", "DevicePolicy": "auto", "DynamicUser": "no", "Environment": "PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj PG_OOM_ADJUST_VALUE=0 PGDATA=/var/lib/pgsql/data", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "9590", "ExecMainStartTimestamp": "Sun 2023-07-30 12:14:58 +07", "ExecMainStartTimestampMonotonic": "4494684068", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; ignore_errors=no ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[n/a] ; pid=9590 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; flags= ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[n/a] ; pid=9590 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; ignore_errors=no ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[Sun 2023-07-30 12:14:58 +07] ; pid=9588 ; code=exited ; status=0 }", "ExecStartPreEx": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; flags= ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[Sun 2023-07-30 12:14:58 +07] ; pid=9588 ; code=exited ; status=0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/postgresql.service", "FreezerState": "running", "GID": "26", "Group": "postgres", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "postgresql.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Sun 2023-07-30 12:14:58 +07", "InactiveEnterTimestampMonotonic": "4494676470", "InactiveExitTimestamp": "Sun 2023-07-30 12:14:58 +07", "InactiveExitTimestampMonotonic": "4494677836", "InvocationID": "ec3286a98e38416ab7e34d8c90923fca", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "2", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "6767", "LimitNPROCSoft": "6767", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "6767", "LimitSIGPENDINGSoft": "6767", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "9590", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "24002560", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "postgresql.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "-1000", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "no", "RestartKillSignal": "2", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Sun 2023-07-30 12:14:58 +07", "StateChangeTimestampMonotonic": "4494705529", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "8", "TasksMax": "10827", "TimeoutAbortUSec": "infinity", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "infinity", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "infinity", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "26", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "User": "postgres", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-30 13:05:41,241 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:05:41,545 p=7190 u=ansible n=ansible | ok: [centos2] => {"backup": "", "changed": false, "msg": ""}
2023-07-30 13:05:41,548 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:05:41,786 p=7190 u=ansible n=ansible | ok: [centos2] => {"backup": "", "changed": false, "msg": ""}
2023-07-30 13:05:41,789 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:05:42,030 p=7190 u=ansible n=ansible | ok: [centos2] => {"backup": "", "changed": false, "msg": ""}
2023-07-30 13:05:42,032 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:05:42,323 p=7190 u=ansible n=ansible | changed: [centos2] => {"changed": true, "cmd": ["whoami"], "delta": "0:00:00.001621", "end": "2023-07-30 13:05:42.293012", "msg": "", "rc": 0, "start": "2023-07-30 13:05:42.291391", "stderr": "", "stderr_lines": [], "stdout": "root", "stdout_lines": ["root"]}
2023-07-30 13:05:42,326 p=7190 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:05:42,334 p=7190 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:05:42.291391', 'end': '2023-07-30 13:05:42.293012', 'delta': '0:00:00.001621', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:05:42,339 p=7190 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:05:46,754 p=7190 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 13:05:49,978 p=7445 u=ansible n=ansible | ansible-playbook [core 2.15.0]
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/home/ansible/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.11/site-packages/ansible
  ansible collection location = /home/ansible/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible-playbook
  python version = 3.11.4 (main, Jun 30 2023, 00:00:00) [GCC 11.4.1 20230605 (Red Hat 11.4.1-2)] (/usr/bin/python3.11)
  jinja version = 3.1.2
  libyaml = True
2023-07-30 13:05:49,978 p=7445 u=ansible n=ansible | Using /etc/ansible/ansible.cfg as config file
2023-07-30 13:05:50,033 p=7445 u=ansible n=ansible | host_list declined parsing /home/ansible/labs/inventory as it did not pass its verify_file() method
2023-07-30 13:05:50,033 p=7445 u=ansible n=ansible | script declined parsing /home/ansible/labs/inventory as it did not pass its verify_file() method
2023-07-30 13:05:50,033 p=7445 u=ansible n=ansible | auto declined parsing /home/ansible/labs/inventory as it did not pass its verify_file() method
2023-07-30 13:05:50,034 p=7445 u=ansible n=ansible | Parsed /home/ansible/labs/inventory inventory source with ini plugin
2023-07-30 13:05:50,055 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:50,057 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:50,057 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:50,058 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:50,058 p=7445 u=ansible n=ansible | statically imported: /home/ansible/labs/roles/install_sonarqube/handlers/handlers_service.yml
2023-07-30 13:05:50,083 p=7445 u=ansible n=ansible | Skipping callback 'default', as we already have a stdout callback.
2023-07-30 13:05:50,083 p=7445 u=ansible n=ansible | Skipping callback 'minimal', as we already have a stdout callback.
2023-07-30 13:05:50,083 p=7445 u=ansible n=ansible | Skipping callback 'oneline', as we already have a stdout callback.
2023-07-30 13:05:50,083 p=7445 u=ansible n=ansible | PLAYBOOK: playbook.yml *****************************************************************************************************************************
2023-07-30 13:05:50,083 p=7445 u=ansible n=ansible | 1 plays in playbook.yml
2023-07-30 13:05:50,084 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:50,084 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:50,084 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:50,085 p=7445 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:05:50,089 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:50,090 p=7445 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:05:50,096 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:50,097 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:50,124 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:50,124 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:50,124 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644 `" && echo ansible-tmp-1690697150.123292-7449-26337489044644="` echo /root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644 `" ) && sleep 0'"'"''
2023-07-30 13:05:50,149 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697150.123292-7449-26337489044644=/root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644\n', b'')
2023-07-30 13:05:50,266 p=7445 u=ansible n=ansible | <centos2> Attempting python interpreter discovery
2023-07-30 13:05:50,266 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:50,267 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo PLATFORM; uname; echo FOUND; command -v '"'"'"'"'"'"'"'"'python3.11'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.10'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.9'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.8'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.6'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python3.5'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python3'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/libexec/platform-python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python2.7'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'/usr/bin/python'"'"'"'"'"'"'"'"'; command -v '"'"'"'"'"'"'"'"'python'"'"'"'"'"'"'"'"'; echo ENDFOUND && sleep 0'"'"''
2023-07-30 13:05:50,291 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'PLATFORM\nLinux\nFOUND\n/usr/bin/python3.9\n/usr/bin/python3\n/usr/libexec/platform-python\n/usr/bin/python\n/usr/bin/python\nENDFOUND\n', b'')
2023-07-30 13:05:50,291 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:50,291 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3.9 && sleep 0'"'"''
2023-07-30 13:05:50,330 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'{"platform_dist_result": [], "osrelease_content": "NAME=\\"CentOS Stream\\"\\nVERSION=\\"9\\"\\nID=\\"centos\\"\\nID_LIKE=\\"rhel fedora\\"\\nVERSION_ID=\\"9\\"\\nPLATFORM_ID=\\"platform:el9\\"\\nPRETTY_NAME=\\"CentOS Stream 9\\"\\nANSI_COLOR=\\"0;31\\"\\nLOGO=\\"fedora-logo-icon\\"\\nCPE_NAME=\\"cpe:/o:centos:centos:9\\"\\nHOME_URL=\\"https://centos.org/\\"\\nBUG_REPORT_URL=\\"https://bugzilla.redhat.com/\\"\\nREDHAT_SUPPORT_PRODUCT=\\"Red Hat Enterprise Linux 9\\"\\nREDHAT_SUPPORT_PRODUCT_VERSION=\\"CentOS Stream\\"\\n"}\n', b'')
2023-07-30 13:05:50,331 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/setup.py
2023-07-30 13:05:50,332 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpb5aw6hi1 TO /root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644/AnsiballZ_setup.py
2023-07-30 13:05:50,332 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:50,379 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpb5aw6hi1 /root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644/AnsiballZ_setup.py\n', b'')
2023-07-30 13:05:50,379 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:50,379 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644/ /root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644/AnsiballZ_setup.py && sleep 0'"'"''
2023-07-30 13:05:50,406 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:50,406 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:50,407 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644/AnsiballZ_setup.py && sleep 0'"'"''
2023-07-30 13:05:51,231 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"ansible_facts": {"ansible_user_id": "root", "ansible_user_uid": 0, "ansible_user_gid": 0, "ansible_user_gecos": "root", "ansible_user_dir": "/root", "ansible_user_shell": "/bin/bash", "ansible_real_user_id": 0, "ansible_effective_user_id": 0, "ansible_real_group_id": 0, "ansible_effective_group_id": 0, "ansible_hostnqn": "nqn.2014-08.org.nvmexpress:uuid:3beb43d4-d9fd-4081-bf7c-48c0355b64a1", "ansible_virtualization_role": "guest", "ansible_virtualization_type": "kvm", "ansible_virtualization_tech_guest": ["kvm"], "ansible_virtualization_tech_host": [], "ansible_date_time": {"year": "2023", "month": "07", "weekday": "Sunday", "weekday_number": "0", "weeknumber": "30", "day": "30", "hour": "13", "minute": "05", "second": "50", "epoch": "1690697150", "epoch_int": "1690697150", "date": "2023-07-30", "time": "13:05:50", "iso8601_micro": "2023-07-30T06:05:50.574713Z", "iso8601": "2023-07-30T06:05:50Z", "iso8601_basic": "20230730T130550574713", "iso8601_basic_short": "20230730T130550", "tz": "+07", "tz_dst": "+07", "tz_offset": "+0700"}, "ansible_lsb": {}, "ansible_python": {"version": {"major": 3, "minor": 9, "micro": 17, "releaselevel": "final", "serial": 0}, "version_info": [3, 9, 17, "final", 0], "executable": "/usr/bin/python3", "has_sslcontext": true, "type": "cpython"}, "ansible_distribution": "CentOS", "ansible_distribution_release": "Stream", "ansible_distribution_version": "9", "ansible_distribution_major_version": "9", "ansible_distribution_file_path": "/etc/centos-release", "ansible_distribution_file_variety": "CentOS", "ansible_distribution_file_parsed": true, "ansible_os_family": "RedHat", "ansible_system": "Linux", "ansible_kernel": "5.14.0-344.el9.aarch64", "ansible_kernel_version": "#1 SMP PREEMPT_DYNAMIC Mon Jul 24 10:20:13 UTC 2023", "ansible_machine": "aarch64", "ansible_python_version": "3.9.17", "ansible_fqdn": "localhost", "ansible_hostname": "target-2", "ansible_nodename": "target-2", "ansible_domain": "", "ansible_userspace_bits": "64", "ansible_architecture": "aarch64", "ansible_machine_id": "5a976a6520e84cb6a89dddcc49fd29ec", "ansible_ssh_host_key_rsa_public": "AAAAB3NzaC1yc2EAAAADAQABAAABgQC3x3gqM5iGftJvdQsAsQSdoX2Wra4It/vJ0lbpv6AcPAc0Q3Qtq59HMP9MHm9qIEALY/ZzmauOKvhtm4oSvKv5UX/vv2ZiTpxW97wqeaA6WFxm9eqGJWqbFh9BeOx6Xg+Y14HzdK3pNlnCjLyJorm2XC597VZB6ioC4uStdMni82gS1ibJbrrJzni9S5Lh9Zeg/XzUhhuB4j+8xdGHBV5J/vnixiWnDctH6fYp+Ik0l11cWlCwd6Yb4reIdXa0YsOodNV3Uhj8V12UAlcr+cGLkHyvd/ajAKIs/olLwvXd93cp0EGuVHIMjFy6kYH4rn+RdrPYayDHrikGJFosDmU+dTlct2Zvm4qn2nusDfIYr2EGFncSQQ+IMIik9Go/+GWcA2RRyFDRuP7ztmDH2VCr21J9QOUkYEvfEGbvzpAoih3XXe66bPtCKiiJd4AOd/29zts58ZbqSjYTp+Tncy3cyoIxsfHIQg4oFPCRiOeAeLjtHwnFLtRzaeA4MBa0fNU=", "ansible_ssh_host_key_rsa_public_keytype": "ssh-rsa", "ansible_ssh_host_key_ecdsa_public": "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBOQ14qsLl2kYq0N3J3Jh67E9RHJoMc36pUYO7099Rh5tCwPWSl9F5aAis+7QqwRpUxG+hjvFqKljxB/1XB6575Y=", "ansible_ssh_host_key_ecdsa_public_keytype": "ecdsa-sha2-nistp256", "ansible_ssh_host_key_ed25519_public": "AAAAC3NzaC1lZDI1NTE5AAAAIB4RFOgEjyPU+Bb27tWvVm2O7eVum9zA6645V8mz3Fgc", "ansible_ssh_host_key_ed25519_public_keytype": "ssh-ed25519", "ansible_is_chroot": false, "ansible_selinux_python_present": true, "ansible_selinux": {"status": "enabled", "policyvers": 33, "config_mode": "enforcing", "mode": "enforcing", "type": "targeted"}, "ansible_dns": {"nameservers": ["192.168.64.1", "fe80::183e:efff:fe6d:d464%enp0s1"]}, "ansible_system_capabilities_enforced": "False", "ansible_system_capabilities": [], "ansible_fips": false, "ansible_processor": ["0", "1", "2", "3"], "ansible_processor_count": 4, "ansible_processor_cores": 1, "ansible_processor_threads_per_core": 1, "ansible_processor_vcpus": 4, "ansible_processor_nproc": 4, "ansible_memtotal_mb": 1748, "ansible_memfree_mb": 85, "ansible_swaptotal_mb": 2135, "ansible_swapfree_mb": 1002, "ansible_memory_mb": {"real": {"total": 1748, "used": 1663, "free": 85}, "nocache": {"free": 398, "used": 1350}, "swap": {"total": 2135, "free": 1002, "used": 1133, "cached": 49}}, "ansible_bios_date": "02/06/2015", "ansible_bios_vendor": "EFI Development Kit II / OVMF", "ansible_bios_version": "0.0.0", "ansible_board_asset_tag": "NA", "ansible_board_name": "NA", "ansible_board_serial": "NA", "ansible_board_vendor": "NA", "ansible_board_version": "NA", "ansible_chassis_asset_tag": "NA", "ansible_chassis_serial": "NA", "ansible_chassis_vendor": "QEMU", "ansible_chassis_version": "virt-7.2", "ansible_form_factor": "Other", "ansible_product_name": "QEMU Virtual Machine", "ansible_product_serial": "NA", "ansible_product_uuid": "dca4e370-691f-4b2d-aec9-9ec5e9ed6214", "ansible_product_version": "virt-7.2", "ansible_system_vendor": "QEMU", "ansible_devices": {"dm-1": {"virtual": 1, "links": {"ids": ["dm-name-cs-swap", "dm-uuid-LVM-UNh8fApPOpwST8umOwGSRaL2D1kGorbE0VnzMYr3Dmh10pXZD1vaonjej2cUJPDr"], "uuids": ["e856525d-6c04-46a4-b252-27c571cc8637"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "512", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "4374528", "sectorsize": "512", "size": "2.09 GB", "host": "", "holders": []}, "sr0": {"virtual": 1, "links": {"ids": ["usb-QEMU_QEMU_CD-ROM_1-0000:00:04.0-4.1-0:0"], "uuids": [], "labels": [], "masters": []}, "vendor": "QEMU", "model": "QEMU CD-ROM", "sas_address": null, "sas_device_handle": null, "removable": "1", "support_discard": "0", "partitions": {}, "rotational": "1", "scheduler_mode": "mq-deadline", "sectors": "2097151", "sectorsize": "512", "size": "1024.00 MB", "host": "USB controller: NEC Corporation uPD720200 USB 3.0 Host Controller (rev 03)", "holders": []}, "dm-2": {"virtual": 1, "links": {"ids": ["dm-name-cs-home", "dm-uuid-LVM-UNh8fApPOpwST8umOwGSRaL2D1kGorbEvLZTV8dOQEcTwJnxyHAKIlOrh1MgcFNG"], "uuids": ["9648e233-35ed-42cb-a312-738c3174aa40"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "512", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "41500672", "sectorsize": "512", "size": "19.79 GB", "host": "", "holders": []}, "dm-0": {"virtual": 1, "links": {"ids": ["dm-name-cs-root", "dm-uuid-LVM-UNh8fApPOpwST8umOwGSRaL2D1kGorbEldGqGBIrs335Ch1SgkLF0SJj5rLJTi3u"], "uuids": ["e3fb2f10-309e-47df-be05-33b4de292f39"], "labels": [], "masters": []}, "vendor": null, "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "512", "partitions": {}, "rotational": "1", "scheduler_mode": "", "sectors": "85008384", "sectorsize": "512", "size": "40.54 GB", "host": "", "holders": []}, "vda": {"virtual": 1, "links": {"ids": [], "uuids": [], "labels": [], "masters": []}, "vendor": "0x1af4", "model": null, "sas_address": null, "sas_device_handle": null, "removable": "0", "support_discard": "512", "partitions": {"vda2": {"links": {"ids": [], "uuids": ["f749cec3-ad36-4fce-a403-b3527c671c37"], "labels": [], "masters": []}, "start": "1230848", "sectors": "2097152", "sectorsize": 512, "size": "1.00 GB", "uuid": "f749cec3-ad36-4fce-a403-b3527c671c37", "holders": []}, "vda3": {"links": {"ids": ["lvm-pv-uuid-fFG2vJ-5SbN-F42O-UpF4-h4xC-I0ef-d2QXmk"], "uuids": [], "labels": [], "masters": ["dm-0", "dm-1", "dm-2"]}, "start": "3328000", "sectors": "130887680", "sectorsize": 512, "size": "62.41 GB", "uuid": null, "holders": ["cs-swap", "cs-home", "cs-root"]}, "vda1": {"links": {"ids": [], "uuids": ["7300-4DF4"], "labels": [], "masters": []}, "start": "2048", "sectors": "1228800", "sectorsize": 512, "size": "600.00 MB", "uuid": "7300-4DF4", "holders": []}}, "rotational": "1", "scheduler_mode": "none", "sectors": "134217728", "sectorsize": "512", "size": "64.00 GB", "host": "SCSI storage controller: Red Hat, Inc. Virtio block device", "holders": []}}, "ansible_device_links": {"ids": {"sr0": ["usb-QEMU_QEMU_CD-ROM_1-0000:00:04.0-4.1-0:0"], "dm-2": ["dm-name-cs-home", "dm-uuid-LVM-UNh8fApPOpwST8umOwGSRaL2D1kGorbEvLZTV8dOQEcTwJnxyHAKIlOrh1MgcFNG"], "vda3": ["lvm-pv-uuid-fFG2vJ-5SbN-F42O-UpF4-h4xC-I0ef-d2QXmk"], "dm-1": ["dm-name-cs-swap", "dm-uuid-LVM-UNh8fApPOpwST8umOwGSRaL2D1kGorbE0VnzMYr3Dmh10pXZD1vaonjej2cUJPDr"], "dm-0": ["dm-name-cs-root", "dm-uuid-LVM-UNh8fApPOpwST8umOwGSRaL2D1kGorbEldGqGBIrs335Ch1SgkLF0SJj5rLJTi3u"]}, "uuids": {"vda1": ["7300-4DF4"], "dm-2": ["9648e233-35ed-42cb-a312-738c3174aa40"], "vda2": ["f749cec3-ad36-4fce-a403-b3527c671c37"], "dm-1": ["e856525d-6c04-46a4-b252-27c571cc8637"], "dm-0": ["e3fb2f10-309e-47df-be05-33b4de292f39"]}, "labels": {}, "masters": {"vda3": ["dm-0", "dm-1", "dm-2"]}}, "ansible_uptime_seconds": 7546, "ansible_lvm": {"lvs": {"home": {"size_g": "19.79", "vg": "cs"}, "root": {"size_g": "40.54", "vg": "cs"}, "swap": {"size_g": "2.09", "vg": "cs"}}, "vgs": {"cs": {"size_g": "62.41", "free_g": "0", "num_lvs": "3", "num_pvs": "1"}}, "pvs": {"/dev/vda3": {"size_g": "62.41", "free_g": "0", "vg": "cs"}}}, "ansible_mounts": [{"mount": "/", "device": "/dev/mapper/cs-root", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,logbufs=8,logbsize=32k,noquota", "size_total": 43457183744, "size_available": 37032378368, "block_size": 4096, "block_total": 10609664, "block_available": 9041108, "block_used": 1568556, "inode_total": 21252096, "inode_available": 21111948, "inode_used": 140148, "uuid": "e3fb2f10-309e-47df-be05-33b4de292f39"}, {"mount": "/home", "device": "/dev/mapper/cs-home", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,logbufs=8,logbsize=32k,noquota", "size_total": 21181235200, "size_available": 20754550784, "block_size": 4096, "block_total": 5171200, "block_available": 5067029, "block_used": 104171, "inode_total": 10375168, "inode_available": 10372633, "inode_used": 2535, "uuid": "9648e233-35ed-42cb-a312-738c3174aa40"}, {"mount": "/boot", "device": "/dev/vda2", "fstype": "xfs", "options": "rw,seclabel,relatime,attr2,inode64,logbufs=8,logbsize=32k,noquota", "size_total": 1006632960, "size_available": 508428288, "block_size": 4096, "block_total": 245760, "block_available": 124128, "block_used": 121632, "inode_total": 524288, "inode_available": 523625, "inode_used": 663, "uuid": "f749cec3-ad36-4fce-a403-b3527c671c37"}, {"mount": "/boot/efi", "device": "/dev/vda1", "fstype": "vfat", "options": "rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortname=winnt,errors=remount-ro", "size_total": 627875840, "size_available": 620613632, "block_size": 4096, "block_total": 153290, "block_available": 151517, "block_used": 1773, "inode_total": 0, "inode_available": 0, "inode_used": 0, "uuid": "7300-4DF4"}], "ansible_env": {"SHELL": "/bin/bash", "PWD": "/root", "LOGNAME": "root", "XDG_SESSION_TYPE": "tty", "_": "/usr/bin/python3", "MOTD_SHOWN": "pam", "HOME": "/root", "LANG": "en_US.UTF-8", "LS_COLORS": "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:", "SSH_CONNECTION": "192.168.64.11 35204 192.168.64.13 22", "XDG_SESSION_CLASS": "user", "SELINUX_ROLE_REQUESTED": "", "TERM": "xterm-256color", "LESSOPEN": "||/usr/bin/lesspipe.sh %s", "USER": "root", "SELINUX_USE_CURRENT_RANGE": "", "SHLVL": "1", "XDG_SESSION_ID": "16", "XDG_RUNTIME_DIR": "/run/user/0", "SSH_CLIENT": "192.168.64.11 35204 22", "DEBUGINFOD_URLS": "https://debuginfod.centos.org/ ", "which_declare": "declare -f", "XDG_DATA_DIRS": "/root/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share", "PATH": "/root/.local/bin:/root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin", "SELINUX_LEVEL_REQUESTED": "", "DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/0/bus", "SSH_TTY": "/dev/pts/1", "BASH_FUNC_which%%": "() {  ( alias;\\n eval ${which_declare} ) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@\\n}"}, "ansible_loadavg": {"1m": 0.21, "5m": 0.14, "15m": 0.1}, "ansible_iscsi_iqn": "", "ansible_cmdline": {"BOOT_IMAGE": "(hd1,gpt2)/vmlinuz-5.14.0-344.el9.aarch64", "root": "/dev/mapper/cs-root", "ro": true, "crashkernel": "1G-4G:256M,4G-64G:320M,64G-:576M", "rd.lvm.lv": "cs/swap"}, "ansible_proc_cmdline": {"BOOT_IMAGE": "(hd1,gpt2)/vmlinuz-5.14.0-344.el9.aarch64", "root": "/dev/mapper/cs-root", "ro": true, "crashkernel": "1G-4G:256M,4G-64G:320M,64G-:576M", "rd.lvm.lv": ["cs/root", "cs/swap"]}, "ansible_fibre_channel_wwn": [], "ansible_apparmor": {"status": "disabled"}, "ansible_local": {}, "ansible_interfaces": ["enp0s1", "lo"], "ansible_lo": {"device": "lo", "mtu": 65536, "active": true, "type": "loopback", "promisc": false, "ipv4": {"address": "127.0.0.1", "broadcast": "", "netmask": "255.0.0.0", "network": "127.0.0.0", "prefix": "8"}, "ipv6": [{"address": "::1", "prefix": "128", "scope": "host"}], "features": {"rx_checksumming": "on [fixed]", "tx_checksumming": "on", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "on [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "on [fixed]", "scatter_gather": "on", "tx_scatter_gather": "on [fixed]", "tx_scatter_gather_fraglist": "on [fixed]", "tcp_segmentation_offload": "on", "tx_tcp_segmentation": "on", "tx_tcp_ecn_segmentation": "on", "tx_tcp_mangleid_segmentation": "on", "tx_tcp6_segmentation": "on", "generic_segmentation_offload": "on", "generic_receive_offload": "on", "large_receive_offload": "off [fixed]", "rx_vlan_offload": "off [fixed]", "tx_vlan_offload": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on [fixed]", "rx_vlan_filter": "off [fixed]", "vlan_challenged": "on [fixed]", "tx_lockless": "on [fixed]", "netns_local": "on [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_tunnel_remcsum_segmentation": "off [fixed]", "tx_sctp_segmentation": "on", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "on", "tx_gso_list": "on", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off [fixed]", "loopback": "on [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "rx_gro_hw": "off [fixed]", "tls_hw_record": "off [fixed]", "rx_gro_list": "off", "macsec_hw_offload": "off [fixed]", "rx_udp_gro_forwarding": "off", "hsr_tag_ins_offload": "off [fixed]", "hsr_tag_rm_offload": "off [fixed]", "hsr_fwd_offload": "off [fixed]", "hsr_dup_offload": "off [fixed]"}, "timestamping": [], "hw_timestamp_filters": []}, "ansible_enp0s1": {"device": "enp0s1", "macaddress": "3e:49:e2:7b:ba:e6", "mtu": 1500, "active": true, "module": "virtio_net", "type": "ether", "pciid": "virtio0", "speed": -1, "promisc": false, "ipv4": {"address": "192.168.64.13", "broadcast": "192.168.64.255", "netmask": "255.255.255.0", "network": "192.168.64.0", "prefix": "24"}, "ipv6": [{"address": "fdf3:12ce:7b31:56fe:3c49:e2ff:fe7b:bae6", "prefix": "64", "scope": "global"}, {"address": "fe80::3c49:e2ff:fe7b:bae6", "prefix": "64", "scope": "link"}], "features": {"rx_checksumming": "off [fixed]", "tx_checksumming": "off", "tx_checksum_ipv4": "off [fixed]", "tx_checksum_ip_generic": "off [fixed]", "tx_checksum_ipv6": "off [fixed]", "tx_checksum_fcoe_crc": "off [fixed]", "tx_checksum_sctp": "off [fixed]", "scatter_gather": "off", "tx_scatter_gather": "off [fixed]", "tx_scatter_gather_fraglist": "off [fixed]", "tcp_segmentation_offload": "off", "tx_tcp_segmentation": "off [fixed]", "tx_tcp_ecn_segmentation": "off [fixed]", "tx_tcp_mangleid_segmentation": "off [fixed]", "tx_tcp6_segmentation": "off [fixed]", "generic_segmentation_offload": "off [requested on]", "generic_receive_offload": "on", "large_receive_offload": "off [fixed]", "rx_vlan_offload": "off [fixed]", "tx_vlan_offload": "off [fixed]", "ntuple_filters": "off [fixed]", "receive_hashing": "off [fixed]", "highdma": "on [fixed]", "rx_vlan_filter": "on [fixed]", "vlan_challenged": "off [fixed]", "tx_lockless": "off [fixed]", "netns_local": "off [fixed]", "tx_gso_robust": "off [fixed]", "tx_fcoe_segmentation": "off [fixed]", "tx_gre_segmentation": "off [fixed]", "tx_gre_csum_segmentation": "off [fixed]", "tx_ipxip4_segmentation": "off [fixed]", "tx_ipxip6_segmentation": "off [fixed]", "tx_udp_tnl_segmentation": "off [fixed]", "tx_udp_tnl_csum_segmentation": "off [fixed]", "tx_gso_partial": "off [fixed]", "tx_tunnel_remcsum_segmentation": "off [fixed]", "tx_sctp_segmentation": "off [fixed]", "tx_esp_segmentation": "off [fixed]", "tx_udp_segmentation": "off [fixed]", "tx_gso_list": "off [fixed]", "fcoe_mtu": "off [fixed]", "tx_nocache_copy": "off", "loopback": "off [fixed]", "rx_fcs": "off [fixed]", "rx_all": "off [fixed]", "tx_vlan_stag_hw_insert": "off [fixed]", "rx_vlan_stag_hw_parse": "off [fixed]", "rx_vlan_stag_filter": "off [fixed]", "l2_fwd_offload": "off [fixed]", "hw_tc_offload": "off [fixed]", "esp_hw_offload": "off [fixed]", "esp_tx_csum_hw_offload": "off [fixed]", "rx_udp_tunnel_port_offload": "off [fixed]", "tls_hw_tx_offload": "off [fixed]", "tls_hw_rx_offload": "off [fixed]", "rx_gro_hw": "off", "tls_hw_record": "off [fixed]", "rx_gro_list": "off", "macsec_hw_offload": "off [fixed]", "rx_udp_gro_forwarding": "off", "hsr_tag_ins_offload": "off [fixed]", "hsr_tag_rm_offload": "off [fixed]", "hsr_fwd_offload": "off [fixed]", "hsr_dup_offload": "off [fixed]"}, "timestamping": [], "hw_timestamp_filters": []}, "ansible_default_ipv4": {"gateway": "192.168.64.1", "interface": "enp0s1", "address": "192.168.64.13", "broadcast": "192.168.64.255", "netmask": "255.255.255.0", "network": "192.168.64.0", "prefix": "24", "macaddress": "3e:49:e2:7b:ba:e6", "mtu": 1500, "type": "ether", "alias": "enp0s1"}, "ansible_default_ipv6": {}, "ansible_all_ipv4_addresses": ["192.168.64.13"], "ansible_all_ipv6_addresses": ["fdf3:12ce:7b31:56fe:3c49:e2ff:fe7b:bae6", "fe80::3c49:e2ff:fe7b:bae6"], "ansible_locally_reachable_ips": {"ipv4": ["127.0.0.0/8", "127.0.0.1", "192.168.64.13"], "ipv6": ["::1", "fdf3:12ce:7b31:56fe:3c49:e2ff:fe7b:bae6", "fe80::3c49:e2ff:fe7b:bae6"]}, "ansible_pkg_mgr": "dnf", "ansible_service_mgr": "systemd", "gather_subset": ["all"], "module_setup": true}, "invocation": {"module_args": {"gather_subset": ["all"], "gather_timeout": 10, "filter": [], "fact_path": "/etc/ansible/facts.d"}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:51,231 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:51,231 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697150.123292-7449-26337489044644/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:51,258 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:51,262 p=7445 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:05:51,264 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:51,267 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:51,271 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:51,271 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:05:51,283 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:51,287 p=7445 u=ansible n=ansible | redirecting (type: modules) ansible.builtin.postgresql_db to community.postgresql.postgresql_db
2023-07-30 13:05:51,288 p=7445 u=ansible n=ansible | redirecting (type: modules) ansible.builtin.postgresql_user to community.postgresql.postgresql_user
2023-07-30 13:05:51,289 p=7445 u=ansible n=ansible | redirecting (type: modules) ansible.builtin.postgresql_privs to community.postgresql.postgresql_privs
2023-07-30 13:05:51,289 p=7445 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:05:51,290 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:51,293 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:51,294 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:05:51,304 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:51,305 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:51,330 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:51,330 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:51,330 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480 `" && echo ansible-tmp-1690697151.3292596-7483-165518335720480="` echo /root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480 `" ) && sleep 0'"'"''
2023-07-30 13:05:51,355 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697151.3292596-7483-165518335720480=/root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480\n', b'')
2023-07-30 13:05:51,440 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/dnf.py
2023-07-30 13:05:51,440 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpz5pi1lt9 TO /root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480/AnsiballZ_dnf.py
2023-07-30 13:05:51,441 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:51,492 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpz5pi1lt9 /root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480/AnsiballZ_dnf.py\n', b'')
2023-07-30 13:05:51,493 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:51,493 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480/ /root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480/AnsiballZ_dnf.py && sleep 0'"'"''
2023-07-30 13:05:51,526 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:51,527 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:51,527 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480/AnsiballZ_dnf.py && sleep 0'"'"''
2023-07-30 13:05:52,036 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"msg": "Nothing to do", "changed": false, "results": [], "rc": 0, "invocation": {"module_args": {"name": ["*"], "state": "latest", "allow_downgrade": false, "autoremove": false, "bugfix": false, "cacheonly": false, "disable_gpg_check": false, "disable_plugin": [], "disablerepo": [], "download_only": false, "enable_plugin": [], "enablerepo": [], "exclude": [], "installroot": "/", "install_repoquery": true, "install_weak_deps": true, "security": false, "skip_broken": false, "update_cache": false, "update_only": false, "validate_certs": true, "sslverify": true, "lock_timeout": 30, "allowerasing": false, "nobest": false, "use_backend": "auto", "conf_file": null, "disable_excludes": null, "download_dir": null, "list": null, "releasever": null}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:52,036 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:52,036 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697151.3292596-7483-165518335720480/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:52,060 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:52,061 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "allow_downgrade": false,
            "allowerasing": false,
            "autoremove": false,
            "bugfix": false,
            "cacheonly": false,
            "conf_file": null,
            "disable_excludes": null,
            "disable_gpg_check": false,
            "disable_plugin": [],
            "disablerepo": [],
            "download_dir": null,
            "download_only": false,
            "enable_plugin": [],
            "enablerepo": [],
            "exclude": [],
            "install_repoquery": true,
            "install_weak_deps": true,
            "installroot": "/",
            "list": null,
            "lock_timeout": 30,
            "name": [
                "*"
            ],
            "nobest": false,
            "releasever": null,
            "security": false,
            "skip_broken": false,
            "sslverify": true,
            "state": "latest",
            "update_cache": false,
            "update_only": false,
            "use_backend": "auto",
            "validate_certs": true
        }
    },
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2023-07-30 13:05:52,064 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:52,064 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:05:52,074 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:52,075 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:52,100 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:52,100 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:52,100 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300 `" && echo ansible-tmp-1690697152.0999932-7507-52700254215300="` echo /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300 `" ) && sleep 0'"'"''
2023-07-30 13:05:52,125 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697152.0999932-7507-52700254215300=/root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300\n', b'')
2023-07-30 13:05:52,126 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/dnf.py
2023-07-30 13:05:52,127 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpmvaooffd TO /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300/AnsiballZ_dnf.py
2023-07-30 13:05:52,127 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:52,168 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpmvaooffd /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300/AnsiballZ_dnf.py\n', b'')
2023-07-30 13:05:52,168 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:52,168 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300/ /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300/AnsiballZ_dnf.py && sleep 0'"'"''
2023-07-30 13:05:52,192 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:52,193 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:52,193 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300/AnsiballZ_dnf.py && sleep 0'"'"''
2023-07-30 13:05:54,452 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"msg": "Nothing to do", "changed": false, "results": ["Installed /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300/pgdg-redhat-repo-latest.noarchd9f0i1_2.rpm"], "rc": 0, "invocation": {"module_args": {"name": ["https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm"], "state": "present", "allow_downgrade": false, "autoremove": false, "bugfix": false, "cacheonly": false, "disable_gpg_check": false, "disable_plugin": [], "disablerepo": [], "download_only": false, "enable_plugin": [], "enablerepo": [], "exclude": [], "installroot": "/", "install_repoquery": true, "install_weak_deps": true, "security": false, "skip_broken": false, "update_cache": false, "update_only": false, "validate_certs": true, "sslverify": true, "lock_timeout": 30, "allowerasing": false, "nobest": false, "use_backend": "auto", "conf_file": null, "disable_excludes": null, "download_dir": null, "list": null, "releasever": null}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:54,452 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:54,452 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:54,481 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:54,483 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "allow_downgrade": false,
            "allowerasing": false,
            "autoremove": false,
            "bugfix": false,
            "cacheonly": false,
            "conf_file": null,
            "disable_excludes": null,
            "disable_gpg_check": false,
            "disable_plugin": [],
            "disablerepo": [],
            "download_dir": null,
            "download_only": false,
            "enable_plugin": [],
            "enablerepo": [],
            "exclude": [],
            "install_repoquery": true,
            "install_weak_deps": true,
            "installroot": "/",
            "list": null,
            "lock_timeout": 30,
            "name": [
                "https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
            ],
            "nobest": false,
            "releasever": null,
            "security": false,
            "skip_broken": false,
            "sslverify": true,
            "state": "present",
            "update_cache": false,
            "update_only": false,
            "use_backend": "auto",
            "validate_certs": true
        }
    },
    "msg": "Nothing to do",
    "rc": 0,
    "results": [
        "Installed /root/.ansible/tmp/ansible-tmp-1690697152.0999932-7507-52700254215300/pgdg-redhat-repo-latest.noarchd9f0i1_2.rpm"
    ]
}
2023-07-30 13:05:54,486 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:54,487 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:05:54,496 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:54,498 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:54,532 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:54,532 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:54,532 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210 `" && echo ansible-tmp-1690697154.530256-7523-81814416296210="` echo /root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210 `" ) && sleep 0'"'"''
2023-07-30 13:05:54,560 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697154.530256-7523-81814416296210=/root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210\n', b'')
2023-07-30 13:05:54,560 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/dnf.py
2023-07-30 13:05:54,561 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmposzz052u TO /root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210/AnsiballZ_dnf.py
2023-07-30 13:05:54,562 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:54,605 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmposzz052u /root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210/AnsiballZ_dnf.py\n', b'')
2023-07-30 13:05:54,605 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:54,605 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210/ /root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210/AnsiballZ_dnf.py && sleep 0'"'"''
2023-07-30 13:05:54,635 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:54,636 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:54,636 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210/AnsiballZ_dnf.py && sleep 0'"'"''
2023-07-30 13:05:55,142 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"msg": "Nothing to do", "changed": false, "results": [], "rc": 0, "invocation": {"module_args": {"name": ["postgresql", "postgresql-server"], "state": "present", "allow_downgrade": false, "autoremove": false, "bugfix": false, "cacheonly": false, "disable_gpg_check": false, "disable_plugin": [], "disablerepo": [], "download_only": false, "enable_plugin": [], "enablerepo": [], "exclude": [], "installroot": "/", "install_repoquery": true, "install_weak_deps": true, "security": false, "skip_broken": false, "update_cache": false, "update_only": false, "validate_certs": true, "sslverify": true, "lock_timeout": 30, "allowerasing": false, "nobest": false, "use_backend": "auto", "conf_file": null, "disable_excludes": null, "download_dir": null, "list": null, "releasever": null}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:55,142 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,142 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697154.530256-7523-81814416296210/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:55,163 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:55,164 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "allow_downgrade": false,
            "allowerasing": false,
            "autoremove": false,
            "bugfix": false,
            "cacheonly": false,
            "conf_file": null,
            "disable_excludes": null,
            "disable_gpg_check": false,
            "disable_plugin": [],
            "disablerepo": [],
            "download_dir": null,
            "download_only": false,
            "enable_plugin": [],
            "enablerepo": [],
            "exclude": [],
            "install_repoquery": true,
            "install_weak_deps": true,
            "installroot": "/",
            "list": null,
            "lock_timeout": 30,
            "name": [
                "postgresql",
                "postgresql-server"
            ],
            "nobest": false,
            "releasever": null,
            "security": false,
            "skip_broken": false,
            "sslverify": true,
            "state": "present",
            "update_cache": false,
            "update_only": false,
            "use_backend": "auto",
            "validate_certs": true
        }
    },
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}
2023-07-30 13:05:55,167 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:55,167 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:05:55,175 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,177 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:55,213 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:55,213 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,214 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958 `" && echo ansible-tmp-1690697155.2126827-7539-115573695538958="` echo /root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958 `" ) && sleep 0'"'"''
2023-07-30 13:05:55,256 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697155.2126827-7539-115573695538958=/root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958\n', b'')
2023-07-30 13:05:55,349 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/stat.py
2023-07-30 13:05:55,350 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpxztbczj5 TO /root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958/AnsiballZ_stat.py
2023-07-30 13:05:55,351 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:55,398 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpxztbczj5 /root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958/AnsiballZ_stat.py\n', b'')
2023-07-30 13:05:55,399 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,399 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958/ /root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958/AnsiballZ_stat.py && sleep 0'"'"''
2023-07-30 13:05:55,423 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:55,424 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,424 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958/AnsiballZ_stat.py && sleep 0'"'"''
2023-07-30 13:05:55,549 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"changed": false, "stat": {"exists": true, "path": "/var/lib/pgsql/data", "mode": "0700", "isdir": true, "ischr": false, "isblk": false, "isreg": false, "isfifo": false, "islnk": false, "issock": false, "uid": 26, "gid": 26, "size": 4096, "inode": 67664232, "dev": 64768, "nlink": 20, "atime": 1690694246.6539638, "mtime": 1690694114.6265717, "ctime": 1690694114.6265717, "wusr": true, "rusr": true, "xusr": true, "wgrp": false, "rgrp": false, "xgrp": false, "woth": false, "roth": false, "xoth": false, "isuid": false, "isgid": false, "blocks": 8, "block_size": 4096, "device_type": 0, "readable": true, "writeable": true, "executable": true, "pw_name": "postgres", "gr_name": "postgres", "mimetype": "inode/directory", "charset": "binary", "version": "2850351817", "attributes": [], "attr_flags": ""}, "invocation": {"module_args": {"path": "/var/lib/pgsql/data", "follow": false, "get_md5": false, "get_checksum": true, "get_mime": true, "get_attributes": true, "checksum_algorithm": "sha1"}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:55,549 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,549 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697155.2126827-7539-115573695538958/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:55,589 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:55,590 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/var/lib/pgsql/data"
        }
    },
    "stat": {
        "atime": 1690694246.6539638,
        "attr_flags": "",
        "attributes": [],
        "block_size": 4096,
        "blocks": 8,
        "charset": "binary",
        "ctime": 1690694114.6265717,
        "dev": 64768,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 26,
        "gr_name": "postgres",
        "inode": 67664232,
        "isblk": false,
        "ischr": false,
        "isdir": true,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": false,
        "issock": false,
        "isuid": false,
        "mimetype": "inode/directory",
        "mode": "0700",
        "mtime": 1690694114.6265717,
        "nlink": 20,
        "path": "/var/lib/pgsql/data",
        "pw_name": "postgres",
        "readable": true,
        "rgrp": false,
        "roth": false,
        "rusr": true,
        "size": 4096,
        "uid": 26,
        "version": "2850351817",
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": false,
        "xoth": false,
        "xusr": true
    }
}
2023-07-30 13:05:55,594 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:55,594 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:05:55,605 p=7445 u=ansible n=ansible | skipping: [centos2] => {
    "changed": false,
    "false_condition": "data_file.stat.exists == false",
    "skip_reason": "Conditional result was False"
}
2023-07-30 13:05:55,613 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:55,615 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:05:55,625 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,627 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:55,676 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:55,677 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,677 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669 `" && echo ansible-tmp-1690697155.6752772-7557-53483394882669="` echo /root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669 `" ) && sleep 0'"'"''
2023-07-30 13:05:55,723 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697155.6752772-7557-53483394882669=/root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669\n', b'')
2023-07-30 13:05:55,886 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/systemd.py
2023-07-30 13:05:55,886 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmp3g3ek03v TO /root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669/AnsiballZ_systemd.py
2023-07-30 13:05:55,886 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:55,940 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmp3g3ek03v /root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669/AnsiballZ_systemd.py\n', b'')
2023-07-30 13:05:55,940 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,940 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669/ /root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669/AnsiballZ_systemd.py && sleep 0'"'"''
2023-07-30 13:05:55,967 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:55,967 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:55,967 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669/AnsiballZ_systemd.py && sleep 0'"'"''
2023-07-30 13:05:56,148 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"name": "postgresql", "changed": false, "status": {"Type": "notify", "ExitType": "main", "Restart": "no", "NotifyAccess": "main", "RestartUSec": "100ms", "TimeoutStartUSec": "infinity", "TimeoutStopUSec": "infinity", "TimeoutAbortUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStopFailureMode": "terminate", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "WatchdogUSec": "0", "WatchdogTimestampMonotonic": "0", "RootDirectoryStartOnly": "no", "RemainAfterExit": "no", "GuessMainPID": "yes", "MainPID": "9590", "ControlPID": "0", "FileDescriptorStoreMax": "0", "NFileDescriptorStore": "0", "StatusErrno": "0", "Result": "success", "ReloadResult": "success", "CleanResult": "success", "UID": "26", "GID": "26", "NRestarts": "0", "OOMPolicy": "stop", "ExecMainStartTimestamp": "Sun 2023-07-30 12:14:58 +07", "ExecMainStartTimestampMonotonic": "4494684068", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "9590", "ExecMainCode": "0", "ExecMainStatus": "0", "ExecStartPre": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; ignore_errors=no ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[Sun 2023-07-30 12:14:58 +07] ; pid=9588 ; code=exited ; status=0 }", "ExecStartPreEx": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; flags= ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[Sun 2023-07-30 12:14:58 +07] ; pid=9588 ; code=exited ; status=0 }", "ExecStart": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; ignore_errors=no ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[n/a] ; pid=9590 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; flags= ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[n/a] ; pid=9590 ; code=(null) ; status=0/0 }", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "Slice": "system.slice", "ControlGroup": "/system.slice/postgresql.service", "ControlGroupId": "5258", "MemoryCurrent": "23986176", "MemoryAvailable": "infinity", "CPUUsageNSec": "1093773000", "TasksCurrent": "8", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "Delegate": "no", "CPUAccounting": "yes", "CPUWeight": "[not set]", "StartupCPUWeight": "[not set]", "CPUShares": "[not set]", "StartupCPUShares": "[not set]", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "IOAccounting": "no", "IOWeight": "[not set]", "StartupIOWeight": "[not set]", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "StartupBlockIOWeight": "[not set]", "MemoryAccounting": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "MemoryMin": "0", "MemoryLow": "0", "MemoryHigh": "infinity", "MemoryMax": "infinity", "MemorySwapMax": "infinity", "MemoryLimit": "infinity", "DevicePolicy": "auto", "TasksAccounting": "yes", "TasksMax": "10827", "IPAccounting": "no", "ManagedOOMSwap": "auto", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "Environment": "PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj PG_OOM_ADJUST_VALUE=0 PGDATA=/var/lib/pgsql/data", "UMask": "0022", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitNPROC": "6767", "LimitNPROCSoft": "6767", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitSIGPENDING": "6767", "LimitSIGPENDINGSoft": "6767", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "OOMScoreAdjust": "-1000", "CoredumpFilter": "0x33", "Nice": "0", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUAffinityFromNUMA": "no", "NUMAPolicy": "n/a", "TimerSlackNSec": "50000", "CPUSchedulingResetOnFork": "no", "NonBlocking": "no", "StandardInput": "null", "StandardOutput": "journal", "StandardError": "inherit", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "SyslogPriority": "30", "SyslogLevelPrefix": "yes", "SyslogLevel": "6", "SyslogFacility": "3", "LogLevelMax": "-1", "LogRateLimitIntervalUSec": "0", "LogRateLimitBurst": "0", "SecureBits": "0", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "User": "postgres", "Group": "postgres", "DynamicUser": "no", "RemoveIPC": "no", "PrivateTmp": "no", "PrivateDevices": "no", "ProtectClock": "no", "ProtectKernelTunables": "no", "ProtectKernelModules": "no", "ProtectKernelLogs": "no", "ProtectControlGroups": "no", "PrivateNetwork": "no", "PrivateUsers": "no", "PrivateMounts": "no", "PrivateIPC": "no", "ProtectHome": "no", "ProtectSystem": "no", "SameProcessGroup": "no", "UtmpMode": "init", "IgnoreSIGPIPE": "yes", "NoNewPrivileges": "no", "SystemCallErrorNumber": "2147483646", "LockPersonality": "no", "RuntimeDirectoryPreserve": "no", "RuntimeDirectoryMode": "0755", "StateDirectoryMode": "0755", "CacheDirectoryMode": "0755", "LogsDirectoryMode": "0755", "ConfigurationDirectoryMode": "0755", "TimeoutCleanUSec": "infinity", "MemoryDenyWriteExecute": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "RestrictNamespaces": "no", "MountAPIVFS": "no", "KeyringMode": "private", "ProtectProc": "default", "ProcSubset": "all", "ProtectHostname": "no", "KillMode": "mixed", "KillSignal": "2", "RestartKillSignal": "2", "FinalKillSignal": "9", "SendSIGKILL": "yes", "SendSIGHUP": "no", "WatchdogSignal": "6", "Id": "postgresql.service", "Names": "postgresql.service", "Requires": "sysinit.target system.slice", "WantedBy": "multi-user.target", "Conflicts": "shutdown.target", "Before": "shutdown.target multi-user.target", "After": "network.target basic.target systemd-journald.socket sysinit.target system.slice", "Description": "PostgreSQL database server", "AccessSELinuxContext": "system_u:object_r:postgresql_unit_file_t:s0", "LoadState": "loaded", "ActiveState": "active", "FreezerState": "running", "SubState": "running", "FragmentPath": "/usr/lib/systemd/system/postgresql.service", "UnitFileState": "enabled", "UnitFilePreset": "disabled", "StateChangeTimestamp": "Sun 2023-07-30 12:14:58 +07", "StateChangeTimestampMonotonic": "4494705529", "InactiveExitTimestamp": "Sun 2023-07-30 12:14:58 +07", "InactiveExitTimestampMonotonic": "4494677836", "ActiveEnterTimestamp": "Sun 2023-07-30 12:14:58 +07", "ActiveEnterTimestampMonotonic": "4494705529", "ActiveExitTimestamp": "Sun 2023-07-30 12:14:58 +07", "ActiveExitTimestampMonotonic": "4494663689", "InactiveEnterTimestamp": "Sun 2023-07-30 12:14:58 +07", "InactiveEnterTimestampMonotonic": "4494676470", "CanStart": "yes", "CanStop": "yes", "CanReload": "yes", "CanIsolate": "no", "CanFreeze": "yes", "StopWhenUnneeded": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "AllowIsolate": "no", "DefaultDependencies": "yes", "OnSuccessJobMode": "fail", "OnFailureJobMode": "replace", "IgnoreOnIsolate": "no", "NeedDaemonReload": "no", "JobTimeoutUSec": "infinity", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "ConditionResult": "yes", "AssertResult": "yes", "ConditionTimestamp": "Sun 2023-07-30 12:14:58 +07", "ConditionTimestampMonotonic": "4494676853", "AssertTimestamp": "Sun 2023-07-30 12:14:58 +07", "AssertTimestampMonotonic": "4494676854", "Transient": "no", "Perpetual": "no", "StartLimitIntervalUSec": "10s", "StartLimitBurst": "5", "StartLimitAction": "none", "FailureAction": "none", "SuccessAction": "none", "InvocationID": "ec3286a98e38416ab7e34d8c90923fca", "CollectMode": "inactive"}, "enabled": true, "state": "started", "invocation": {"module_args": {"name": "postgresql", "state": "started", "enabled": true, "daemon_reload": false, "daemon_reexec": false, "scope": "system", "no_block": false, "force": null, "masked": null}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:56,148 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,148 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697155.6752772-7557-53483394882669/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:56,174 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:56,176 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "changed": false,
    "enabled": true,
    "invocation": {
        "module_args": {
            "daemon_reexec": false,
            "daemon_reload": false,
            "enabled": true,
            "force": null,
            "masked": null,
            "name": "postgresql",
            "no_block": false,
            "scope": "system",
            "state": "started"
        }
    },
    "name": "postgresql",
    "state": "started",
    "status": {
        "AccessSELinuxContext": "system_u:object_r:postgresql_unit_file_t:s0",
        "ActiveEnterTimestamp": "Sun 2023-07-30 12:14:58 +07",
        "ActiveEnterTimestampMonotonic": "4494705529",
        "ActiveExitTimestamp": "Sun 2023-07-30 12:14:58 +07",
        "ActiveExitTimestampMonotonic": "4494663689",
        "ActiveState": "active",
        "After": "network.target basic.target systemd-journald.socket sysinit.target system.slice",
        "AllowIsolate": "no",
        "AssertResult": "yes",
        "AssertTimestamp": "Sun 2023-07-30 12:14:58 +07",
        "AssertTimestampMonotonic": "4494676854",
        "Before": "shutdown.target multi-user.target",
        "BlockIOAccounting": "no",
        "BlockIOWeight": "[not set]",
        "CPUAccounting": "yes",
        "CPUAffinityFromNUMA": "no",
        "CPUQuotaPerSecUSec": "infinity",
        "CPUQuotaPeriodUSec": "infinity",
        "CPUSchedulingPolicy": "0",
        "CPUSchedulingPriority": "0",
        "CPUSchedulingResetOnFork": "no",
        "CPUShares": "[not set]",
        "CPUUsageNSec": "1093773000",
        "CPUWeight": "[not set]",
        "CacheDirectoryMode": "0755",
        "CanFreeze": "yes",
        "CanIsolate": "no",
        "CanReload": "yes",
        "CanStart": "yes",
        "CanStop": "yes",
        "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore",
        "CleanResult": "success",
        "CollectMode": "inactive",
        "ConditionResult": "yes",
        "ConditionTimestamp": "Sun 2023-07-30 12:14:58 +07",
        "ConditionTimestampMonotonic": "4494676853",
        "ConfigurationDirectoryMode": "0755",
        "Conflicts": "shutdown.target",
        "ControlGroup": "/system.slice/postgresql.service",
        "ControlGroupId": "5258",
        "ControlPID": "0",
        "CoredumpFilter": "0x33",
        "DefaultDependencies": "yes",
        "DefaultMemoryLow": "0",
        "DefaultMemoryMin": "0",
        "Delegate": "no",
        "Description": "PostgreSQL database server",
        "DevicePolicy": "auto",
        "DynamicUser": "no",
        "Environment": "PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj PG_OOM_ADJUST_VALUE=0 PGDATA=/var/lib/pgsql/data",
        "ExecMainCode": "0",
        "ExecMainExitTimestampMonotonic": "0",
        "ExecMainPID": "9590",
        "ExecMainStartTimestamp": "Sun 2023-07-30 12:14:58 +07",
        "ExecMainStartTimestampMonotonic": "4494684068",
        "ExecMainStatus": "0",
        "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecStart": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; ignore_errors=no ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[n/a] ; pid=9590 ; code=(null) ; status=0/0 }",
        "ExecStartEx": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; flags= ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[n/a] ; pid=9590 ; code=(null) ; status=0/0 }",
        "ExecStartPre": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; ignore_errors=no ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[Sun 2023-07-30 12:14:58 +07] ; pid=9588 ; code=exited ; status=0 }",
        "ExecStartPreEx": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; flags= ; start_time=[Sun 2023-07-30 12:14:58 +07] ; stop_time=[Sun 2023-07-30 12:14:58 +07] ; pid=9588 ; code=exited ; status=0 }",
        "ExitType": "main",
        "FailureAction": "none",
        "FileDescriptorStoreMax": "0",
        "FinalKillSignal": "9",
        "FragmentPath": "/usr/lib/systemd/system/postgresql.service",
        "FreezerState": "running",
        "GID": "26",
        "Group": "postgres",
        "GuessMainPID": "yes",
        "IOAccounting": "no",
        "IOReadBytes": "18446744073709551615",
        "IOReadOperations": "18446744073709551615",
        "IOSchedulingClass": "2",
        "IOSchedulingPriority": "4",
        "IOWeight": "[not set]",
        "IOWriteBytes": "18446744073709551615",
        "IOWriteOperations": "18446744073709551615",
        "IPAccounting": "no",
        "IPEgressBytes": "[no data]",
        "IPEgressPackets": "[no data]",
        "IPIngressBytes": "[no data]",
        "IPIngressPackets": "[no data]",
        "Id": "postgresql.service",
        "IgnoreOnIsolate": "no",
        "IgnoreSIGPIPE": "yes",
        "InactiveEnterTimestamp": "Sun 2023-07-30 12:14:58 +07",
        "InactiveEnterTimestampMonotonic": "4494676470",
        "InactiveExitTimestamp": "Sun 2023-07-30 12:14:58 +07",
        "InactiveExitTimestampMonotonic": "4494677836",
        "InvocationID": "ec3286a98e38416ab7e34d8c90923fca",
        "JobRunningTimeoutUSec": "infinity",
        "JobTimeoutAction": "none",
        "JobTimeoutUSec": "infinity",
        "KeyringMode": "private",
        "KillMode": "mixed",
        "KillSignal": "2",
        "LimitAS": "infinity",
        "LimitASSoft": "infinity",
        "LimitCORE": "infinity",
        "LimitCORESoft": "0",
        "LimitCPU": "infinity",
        "LimitCPUSoft": "infinity",
        "LimitDATA": "infinity",
        "LimitDATASoft": "infinity",
        "LimitFSIZE": "infinity",
        "LimitFSIZESoft": "infinity",
        "LimitLOCKS": "infinity",
        "LimitLOCKSSoft": "infinity",
        "LimitMEMLOCK": "8388608",
        "LimitMEMLOCKSoft": "8388608",
        "LimitMSGQUEUE": "819200",
        "LimitMSGQUEUESoft": "819200",
        "LimitNICE": "0",
        "LimitNICESoft": "0",
        "LimitNOFILE": "524288",
        "LimitNOFILESoft": "1024",
        "LimitNPROC": "6767",
        "LimitNPROCSoft": "6767",
        "LimitRSS": "infinity",
        "LimitRSSSoft": "infinity",
        "LimitRTPRIO": "0",
        "LimitRTPRIOSoft": "0",
        "LimitRTTIME": "infinity",
        "LimitRTTIMESoft": "infinity",
        "LimitSIGPENDING": "6767",
        "LimitSIGPENDINGSoft": "6767",
        "LimitSTACK": "infinity",
        "LimitSTACKSoft": "8388608",
        "LoadState": "loaded",
        "LockPersonality": "no",
        "LogLevelMax": "-1",
        "LogRateLimitBurst": "0",
        "LogRateLimitIntervalUSec": "0",
        "LogsDirectoryMode": "0755",
        "MainPID": "9590",
        "ManagedOOMMemoryPressure": "auto",
        "ManagedOOMMemoryPressureLimit": "0",
        "ManagedOOMPreference": "none",
        "ManagedOOMSwap": "auto",
        "MemoryAccounting": "yes",
        "MemoryAvailable": "infinity",
        "MemoryCurrent": "23986176",
        "MemoryDenyWriteExecute": "no",
        "MemoryHigh": "infinity",
        "MemoryLimit": "infinity",
        "MemoryLow": "0",
        "MemoryMax": "infinity",
        "MemoryMin": "0",
        "MemorySwapMax": "infinity",
        "MountAPIVFS": "no",
        "NFileDescriptorStore": "0",
        "NRestarts": "0",
        "NUMAPolicy": "n/a",
        "Names": "postgresql.service",
        "NeedDaemonReload": "no",
        "Nice": "0",
        "NoNewPrivileges": "no",
        "NonBlocking": "no",
        "NotifyAccess": "main",
        "OOMPolicy": "stop",
        "OOMScoreAdjust": "-1000",
        "OnFailureJobMode": "replace",
        "OnSuccessJobMode": "fail",
        "Perpetual": "no",
        "PrivateDevices": "no",
        "PrivateIPC": "no",
        "PrivateMounts": "no",
        "PrivateNetwork": "no",
        "PrivateTmp": "no",
        "PrivateUsers": "no",
        "ProcSubset": "all",
        "ProtectClock": "no",
        "ProtectControlGroups": "no",
        "ProtectHome": "no",
        "ProtectHostname": "no",
        "ProtectKernelLogs": "no",
        "ProtectKernelModules": "no",
        "ProtectKernelTunables": "no",
        "ProtectProc": "default",
        "ProtectSystem": "no",
        "RefuseManualStart": "no",
        "RefuseManualStop": "no",
        "ReloadResult": "success",
        "RemainAfterExit": "no",
        "RemoveIPC": "no",
        "Requires": "sysinit.target system.slice",
        "Restart": "no",
        "RestartKillSignal": "2",
        "RestartUSec": "100ms",
        "RestrictNamespaces": "no",
        "RestrictRealtime": "no",
        "RestrictSUIDSGID": "no",
        "Result": "success",
        "RootDirectoryStartOnly": "no",
        "RuntimeDirectoryMode": "0755",
        "RuntimeDirectoryPreserve": "no",
        "RuntimeMaxUSec": "infinity",
        "RuntimeRandomizedExtraUSec": "0",
        "SameProcessGroup": "no",
        "SecureBits": "0",
        "SendSIGHUP": "no",
        "SendSIGKILL": "yes",
        "Slice": "system.slice",
        "StandardError": "inherit",
        "StandardInput": "null",
        "StandardOutput": "journal",
        "StartLimitAction": "none",
        "StartLimitBurst": "5",
        "StartLimitIntervalUSec": "10s",
        "StartupBlockIOWeight": "[not set]",
        "StartupCPUShares": "[not set]",
        "StartupCPUWeight": "[not set]",
        "StartupIOWeight": "[not set]",
        "StateChangeTimestamp": "Sun 2023-07-30 12:14:58 +07",
        "StateChangeTimestampMonotonic": "4494705529",
        "StateDirectoryMode": "0755",
        "StatusErrno": "0",
        "StopWhenUnneeded": "no",
        "SubState": "running",
        "SuccessAction": "none",
        "SyslogFacility": "3",
        "SyslogLevel": "6",
        "SyslogLevelPrefix": "yes",
        "SyslogPriority": "30",
        "SystemCallErrorNumber": "2147483646",
        "TTYReset": "no",
        "TTYVHangup": "no",
        "TTYVTDisallocate": "no",
        "TasksAccounting": "yes",
        "TasksCurrent": "8",
        "TasksMax": "10827",
        "TimeoutAbortUSec": "infinity",
        "TimeoutCleanUSec": "infinity",
        "TimeoutStartFailureMode": "terminate",
        "TimeoutStartUSec": "infinity",
        "TimeoutStopFailureMode": "terminate",
        "TimeoutStopUSec": "infinity",
        "TimerSlackNSec": "50000",
        "Transient": "no",
        "Type": "notify",
        "UID": "26",
        "UMask": "0022",
        "UnitFilePreset": "disabled",
        "UnitFileState": "enabled",
        "User": "postgres",
        "UtmpMode": "init",
        "WantedBy": "multi-user.target",
        "WatchdogSignal": "6",
        "WatchdogTimestampMonotonic": "0",
        "WatchdogUSec": "0"
    }
}
2023-07-30 13:05:56,180 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:56,180 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:05:56,189 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,191 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:56,223 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:56,223 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,223 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245 `" && echo ansible-tmp-1690697156.2225416-7586-273480783394245="` echo /root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245 `" ) && sleep 0'"'"''
2023-07-30 13:05:56,264 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697156.2225416-7586-273480783394245=/root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245\n', b'')
2023-07-30 13:05:56,334 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/lineinfile.py
2023-07-30 13:05:56,335 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmp4vntxwe_ TO /root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245/AnsiballZ_lineinfile.py
2023-07-30 13:05:56,335 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:56,375 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmp4vntxwe_ /root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245/AnsiballZ_lineinfile.py\n', b'')
2023-07-30 13:05:56,375 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,376 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245/ /root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245/AnsiballZ_lineinfile.py && sleep 0'"'"''
2023-07-30 13:05:56,401 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:56,402 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,402 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245/AnsiballZ_lineinfile.py && sleep 0'"'"''
2023-07-30 13:05:56,512 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"changed": false, "msg": "", "backup": "", "diff": [{"before": "", "after": "", "before_header": "/var/lib/pgsql/data/pg_hba.conf (content)", "after_header": "/var/lib/pgsql/data/pg_hba.conf (content)"}, {"before_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)", "after_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)"}], "invocation": {"module_args": {"path": "/var/lib/pgsql/data/pg_hba.conf", "regexp": "^local\\\\s+all\\\\s+all\\\\s+peer", "line": "local   all             all                                     trust", "state": "present", "backrefs": false, "create": false, "backup": false, "firstmatch": false, "unsafe_writes": false, "search_string": null, "insertafter": null, "insertbefore": null, "validate": null, "mode": null, "owner": null, "group": null, "seuser": null, "serole": null, "selevel": null, "setype": null, "attributes": null}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:56,512 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,512 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697156.2225416-7586-273480783394245/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:56,540 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:56,541 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "backup": "",
    "changed": false,
    "diff": [
        {
            "after": "",
            "after_header": "/var/lib/pgsql/data/pg_hba.conf (content)",
            "before": "",
            "before_header": "/var/lib/pgsql/data/pg_hba.conf (content)"
        },
        {
            "after_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)",
            "before_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backrefs": false,
            "backup": false,
            "create": false,
            "firstmatch": false,
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "line": "local   all             all                                     trust",
            "mode": null,
            "owner": null,
            "path": "/var/lib/pgsql/data/pg_hba.conf",
            "regexp": "^local\\s+all\\s+all\\s+peer",
            "search_string": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "msg": ""
}
2023-07-30 13:05:56,543 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:56,544 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:05:56,552 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,552 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:56,582 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:56,582 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,582 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616 `" && echo ansible-tmp-1690697156.5817327-7602-51243542688616="` echo /root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616 `" ) && sleep 0'"'"''
2023-07-30 13:05:56,609 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697156.5817327-7602-51243542688616=/root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616\n', b'')
2023-07-30 13:05:56,610 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/lineinfile.py
2023-07-30 13:05:56,610 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpaj7pyfzs TO /root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616/AnsiballZ_lineinfile.py
2023-07-30 13:05:56,610 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:56,649 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpaj7pyfzs /root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616/AnsiballZ_lineinfile.py\n', b'')
2023-07-30 13:05:56,650 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,650 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616/ /root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616/AnsiballZ_lineinfile.py && sleep 0'"'"''
2023-07-30 13:05:56,673 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:56,673 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,673 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616/AnsiballZ_lineinfile.py && sleep 0'"'"''
2023-07-30 13:05:56,779 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"changed": false, "msg": "", "backup": "", "diff": [{"before": "", "after": "", "before_header": "/var/lib/pgsql/data/pg_hba.conf (content)", "after_header": "/var/lib/pgsql/data/pg_hba.conf (content)"}, {"before_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)", "after_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)"}], "invocation": {"module_args": {"path": "/var/lib/pgsql/data/pg_hba.conf", "regexp": "^host\\\\s+all\\\\s+all\\\\s+127.0.0.1/32\\\\s+ident", "line": "host    all             all             127.0.0.1/32            md5", "state": "present", "backrefs": false, "create": false, "backup": false, "firstmatch": false, "unsafe_writes": false, "search_string": null, "insertafter": null, "insertbefore": null, "validate": null, "mode": null, "owner": null, "group": null, "seuser": null, "serole": null, "selevel": null, "setype": null, "attributes": null}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:56,779 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,779 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697156.5817327-7602-51243542688616/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:56,802 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:56,803 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "backup": "",
    "changed": false,
    "diff": [
        {
            "after": "",
            "after_header": "/var/lib/pgsql/data/pg_hba.conf (content)",
            "before": "",
            "before_header": "/var/lib/pgsql/data/pg_hba.conf (content)"
        },
        {
            "after_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)",
            "before_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backrefs": false,
            "backup": false,
            "create": false,
            "firstmatch": false,
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "line": "host    all             all             127.0.0.1/32            md5",
            "mode": null,
            "owner": null,
            "path": "/var/lib/pgsql/data/pg_hba.conf",
            "regexp": "^host\\s+all\\s+all\\s+127.0.0.1/32\\s+ident",
            "search_string": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "msg": ""
}
2023-07-30 13:05:56,807 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:56,807 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:05:56,815 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,817 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:56,841 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:56,841 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,841 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082 `" && echo ansible-tmp-1690697156.8410954-7618-2821565360082="` echo /root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082 `" ) && sleep 0'"'"''
2023-07-30 13:05:56,868 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697156.8410954-7618-2821565360082=/root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082\n', b'')
2023-07-30 13:05:56,868 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/lineinfile.py
2023-07-30 13:05:56,869 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmp83mkwz52 TO /root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082/AnsiballZ_lineinfile.py
2023-07-30 13:05:56,870 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:56,906 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmp83mkwz52 /root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082/AnsiballZ_lineinfile.py\n', b'')
2023-07-30 13:05:56,906 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,906 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082/ /root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082/AnsiballZ_lineinfile.py && sleep 0'"'"''
2023-07-30 13:05:56,930 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:56,930 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:56,930 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082/AnsiballZ_lineinfile.py && sleep 0'"'"''
2023-07-30 13:05:57,033 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"changed": false, "msg": "", "backup": "", "diff": [{"before": "", "after": "", "before_header": "/var/lib/pgsql/data/pg_hba.conf (content)", "after_header": "/var/lib/pgsql/data/pg_hba.conf (content)"}, {"before_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)", "after_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)"}], "invocation": {"module_args": {"path": "/var/lib/pgsql/data/pg_hba.conf", "regexp": "^host\\\\s+all\\\\s+all\\\\s+::1/128\\\\s+ident", "line": "host    all             all             ::1/128                 md5", "state": "present", "backrefs": false, "create": false, "backup": false, "firstmatch": false, "unsafe_writes": false, "search_string": null, "insertafter": null, "insertbefore": null, "validate": null, "mode": null, "owner": null, "group": null, "seuser": null, "serole": null, "selevel": null, "setype": null, "attributes": null}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:57,033 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,033 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697156.8410954-7618-2821565360082/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:57,056 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:57,057 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "backup": "",
    "changed": false,
    "diff": [
        {
            "after": "",
            "after_header": "/var/lib/pgsql/data/pg_hba.conf (content)",
            "before": "",
            "before_header": "/var/lib/pgsql/data/pg_hba.conf (content)"
        },
        {
            "after_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)",
            "before_header": "/var/lib/pgsql/data/pg_hba.conf (file attributes)"
        }
    ],
    "invocation": {
        "module_args": {
            "attributes": null,
            "backrefs": false,
            "backup": false,
            "create": false,
            "firstmatch": false,
            "group": null,
            "insertafter": null,
            "insertbefore": null,
            "line": "host    all             all             ::1/128                 md5",
            "mode": null,
            "owner": null,
            "path": "/var/lib/pgsql/data/pg_hba.conf",
            "regexp": "^host\\s+all\\s+all\\s+::1/128\\s+ident",
            "search_string": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "state": "present",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "msg": ""
}
2023-07-30 13:05:57,060 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:57,060 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:05:57,067 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,069 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:57,093 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:57,093 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,094 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542 `" && echo ansible-tmp-1690697157.0932226-7643-20268660896542="` echo /root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542 `" ) && sleep 0'"'"''
2023-07-30 13:05:57,121 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697157.0932226-7643-20268660896542=/root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542\n', b'')
2023-07-30 13:05:57,182 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/command.py
2023-07-30 13:05:57,182 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpi6r4bfv7 TO /root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542/AnsiballZ_command.py
2023-07-30 13:05:57,182 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:57,218 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpi6r4bfv7 /root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542/AnsiballZ_command.py\n', b'')
2023-07-30 13:05:57,218 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,218 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542/ /root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542/AnsiballZ_command.py && sleep 0'"'"''
2023-07-30 13:05:57,241 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:57,241 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,241 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542/AnsiballZ_command.py && sleep 0'"'"''
2023-07-30 13:05:57,346 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'\r\n{"changed": true, "stdout": "root", "stderr": "", "rc": 0, "cmd": ["whoami"], "start": "2023-07-30 13:05:57.337141", "end": "2023-07-30 13:05:57.338787", "delta": "0:00:00.001646", "msg": "", "invocation": {"module_args": {"_raw_params": "whoami", "_uses_shell": false, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}}\r\n', b'Shared connection to 192.168.64.13 closed.\r\n')
2023-07-30 13:05:57,346 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,346 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'rm -f -r /root/.ansible/tmp/ansible-tmp-1690697157.0932226-7643-20268660896542/ > /dev/null 2>&1 && sleep 0'"'"''
2023-07-30 13:05:57,370 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:57,371 p=7445 u=ansible n=ansible | changed: [centos2] => {
    "changed": true,
    "cmd": [
        "whoami"
    ],
    "delta": "0:00:00.001646",
    "end": "2023-07-30 13:05:57.338787",
    "invocation": {
        "module_args": {
            "_raw_params": "whoami",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2023-07-30 13:05:57.337141",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "root",
    "stdout_lines": [
        "root"
    ]
}
2023-07-30 13:05:57,374 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:57,375 p=7445 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:05:57,385 p=7445 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:05:57.337141', 'end': '2023-07-30 13:05:57.338787', 'delta': '0:00:00.001646', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:05:57,388 p=7445 u=ansible n=ansible | Read vars_file 'roles/install_sonarqube/vars/sensitive.yml'
2023-07-30 13:05:57,388 p=7445 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:05:57,395 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,396 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'echo ~root && sleep 0'"'"''
2023-07-30 13:05:57,421 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'/root\n', b'')
2023-07-30 13:05:57,421 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,421 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1690697157.4210043-7661-252622607319598 `" && echo ansible-tmp-1690697157.4210043-7661-252622607319598="` echo /root/.ansible/tmp/ansible-tmp-1690697157.4210043-7661-252622607319598 `" ) && sleep 0'"'"''
2023-07-30 13:05:57,447 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'ansible-tmp-1690697157.4210043-7661-252622607319598=/root/.ansible/tmp/ansible-tmp-1690697157.4210043-7661-252622607319598\n', b'')
2023-07-30 13:05:57,448 p=7445 u=ansible n=ansible | Using module file /usr/lib/python3.11/site-packages/ansible/modules/command.py
2023-07-30 13:05:57,448 p=7445 u=ansible n=ansible | <192.168.64.13> PUT /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpjlmf4_mp TO /root/.ansible/tmp/ansible-tmp-1690697157.4210043-7661-252622607319598/AnsiballZ_command.py
2023-07-30 13:05:57,448 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 sftp -o BatchMode=no -b - -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' '[192.168.64.13]'
2023-07-30 13:05:57,485 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'sftp> put /home/ansible/.ansible/tmp/ansible-local-7445wflkxsva/tmpjlmf4_mp /root/.ansible/tmp/ansible-tmp-1690697157.4210043-7661-252622607319598/AnsiballZ_command.py\n', b'')
2023-07-30 13:05:57,485 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,485 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' 192.168.64.13 '/bin/sh -c '"'"'chmod u+x /root/.ansible/tmp/ansible-tmp-1690697157.4210043-7661-252622607319598/ /root/.ansible/tmp/ansible-tmp-1690697157.4210043-7661-252622607319598/AnsiballZ_command.py && sleep 0'"'"''
2023-07-30 13:05:57,508 p=7445 u=ansible n=ansible | <192.168.64.13> (0, b'', b'')
2023-07-30 13:05:57,508 p=7445 u=ansible n=ansible | <192.168.64.13> ESTABLISH SSH CONNECTION FOR USER: root
2023-07-30 13:05:57,508 p=7445 u=ansible n=ansible | <192.168.64.13> SSH: EXEC sshpass -d13 ssh -C -o ControlMaster=auto -o ControlPersist=60s -o StrictHostKeyChecking=no -o 'User="root"' -o ConnectTimeout=10 -o 'ControlPath="/home/ansible/.ansible/cp/fb6c1f016a"' -tt 192.168.64.13 '/bin/sh -c '"'"'/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1690697157.4210043-7661-252622607319598/AnsiballZ_command.py && sleep 0'"'"''
2023-07-30 13:07:46,392 p=7445 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 13:20:03,688 p=8030 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:20:03,692 p=8030 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:20:05,401 p=8030 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:20:05,408 p=8030 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:20:05,424 p=8030 u=ansible n=ansible | ERROR! couldn't resolve module/action 'su'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 93, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Login as postgres user
  ^ here

2023-07-30 13:21:49,420 p=8105 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:21:49,424 p=8105 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:21:50,886 p=8105 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:21:50,895 p=8105 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:21:50,911 p=8105 u=ansible n=ansible | ERROR! couldn't resolve module/action 'ansible.builtin.su'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 93, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Login as postgres user
  ^ here

2023-07-30 13:23:08,720 p=8170 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:23:08,724 p=8170 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:23:10,113 p=8170 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:23:10,121 p=8170 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:23:10,136 p=8170 u=ansible n=ansible | ERROR! couldn't resolve module/action 'ansible.builtin.su'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 93, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Login as postgres user
  ^ here

2023-07-30 13:31:18,646 p=8241 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:31:18,651 p=8241 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:31:20,370 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:20,380 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:31:20,400 p=8241 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:31:20,404 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:31:21,580 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:21,584 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:31:25,179 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:25,184 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:31:25,925 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:25,928 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:31:26,251 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:26,254 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:31:26,261 p=8241 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:31:26,265 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:31:26,755 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:26,759 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:31:27,086 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:27,090 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:31:27,394 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:27,397 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:31:27,675 p=8241 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:31:27,679 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:31:27,996 p=8241 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:31:28,000 p=8241 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:31:28,009 p=8241 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:31:21.727928', 'end': '2023-07-30 13:31:21.729786', 'delta': '0:00:00.001858', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:31:28,012 p=8241 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:34:46,932 p=8241 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 13:35:20,394 p=8569 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:35:20,399 p=8569 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:35:21,581 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:21,589 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:35:21,607 p=8569 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:35:21,611 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:35:22,371 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:22,374 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:35:25,076 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:25,079 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:35:25,715 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:25,718 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:35:26,041 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:26,044 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:35:26,052 p=8569 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:35:26,057 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:35:26,542 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:26,545 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:35:26,865 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:26,869 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:35:27,126 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:27,129 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:35:27,387 p=8569 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:27,390 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:35:27,708 p=8569 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:35:27,711 p=8569 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:35:27,720 p=8569 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:35:21.441584', 'end': '2023-07-30 13:35:21.443231', 'delta': '0:00:00.001647', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:35:27,725 p=8569 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:35:39,387 p=8569 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 13:35:54,271 p=8850 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:35:54,275 p=8850 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:35:55,460 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:55,468 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:35:55,486 p=8850 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:35:55,490 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:35:56,241 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:56,245 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:35:58,575 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:58,579 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:35:59,281 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:59,285 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:35:59,610 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:35:59,614 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:35:59,621 p=8850 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:35:59,626 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:36:00,107 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:00,110 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:36:00,429 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:00,433 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:36:00,691 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:00,694 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:36:00,951 p=8850 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:00,954 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:36:01,271 p=8850 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:36:01,274 p=8850 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:36:01,285 p=8850 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:35:55.004488', 'end': '2023-07-30 13:35:55.005976', 'delta': '0:00:00.001488', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:36:01,289 p=8850 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:36:01,549 p=8850 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": ["su", "-", "postgres2"], "delta": "0:00:00.002574", "end": "2023-07-30 13:35:55.284303", "msg": "non-zero return code", "rc": 1, "start": "2023-07-30 13:35:55.281729", "stderr": "su: user postgres2 does not exist or the user entry does not contain all the required fields", "stderr_lines": ["su: user postgres2 does not exist or the user entry does not contain all the required fields"], "stdout": "", "stdout_lines": []}
2023-07-30 13:36:01,550 p=8850 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 13:36:01,550 p=8850 u=ansible n=ansible | centos2                    : ok=12   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 13:36:41,280 p=9096 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:36:41,284 p=9096 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:36:42,380 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:42,388 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:36:42,406 p=9096 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:36:42,410 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:36:43,159 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:43,163 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:36:45,167 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:45,171 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:36:45,806 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:45,809 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:36:46,129 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:46,133 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:36:46,140 p=9096 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:36:46,145 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:36:46,625 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:46,629 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:36:46,947 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:46,951 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:36:47,208 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:47,212 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:36:47,472 p=9096 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:36:47,475 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:36:47,813 p=9096 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:36:47,818 p=9096 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:36:47,829 p=9096 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:36:41.538509', 'end': '2023-07-30 13:36:41.540703', 'delta': '0:00:00.002194', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:36:47,837 p=9096 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:36:48,163 p=9096 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": ["su", "-", "postgres2", ">>>", "123"], "delta": "0:00:00.002881", "end": "2023-07-30 13:36:41.891719", "msg": "non-zero return code", "rc": 1, "start": "2023-07-30 13:36:41.888838", "stderr": "su: user postgres2 does not exist or the user entry does not contain all the required fields", "stderr_lines": ["su: user postgres2 does not exist or the user entry does not contain all the required fields"], "stdout": "", "stdout_lines": []}
2023-07-30 13:36:48,164 p=9096 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 13:36:48,165 p=9096 u=ansible n=ansible | centos2                    : ok=12   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 13:37:00,313 p=9339 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:37:00,317 p=9339 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:37:01,476 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:01,484 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:37:01,501 p=9339 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:37:01,505 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:37:02,244 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:02,247 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:37:04,579 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:04,583 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:37:05,213 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:05,216 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:37:05,534 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:05,537 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:37:05,545 p=9339 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:37:05,549 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:37:06,023 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:06,027 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:37:06,347 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:06,350 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:37:06,607 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:06,610 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:37:06,869 p=9339 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:37:06,872 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:37:07,176 p=9339 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:37:07,179 p=9339 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:37:07,188 p=9339 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:37:00.909104', 'end': '2023-07-30 13:37:00.910659', 'delta': '0:00:00.001555', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:37:07,193 p=9339 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:37:07,521 p=9339 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": ["su", "-", "postgres", ">>>", "123"], "delta": "0:00:00.074051", "end": "2023-07-30 13:37:01.256748", "msg": "non-zero return code", "rc": 127, "start": "2023-07-30 13:37:01.182697", "stderr": "-bash: >>>: No such file or directory", "stderr_lines": ["-bash: >>>: No such file or directory"], "stdout": "Last login: Sun Jul 30 13:35:55 +07 2023 on pts/1", "stdout_lines": ["Last login: Sun Jul 30 13:35:55 +07 2023 on pts/1"]}
2023-07-30 13:37:07,522 p=9339 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 13:37:07,522 p=9339 u=ansible n=ansible | centos2                    : ok=12   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 13:38:18,669 p=9587 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:38:18,673 p=9587 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:38:20,199 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:20,207 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:38:20,226 p=9587 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:38:20,230 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:38:20,985 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:20,988 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:38:22,942 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:22,945 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:38:23,580 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:23,583 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:38:23,897 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:23,901 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:38:23,908 p=9587 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:38:23,912 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:38:24,393 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:24,396 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:38:24,720 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:24,724 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:38:24,982 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:24,985 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:38:25,242 p=9587 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:38:25,245 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:38:25,563 p=9587 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:38:25,566 p=9587 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:38:25,575 p=9587 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:38:19.295833', 'end': '2023-07-30 13:38:19.297310', 'delta': '0:00:00.001477', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:38:25,579 p=9587 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:38:25,882 p=9587 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": ["su", "-", "postgres", ">>", "123"], "delta": "0:00:00.045710", "end": "2023-07-30 13:38:19.617256", "msg": "non-zero return code", "rc": 127, "start": "2023-07-30 13:38:19.571546", "stderr": "-bash: >>: No such file or directory", "stderr_lines": ["-bash: >>: No such file or directory"], "stdout": "Last login: Sun Jul 30 13:37:54 +07 2023 on pts/0", "stdout_lines": ["Last login: Sun Jul 30 13:37:54 +07 2023 on pts/0"]}
2023-07-30 13:38:25,882 p=9587 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 13:38:25,883 p=9587 u=ansible n=ansible | centos2                    : ok=12   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 13:39:19,928 p=9845 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:39:19,932 p=9845 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:39:21,030 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:21,038 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:39:21,055 p=9845 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:39:21,058 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:39:21,831 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:21,834 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:39:24,026 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:24,029 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:39:24,701 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:24,705 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:39:25,029 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:25,032 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:39:25,040 p=9845 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:39:25,044 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:39:25,523 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:25,526 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:39:25,847 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:25,851 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:39:26,150 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:26,155 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:39:26,473 p=9845 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:39:26,476 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 13:39:26,780 p=9845 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:39:26,784 p=9845 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 13:39:26,796 p=9845 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 13:39:20.513925', 'end': '2023-07-30 13:39:20.515425', 'delta': '0:00:00.001500', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 13:39:26,800 p=9845 u=ansible n=ansible | TASK [install_sonarqube : Login as postgres user] **************************************************************************************************
2023-07-30 13:43:58,676 p=9845 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 13:46:50,771 p=10155 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:46:50,775 p=10155 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:46:52,286 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:52,303 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:46:52,338 p=10155 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:46:52,346 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:46:53,360 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:53,364 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:46:55,533 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:55,537 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:46:56,255 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:56,258 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:46:56,575 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:56,579 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:46:56,587 p=10155 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:46:56,592 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:46:57,092 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:57,096 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:46:57,471 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:57,476 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:46:57,835 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:57,840 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:46:58,145 p=10155 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:46:58,149 p=10155 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 13:46:58,550 p=10155 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (psycopg2) on target-2's Python /usr/bin/python3. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-30 13:46:58,551 p=10155 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 13:46:58,551 p=10155 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 13:57:04,482 p=10491 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:57:04,486 p=10491 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:57:06,008 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:06,017 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:57:06,037 p=10491 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:57:06,044 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:57:06,944 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:06,948 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:57:10,133 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:10,137 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:57:10,790 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:10,793 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:57:11,116 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:11,121 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:57:11,132 p=10491 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:57:11,139 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:57:11,710 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:11,714 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:57:12,162 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:12,166 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:57:12,486 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:12,490 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:57:12,753 p=10491 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:57:12,767 p=10491 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2 using pip] **********************************************************************************************
2023-07-30 13:57:13,166 p=10491 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "cmd": ["/usr/bin/python3", "install", "psycopg2"], "msg": "\n:stderr: /usr/bin/python3: can't open file '/tmp/install': [Errno 2] No such file or directory\n"}
2023-07-30 13:57:13,167 p=10491 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 13:57:13,167 p=10491 u=ansible n=ansible | centos2                    : ok=10   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 13:57:59,970 p=10727 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 13:57:59,974 p=10727 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 13:58:01,074 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:01,084 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 13:58:01,109 p=10727 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 13:58:01,114 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 13:58:01,984 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:01,989 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 13:58:04,808 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:04,813 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 13:58:05,546 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:05,550 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 13:58:05,869 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:05,872 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 13:58:05,880 p=10727 u=ansible n=ansible | skipping: [centos2]
2023-07-30 13:58:05,884 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 13:58:06,372 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:06,375 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 13:58:06,708 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:06,712 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 13:58:06,975 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:06,978 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 13:58:07,238 p=10727 u=ansible n=ansible | ok: [centos2]
2023-07-30 13:58:07,242 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Install pip] *************************************************************************************************************
2023-07-30 13:58:15,383 p=10727 u=ansible n=ansible | changed: [centos2]
2023-07-30 13:58:15,386 p=10727 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2 using pip] **********************************************************************************************
2023-07-30 13:58:15,787 p=10727 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "cmd": ["/usr/bin/python3", "install", "psycopg2"], "msg": "\n:stderr: /usr/bin/python3: can't open file '/tmp/install': [Errno 2] No such file or directory\n"}
2023-07-30 13:58:15,788 p=10727 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 13:58:15,788 p=10727 u=ansible n=ansible | centos2                    : ok=11   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 14:00:03,231 p=11009 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 14:00:03,236 p=11009 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 14:00:04,618 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:04,626 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 14:00:04,641 p=11009 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 14:00:04,644 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 14:00:05,436 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:05,439 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 14:00:08,030 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:08,033 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 14:00:08,719 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:08,723 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 14:00:09,039 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:09,043 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 14:00:09,051 p=11009 u=ansible n=ansible | skipping: [centos2]
2023-07-30 14:00:09,054 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 14:00:09,536 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:09,539 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 14:00:09,859 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:09,862 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 14:00:10,118 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:10,122 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 14:00:10,373 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:10,376 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Install pip] *************************************************************************************************************
2023-07-30 14:00:11,009 p=11009 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:00:11,012 p=11009 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2 using pip] **********************************************************************************************
2023-07-30 14:00:26,594 p=11009 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "psycopg2"], "msg": "stdout: Collecting psycopg2\n  Downloading psycopg2-2.9.6.tar.gz (383 kB)\n  Downloading psycopg2-2.9.5.tar.gz (384 kB)\n  Downloading psycopg2-2.9.4.tar.gz (384 kB)\n  Downloading psycopg2-2.9.3.tar.gz (380 kB)\n  Downloading psycopg2-2.9.2.tar.gz (380 kB)\n  Downloading psycopg2-2.9.1.tar.gz (379 kB)\n  Downloading psycopg2-2.9.tar.gz (379 kB)\n  Downloading psycopg2-2.8.6.tar.gz (383 kB)\n  Downloading psycopg2-2.8.5.tar.gz (380 kB)\n  Downloading psycopg2-2.8.4.tar.gz (377 kB)\n  Downloading psycopg2-2.8.3.tar.gz (377 kB)\n  Downloading psycopg2-2.8.2.tar.gz (368 kB)\n  Downloading psycopg2-2.8.1.tar.gz (367 kB)\n  Downloading psycopg2-2.8.tar.gz (367 kB)\n  Downloading psycopg2-2.7.7.tar.gz (427 kB)\n  Downloading psycopg2-2.7.6.1.tar.gz (427 kB)\n  Downloading psycopg2-2.7.6.tar.gz (427 kB)\n  Downloading psycopg2-2.7.5.tar.gz (426 kB)\n  Downloading psycopg2-2.7.4.tar.gz (425 kB)\n  Downloading psycopg2-2.7.3.2.tar.gz (425 kB)\n  Downloading psycopg2-2.7.3.1.tar.gz (425 kB)\n  Downloading psycopg2-2.7.3.tar.gz (425 kB)\n  Downloading psycopg2-2.7.2.tar.gz (424 kB)\n  Downloading psycopg2-2.7.1.tar.gz (421 kB)\n  Downloading psycopg2-2.7.tar.gz (421 kB)\n  Downloading psycopg2-2.6.2.tar.gz (376 kB)\n  Downloading psycopg2-2.6.1.tar.gz (371 kB)\n  Downloading psycopg2-2.6.tar.gz (367 kB)\n  Downloading psycopg2-2.5.5.tar.gz (779 kB)\n  Downloading psycopg2-2.5.4.tar.gz (682 kB)\n  Downloading psycopg2-2.5.3.tar.gz (690 kB)\n  Downloading psycopg2-2.5.2.tar.gz (685 kB)\n  Downloading psycopg2-2.5.1.tar.gz (684 kB)\n  Downloading psycopg2-2.5.tar.gz (703 kB)\n  Downloading psycopg2-2.4.6.tar.gz (667 kB)\n  Downloading psycopg2-2.4.5.tar.gz (719 kB)\n  Downloading psycopg2-2.4.4.tar.gz (648 kB)\n  Downloading psycopg2-2.4.3.tar.gz (647 kB)\n  Downloading psycopg2-2.4.2.tar.gz (667 kB)\n  Downloading psycopg2-2.4.1.tar.gz (398 kB)\n  Downloading psycopg2-2.4.tar.gz (607 kB)\n  Downloading psycopg2-2.3.2.tar.gz (568 kB)\n  Downloading psycopg2-2.3.1.tar.gz (567 kB)\n  Downloading psycopg2-2.3.0.tar.gz (588 kB)\n  Downloading psycopg2-2.2.2.tar.gz (530 kB)\n  Downloading psycopg2-2.2.1.tar.gz (529 kB)\n  Downloading psycopg2-2.2.0.tar.gz (528 kB)\n  Downloading psycopg2-2.0.14.tar.gz (491 kB)\n  Downloading psycopg2-2.0.13.tar.gz (258 kB)\n  Downloading psycopg2-2.0.12.tar.gz (256 kB)\n  Downloading psycopg2-2.0.11.tar.gz (255 kB)\n  Downloading psycopg2-2.0.10.tar.gz (255 kB)\n\n:stderr:     ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_8d75591ca0a540e28f5d0ed8e4703418/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_8d75591ca0a540e28f5d0ed8e4703418/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-t5d1kd69\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_8d75591ca0a540e28f5d0ed8e4703418/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-t5d1kd69/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-t5d1kd69/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-t5d1kd69/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-t5d1kd69/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-t5d1kd69/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/af/c4/5726cddb53fe52f0e839eb3da04322364f14493217ebd5818cc5e4c948a5/psycopg2-2.9.6.tar.gz#sha256=f15158418fd826831b28585e2ab48ed8df2d0d98f502a2b4fe619e7d5ca29011 (from https://pypi.org/simple/psycopg2/) (requires-python:>=3.6). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_e09ba3e60dc34ea5b38931efb8dcdb6f/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_e09ba3e60dc34ea5b38931efb8dcdb6f/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-8i6l8z5_\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_e09ba3e60dc34ea5b38931efb8dcdb6f/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-8i6l8z5_/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-8i6l8z5_/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-8i6l8z5_/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-8i6l8z5_/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-8i6l8z5_/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/89/d6/cd8c46417e0f7a16b4b0fc321f4ab676a59250d08fce5b64921897fb07cc/psycopg2-2.9.5.tar.gz#sha256=a5246d2e683a972e2187a8714b5c2cf8156c064629f9a9b1a873c1730d9e245a (from https://pypi.org/simple/psycopg2/) (requires-python:>=3.6). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_875051be2b80464faa179b996859eff4/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_875051be2b80464faa179b996859eff4/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-4mf9c_mg\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_875051be2b80464faa179b996859eff4/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-4mf9c_mg/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-4mf9c_mg/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-4mf9c_mg/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-4mf9c_mg/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-4mf9c_mg/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/8d/d7/277e23b708a0429b6b3d50e86e52b791156dfbfa81917d34ef6d7b435b84/psycopg2-2.9.4.tar.gz#sha256=d529926254e093a1b669f692a3aa50069bc71faf5b0ecd91686a78f62767d52f (from https://pypi.org/simple/psycopg2/) (requires-python:>=3.6). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_f3fcd5e638c94e76b3e651a3132fb36c/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_f3fcd5e638c94e76b3e651a3132fb36c/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-x1a75obs\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_f3fcd5e638c94e76b3e651a3132fb36c/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-x1a75obs/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-x1a75obs/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-x1a75obs/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-x1a75obs/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-x1a75obs/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/d1/1e/b450599a27b1809bccbd4e369f397cb18dc56b875778d961f9ae180b54b7/psycopg2-2.9.3.tar.gz#sha256=8e841d1bf3434da985cc5ef13e6f75c8981ced601fd70cc6bf33351b91562981 (from https://pypi.org/simple/psycopg2/) (requires-python:>=3.6). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_c533c680b9f347468af909436c7f5631/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_c533c680b9f347468af909436c7f5631/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-_bermuvw\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_c533c680b9f347468af909436c7f5631/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-_bermuvw/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-_bermuvw/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-_bermuvw/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-_bermuvw/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-_bermuvw/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/33/ed/79434011d773e5ea4c51262f6ebfb86680c2908d7677f31ebccd5aa9f1b3/psycopg2-2.9.2.tar.gz#sha256=a84da9fa891848e0270e8e04dcca073bc9046441eeb47069f5c0e36783debbea (from https://pypi.org/simple/psycopg2/) (requires-python:>=3.6). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_781af769e2334d37bb61b8f04c40b2a8/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_781af769e2334d37bb61b8f04c40b2a8/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-ug_3cqc5\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_781af769e2334d37bb61b8f04c40b2a8/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-ug_3cqc5/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-ug_3cqc5/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-ug_3cqc5/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-ug_3cqc5/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-ug_3cqc5/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/aa/8a/7c80e7e44fb1b4277e89bd9ca509aefdd4dd1b2c547c6f293afe9f7ffd04/psycopg2-2.9.1.tar.gz#sha256=de5303a6f1d0a7a34b9d40e4d3bef684ccc44a49bbe3eb85e3c0bffb4a131b7c (from https://pypi.org/simple/psycopg2/) (requires-python:>=3.6). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_8c4349baa6eb4a2096c9b67219c31f1d/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_8c4349baa6eb4a2096c9b67219c31f1d/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-jjp8eu_6\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_8c4349baa6eb4a2096c9b67219c31f1d/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-jjp8eu_6/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-jjp8eu_6/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-jjp8eu_6/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-jjp8eu_6/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-jjp8eu_6/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/6c/79/6df8af2405e2aa60732c47757453fc7fa4af5c90a1796b3392ef892d3a52/psycopg2-2.9.tar.gz#sha256=b12073fdf2002e828e5921be2c39ff9c6eab361c5c0bd6c529619fc23677accc (from https://pypi.org/simple/psycopg2/) (requires-python:>=3.6). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_a19d211258ef4a729acbebbcaebe8af7/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_a19d211258ef4a729acbebbcaebe8af7/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-8fqsks56\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_a19d211258ef4a729acbebbcaebe8af7/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-8fqsks56/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-8fqsks56/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-8fqsks56/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-8fqsks56/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-8fqsks56/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/fd/ae/98cb7a0cbb1d748ee547b058b14604bd0e9bf285a8e0cc5d148f8a8a952e/psycopg2-2.8.6.tar.gz#sha256=fb23f6c71107c37fd667cb4ea363ddeb936b348bbd6449278eb92c189699f543 (from https://pypi.org/simple/psycopg2/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_864212a0a0dc471f9c176e330c3a5cf7/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_864212a0a0dc471f9c176e330c3a5cf7/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-3vmochot\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_864212a0a0dc471f9c176e330c3a5cf7/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-3vmochot/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-3vmochot/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-3vmochot/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-3vmochot/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-3vmochot/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <https://www.psycopg.org/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/a8/8f/1c5690eebf148d1d1554fc00ccf9101e134636553dbb75bdfef4f85d7647/psycopg2-2.8.5.tar.gz#sha256=f7d46240f7a1ae1dd95aab38bd74f7428d46531f69219954266d669da60c0818 (from https://pypi.org/simple/psycopg2/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_1e39848f7f724c8ea7268b1d253bca4e/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_1e39848f7f724c8ea7268b1d253bca4e/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-ekexxesb\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_1e39848f7f724c8ea7268b1d253bca4e/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-ekexxesb/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-ekexxesb/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-ekexxesb/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-ekexxesb/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-ekexxesb/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/84/d7/6a93c99b5ba4d4d22daa3928b983cec66df4536ca50b22ce5dcac65e4e71/psycopg2-2.8.4.tar.gz#sha256=f898e5cc0a662a9e12bde6f931263a1bbd350cfb18e1d5336a12927851825bb6 (from https://pypi.org/simple/psycopg2/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_82e5d9aa38934f51af0a44d1150569ef/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_82e5d9aa38934f51af0a44d1150569ef/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-gs6zd7dp\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_82e5d9aa38934f51af0a44d1150569ef/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-gs6zd7dp/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-gs6zd7dp/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-gs6zd7dp/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-gs6zd7dp/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-gs6zd7dp/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/5c/1c/6997288da181277a0c29bc39a5f9143ff20b8c99f2a7d059cfb55163e165/psycopg2-2.8.3.tar.gz#sha256=897a6e838319b4bf648a574afb6cabcb17d0488f8c7195100d48d872419f4457 (from https://pypi.org/simple/psycopg2/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_6e39e5877fb8490395730966afb033f0/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_6e39e5877fb8490395730966afb033f0/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-fthp1x_y\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_6e39e5877fb8490395730966afb033f0/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-fthp1x_y/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-fthp1x_y/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-fthp1x_y/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-fthp1x_y/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-fthp1x_y/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/23/7e/93c325482c328619870b6cd09370f6dbe1148283daca65115cd63642e60f/psycopg2-2.8.2.tar.gz#sha256=5cacf21b6f813c239f100ef78a4132056f93a5940219ec25d2ef833cbeb05588 (from https://pypi.org/simple/psycopg2/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_26da09873318488ea6bc0a0dfe3c7521/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_26da09873318488ea6bc0a0dfe3c7521/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-jmhf7qc9\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_26da09873318488ea6bc0a0dfe3c7521/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-jmhf7qc9/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-jmhf7qc9/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-jmhf7qc9/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-jmhf7qc9/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-jmhf7qc9/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/52/be/f898e712f5f08131d651a62754fca82a1deb42e4e9889ad01932f770a2be/psycopg2-2.8.1.tar.gz#sha256=b4a475ce87eabc0607e068a3c704d0aa0820237ed78d493b8e2d880eb73cd7fe (from https://pypi.org/simple/psycopg2/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_6d6f3a1625fc4376a4bac67f23decb8a/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_6d6f3a1625fc4376a4bac67f23decb8a/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-sqa_6n9l\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_6d6f3a1625fc4376a4bac67f23decb8a/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-sqa_6n9l/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-sqa_6n9l/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-sqa_6n9l/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-sqa_6n9l/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-sqa_6n9l/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/c7/ca/75236b17f1b951950ffc55d657c5aa408d3d0327a1b6c4c0f7cb16ef7e7b/psycopg2-2.8.tar.gz#sha256=49c5838d90e83217909db3789d30a105385b5e696ec5168cda645546c542f35a (from https://pypi.org/simple/psycopg2/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_1eb7c951000841b1b1f900ecde3692f8/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_1eb7c951000841b1b1f900ecde3692f8/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-gaqjq90a\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_1eb7c951000841b1b1f900ecde3692f8/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-gaqjq90a/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-gaqjq90a/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-gaqjq90a/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-gaqjq90a/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-gaqjq90a/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/63/54/c039eb0f46f9a9406b59a638415c2012ad7be9b4b97bfddb1f48c280df3a/psycopg2-2.7.7.tar.gz#sha256=f4526d078aedd5187d0508aa5f9a01eae6a48a470ed678406da94b4cd6524b7e (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_7cc80d60efcd4be59d5127dea1332f47/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_7cc80d60efcd4be59d5127dea1332f47/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-yxg5herm\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_7cc80d60efcd4be59d5127dea1332f47/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-yxg5herm/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-yxg5herm/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-yxg5herm/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-yxg5herm/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-yxg5herm/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/c0/07/93573b97ed61b6fb907c8439bf58f09957564cf7c39612cef36c547e68c6/psycopg2-2.7.6.1.tar.gz#sha256=27959abe64ca1fc6d8cd11a71a1f421d8287831a3262bd4cacd43bbf43cc3c82 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_5f1fee02cc63498584417fbf69877e56/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_5f1fee02cc63498584417fbf69877e56/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-mzr00hhi\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_5f1fee02cc63498584417fbf69877e56/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-mzr00hhi/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-mzr00hhi/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-mzr00hhi/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-mzr00hhi/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-mzr00hhi/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/94/09/2f1fae36d83e2315b90ee91738d01baf8af8c945726bf4b4708fcec3256d/psycopg2-2.7.6.tar.gz#sha256=4a658550b0bcb259e97f77f2dc93ed6b108fe2eda963a9e6fc8b48040d542ec2 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_ca0b6e2ee8244e49a77ae3618763719f/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_ca0b6e2ee8244e49a77ae3618763719f/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-lxo8fx_w\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_ca0b6e2ee8244e49a77ae3618763719f/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-lxo8fx_w/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-lxo8fx_w/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-lxo8fx_w/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-lxo8fx_w/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-lxo8fx_w/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/b2/c1/7bf6c464e903ffc4f3f5907c389e5a4199666bf57f6cd6bf46c17912a1f9/psycopg2-2.7.5.tar.gz#sha256=eccf962d41ca46e6326b97c8fe0a6687b58dfc1a5f6540ed071ff1474cea749e (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_e8833c4d157a4bce99247c98926355b6/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_e8833c4d157a4bce99247c98926355b6/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-776w2a77\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_e8833c4d157a4bce99247c98926355b6/\n    Complete output (23 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-776w2a77/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-776w2a77/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-776w2a77/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-776w2a77/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-776w2a77/psycopg2.egg-info/SOURCES.txt'\n    \n    Error: pg_config executable not found.\n    \n    pg_config is required to build psycopg2 from source.  Please add the directory\n    containing pg_config to the $PATH or specify the full executable path with the\n    option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    \n    If you prefer to avoid building psycopg2 from source, please install the PyPI\n    'psycopg2-binary' package instead.\n    \n    For further information please check the 'doc/src/install.rst' file (also at\n    <http://initd.org/psycopg/docs/install.html>).\n    \n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/74/83/51580322ed0e82cba7ad8e0af590b8fb2cf11bd5aaa1ed872661bd36f462/psycopg2-2.7.4.tar.gz#sha256=8bf51191d60f6987482ef0cfe8511bbf4877a5aa7f313d7b488b53189cf26209 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_2c49e703cbbd472db4096ba3125edf41/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_2c49e703cbbd472db4096ba3125edf41/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-nqyxqucz\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_2c49e703cbbd472db4096ba3125edf41/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-nqyxqucz/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-nqyxqucz/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-nqyxqucz/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-nqyxqucz/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-nqyxqucz/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/dd/47/000b405d73ca22980684fd7bd3318690cc03cfa3b2ae1c5b7fff8050b28a/psycopg2-2.7.3.2.tar.gz#sha256=5c3213be557d0468f9df8fe2487eaf2990d9799202c5ff5cb8d394d09fad9b2a (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_79a538277f974537aba111211d92b697/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_79a538277f974537aba111211d92b697/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-ij8wksdq\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_79a538277f974537aba111211d92b697/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-ij8wksdq/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-ij8wksdq/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-ij8wksdq/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-ij8wksdq/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-ij8wksdq/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/6b/fb/15c687eda2f925f0ff59373063fdb408471b4284714a7761daaa65c01f15/psycopg2-2.7.3.1.tar.gz#sha256=9b7b16e26448b43cf167f785d8b5345007731ebf153a510e12dae826800caa65 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_ad3f09b0ab2f4ee2bce669433735639e/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_ad3f09b0ab2f4ee2bce669433735639e/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-75c8pruz\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_ad3f09b0ab2f4ee2bce669433735639e/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-75c8pruz/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-75c8pruz/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-75c8pruz/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-75c8pruz/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-75c8pruz/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/98/99/33ca02c4bc3ed1bd9ceab5614bda2e6d1d31e61ec58345b9feece238c38a/psycopg2-2.7.3.tar.gz#sha256=c9bd49848556d04093909faec017c3675efabf78c2b7f383bf7c43ba18324ac8 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_366a14f5dd4a4bdea870825909461512/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_366a14f5dd4a4bdea870825909461512/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-jek49g8o\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_366a14f5dd4a4bdea870825909461512/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-jek49g8o/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-jek49g8o/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-jek49g8o/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-jek49g8o/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-jek49g8o/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/d0/66/61c1b34ea8da8f95d99676e6803ccad83abef3ac90df145b45033696f3d2/psycopg2-2.7.2.tar.gz#sha256=3767f40bb35713ccc75dbcff80bf228a75e080d6b98c78afd5fb9aa84682a9f4 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_2b5e6de9f8fb4b73ae6e44b4f5103247/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_2b5e6de9f8fb4b73ae6e44b4f5103247/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-puvnv1us\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_2b5e6de9f8fb4b73ae6e44b4f5103247/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-puvnv1us/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-puvnv1us/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-puvnv1us/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-puvnv1us/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-puvnv1us/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/f8/e9/5793369ce8a41bf5467623ded8d59a434dfef9c136351aca4e70c2657ba0/psycopg2-2.7.1.tar.gz#sha256=86c9355f5374b008c8479bc00023b295c07d508f7c3b91dbd2e74f8925b1d9c6 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_0b3f44d92c36471fa81ee80c9bbf7dc1/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_0b3f44d92c36471fa81ee80c9bbf7dc1/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-5_v34ddu\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_0b3f44d92c36471fa81ee80c9bbf7dc1/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-5_v34ddu/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-5_v34ddu/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-5_v34ddu/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-5_v34ddu/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-5_v34ddu/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/62/ca/0a479c9664526e86c2913a7ad593586eeb86b428b7e629e7c7b6b69e3cb7/psycopg2-2.7.tar.gz#sha256=ceadecf660ad4f7a31ea5baef30a7351add8626f9fd3daaafabb9a9e549f3f9a (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_022df694f9f04bb3b81cc0a645e22800/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_022df694f9f04bb3b81cc0a645e22800/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-9aepzhxn\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_022df694f9f04bb3b81cc0a645e22800/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-9aepzhxn/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-9aepzhxn/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-9aepzhxn/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-9aepzhxn/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-9aepzhxn/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/7b/a8/dc2d50a6f37c157459cd18bab381c8e6134b9381b50fbe969997b2ae7dbc/psycopg2-2.6.2.tar.gz#sha256=70490e12ed9c5c818ecd85d185d363335cc8a8cbf7212e3c185431c79ff8c05c (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_dbe148155cdd4cba941fe6e83cb16351/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_dbe148155cdd4cba941fe6e83cb16351/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-r8dntsd5\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_dbe148155cdd4cba941fe6e83cb16351/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-r8dntsd5/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-r8dntsd5/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-r8dntsd5/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-r8dntsd5/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-r8dntsd5/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/86/fd/cc8315be63a41fe000cce20482a917e874cdc1151e62cb0141f5e55f711e/psycopg2-2.6.1.tar.gz#sha256=6acf9abbbe757ef75dc2ecd9d91ba749547941abaffbe69ff2086a9e37d4904c (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_36858f81c63f4a00a5c2ecc8fe26fa95/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_36858f81c63f4a00a5c2ecc8fe26fa95/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-whs345sp\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_36858f81c63f4a00a5c2ecc8fe26fa95/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-whs345sp/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-whs345sp/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-whs345sp/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-whs345sp/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-whs345sp/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/dd/c7/9016ff8ff69da269b1848276eebfb264af5badf6b38caad805426771f04d/psycopg2-2.6.tar.gz#sha256=c00afecb302a99a4f83dec9b055c4d1cc196926d62c8db015d68432df8118ca8 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_3716e2405896402d8f3a7744446bd9c0/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_3716e2405896402d8f3a7744446bd9c0/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-b5gxi03z\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_3716e2405896402d8f3a7744446bd9c0/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-b5gxi03z/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-b5gxi03z/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-b5gxi03z/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-b5gxi03z/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-b5gxi03z/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/9b/60/f4c79e73a69ded145880bcf4f98eeed741af12c62c5ddc89b754602b1807/psycopg2-2.5.5.tar.gz#sha256=c6c330c98ab08c5639f0ccd7e211b82b3a39f001813dcea6bb824a99d2b34fe2 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_a3d1034b99da40fd9a1c3dd19ba638b6/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_a3d1034b99da40fd9a1c3dd19ba638b6/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-6dx_9dl1\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_a3d1034b99da40fd9a1c3dd19ba638b6/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-6dx_9dl1/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-6dx_9dl1/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-6dx_9dl1/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-6dx_9dl1/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-6dx_9dl1/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/63/c3/802668cb3cfc2880c2a8364623e7105a0257724a2612bb66ec733aaddb8c/psycopg2-2.5.4.tar.gz#sha256=24ba3f328aba08d8d505bc2a8f68a94ebe24a85e8483640b667221bc0efd3b1e (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_5a00d15e36364060a2724916ac8899d2/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_5a00d15e36364060a2724916ac8899d2/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-59jfygkh\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_5a00d15e36364060a2724916ac8899d2/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-59jfygkh/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-59jfygkh/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-59jfygkh/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-59jfygkh/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-59jfygkh/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/22/fa/5ddcafc7387c1534c59eb3ffcdb9ab2af106fd3b104e6df191b6c55718af/psycopg2-2.5.3.tar.gz#sha256=3a2df3bb113187227aa97d0dd3d06e0f26be3d50dcdeeaef67fac59ed51a030a (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_8ad89a43c6ba4cd2b96589142c9716f3/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_8ad89a43c6ba4cd2b96589142c9716f3/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-ip9rewle\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_8ad89a43c6ba4cd2b96589142c9716f3/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-ip9rewle/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-ip9rewle/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-ip9rewle/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-ip9rewle/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-ip9rewle/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/c3/f3/5519551f02ae70fc51f4e608e7b44d59a408fe3264fec4afeea37b8ea317/psycopg2-2.5.2.tar.gz#sha256=50382d8703a16c3c615f328c2676f002787095925c99f0afb125a59962a5bd2e (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_93f334ac4fd7492195ffebaac7720b14/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_93f334ac4fd7492195ffebaac7720b14/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-y42k7z3w\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_93f334ac4fd7492195ffebaac7720b14/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-y42k7z3w/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-y42k7z3w/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-y42k7z3w/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-y42k7z3w/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-y42k7z3w/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/22/09/63d5da7375c267e208bbadf56b51699d85cb7b3a9096817eeea500a27b3b/psycopg2-2.5.1.tar.gz#sha256=65a70c88a7e02d8bef57aab8636b5795389674c3205fd88ec46a4dffffa7efec (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_ff59d6109f27448b9b52dc5e5d5d8e4a/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_ff59d6109f27448b9b52dc5e5d5d8e4a/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-chztuhmd\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_ff59d6109f27448b9b52dc5e5d5d8e4a/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-chztuhmd/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-chztuhmd/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-chztuhmd/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-chztuhmd/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-chztuhmd/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/84/7e/7256298bf7064238e63b9380cf424f776a4d2a87e387c9a9bd1bc5ea0fbc/psycopg2-2.5.tar.gz#sha256=6b2f0cc9199de9eaa53ba10ff69b2741e73484b24657e69bdae259561c23bde4 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_3064adfb163840d9a078d9c51b0829c0/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_3064adfb163840d9a078d9c51b0829c0/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-uuu18ibn\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_3064adfb163840d9a078d9c51b0829c0/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-uuu18ibn/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-uuu18ibn/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-uuu18ibn/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-uuu18ibn/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-uuu18ibn/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/59/aa/4d74a5dc32a89d622c1fa896a86683b488ef255f06d4b27231e12e6076f7/psycopg2-2.4.6.tar.gz#sha256=4edcb40b0a039b4b559a6bc887b2155db8b6c53d0f55b00af8338c77b725621f (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_c20ae6788fab4bae8f43ae78a0b26bca/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_c20ae6788fab4bae8f43ae78a0b26bca/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-m08l5byo\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_c20ae6788fab4bae8f43ae78a0b26bca/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-m08l5byo/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-m08l5byo/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-m08l5byo/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-m08l5byo/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-m08l5byo/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/36/77/894a5dd9f3f55cfc85682d3e6473ee5103d8d418b95baf4019fad3ffa026/psycopg2-2.4.5.tar.gz#sha256=48b702a7ca479e1bc2c1a7b81875a07d474298132605993e2cb979f5e08277d7 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_cb7d38d2f1e94c2c902d7420a127f66c/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_cb7d38d2f1e94c2c902d7420a127f66c/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-9chmwu3s\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_cb7d38d2f1e94c2c902d7420a127f66c/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-9chmwu3s/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-9chmwu3s/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-9chmwu3s/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-9chmwu3s/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-9chmwu3s/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/6f/91/890c6f954e2d09d26b266a24468570c6227de61ac6f64926c48000db0a6e/psycopg2-2.4.4.tar.gz#sha256=0c55b059d33f6b2cbb52f254320832c0ca30498ae06f4f4df2a2b38af989127e (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_f5a1fba4cbee42a3b4e6b94d9993f853/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_f5a1fba4cbee42a3b4e6b94d9993f853/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-118l2c44\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_f5a1fba4cbee42a3b4e6b94d9993f853/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-118l2c44/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-118l2c44/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-118l2c44/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-118l2c44/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-118l2c44/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/1e/71/8929172068cbc3d3c7288bf888a7df5862a28d67ed61ad9b4c7aa5cf8be8/psycopg2-2.4.3.tar.gz#sha256=febd8e35ca9904bf4418e611f866a80639fbca7db2781e5b5cd20589b767af0b (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_7874fd58f2b04a449005192b6fb3440f/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_7874fd58f2b04a449005192b6fb3440f/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-apm9ee5i\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_7874fd58f2b04a449005192b6fb3440f/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-apm9ee5i/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-apm9ee5i/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-apm9ee5i/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-apm9ee5i/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-apm9ee5i/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/70/91/345f8eb32dc333331510e1adad858f7a1478d3a1e4aae05ee188985c6b17/psycopg2-2.4.2.tar.gz#sha256=c5f0f853aeeefc7b2aa73b08579e5d74c4c32ad5fca87e058bf04e08273a41a1 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_ac02afd928684ae89cfead6035ab3196/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_ac02afd928684ae89cfead6035ab3196/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-io2w89io\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_ac02afd928684ae89cfead6035ab3196/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-io2w89io/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-io2w89io/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-io2w89io/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-io2w89io/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-io2w89io/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/82/f8/6c80beb1b58f01f52dcdfa52bc1668caa4e3fc4927e9230edc40afa98c05/psycopg2-2.4.1.tar.gz#sha256=f8ee9a4004afbd1ff1a1db8df7910475d6ec26e102aa92c9214cbeb1ef39ff49 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_a6331752eea645399225e5b0152f4f5e/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_a6331752eea645399225e5b0152f4f5e/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-c0kuuqer\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_a6331752eea645399225e5b0152f4f5e/\n    Complete output (14 lines):\n    running egg_info\n    creating /tmp/pip-pip-egg-info-c0kuuqer/psycopg2.egg-info\n    writing /tmp/pip-pip-egg-info-c0kuuqer/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to /tmp/pip-pip-egg-info-c0kuuqer/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to /tmp/pip-pip-egg-info-c0kuuqer/psycopg2.egg-info/top_level.txt\n    writing manifest file '/tmp/pip-pip-egg-info-c0kuuqer/psycopg2.egg-info/SOURCES.txt'\n    Error: pg_config executable not found.\n    \n    Please add the directory containing pg_config to the PATH\n    or specify the full executable path with the option:\n    \n        python setup.py build_ext --pg-config /path/to/pg_config build ...\n    \n    or with the pg_config option in 'setup.cfg'.\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/ce/2d/e9e65ee32ef2657028109bd5a1c1ece97e409ebf790b6ee286aae2c6b890/psycopg2-2.4.tar.gz#sha256=f41623c413283f101b61ba2356f92cc1890b00308aea970124ebd6178ac5c3a5 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_c17457a09e2e40d5b5e1b486c967e01a/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_c17457a09e2e40d5b5e1b486c967e01a/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-ohyx_aiz\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_c17457a09e2e40d5b5e1b486c967e01a/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_c17457a09e2e40d5b5e1b486c967e01a/setup.py\", line 247\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/50/48/32927cbc99633613704950be5013fc144aa0f451a5e0616635a934d94a62/psycopg2-2.3.2.tar.gz#sha256=0ef1df428f5482c41885ee6d9a6975473fc83af5497801abd36dd150a3754c2c (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_6f87b200994147c7a612501ea98e253a/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_6f87b200994147c7a612501ea98e253a/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-aihatyxj\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_6f87b200994147c7a612501ea98e253a/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_6f87b200994147c7a612501ea98e253a/setup.py\", line 247\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/cd/7c/6acf5aacd347f3dc1398eca0e2123c35a48efb07617d4d9578e9cd79a1a7/psycopg2-2.3.1.tar.gz#sha256=7aee74fb13f3b51571fa84cebeeeb29b4230e7553f554f228636c6754752c4e4 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_1fd430ecf45a402f88c7b3a65a126fa6/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_1fd430ecf45a402f88c7b3a65a126fa6/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-xzaonssh\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_1fd430ecf45a402f88c7b3a65a126fa6/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_1fd430ecf45a402f88c7b3a65a126fa6/setup.py\", line 247\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/68/0a/459df8dcbcc118ca435e9567abceaab919706908d52139e503f6396c4935/psycopg2-2.3.0.tar.gz#sha256=c17a06b7468debba94fa151d3ad93cd885d9cbe9a751e54ceb87738d5f0478ea (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_9d6fa4953d284068845226a126e09573/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_9d6fa4953d284068845226a126e09573/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-j5sznfz4\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_9d6fa4953d284068845226a126e09573/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_9d6fa4953d284068845226a126e09573/setup.py\", line 245\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/63/3e/a4a35761eb4595fff89e63347b4f8e79c2095782fa5bc016a6dfb18b21ac/psycopg2-2.2.2.tar.gz#sha256=21a33d5b2609103512748098a06249492cc294790e07638fadc68cf06eeac39d (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_6efd0c725dcd41529756c2ce373f6e49/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_6efd0c725dcd41529756c2ce373f6e49/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-g104up55\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_6efd0c725dcd41529756c2ce373f6e49/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_6efd0c725dcd41529756c2ce373f6e49/setup.py\", line 239\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/de/c4/fdfb801035bd7da9e1ce98169d48ca2d6dee5b4361e349afbba40b3d7a5d/psycopg2-2.2.1.tar.gz#sha256=b0eca4e8438025dc57cacbea4e8ca2f5dc0554d41b1cdcc177757a5fc413f3d1 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_e7dadb765cd543bdb557528e2fdb66fa/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_e7dadb765cd543bdb557528e2fdb66fa/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-g8gcumlp\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_e7dadb765cd543bdb557528e2fdb66fa/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_e7dadb765cd543bdb557528e2fdb66fa/setup.py\", line 238\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/32/0c/2f4da04ae2a66d71eff37f19fce67506ad28f887851cd1c1cca35ba08b36/psycopg2-2.2.0.tar.gz#sha256=e70a8eabc491318beef4cd9cd9245a4d8dc62ee31cb74e7988913a66bb33f858 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_9c01a9477f0940a0a14fdadd64e08867/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_9c01a9477f0940a0a14fdadd64e08867/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-tktxis9y\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_9c01a9477f0940a0a14fdadd64e08867/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_9c01a9477f0940a0a14fdadd64e08867/setup.py\", line 238\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/e0/1c/f0843f50a69fba3db880e9b267d36f6709bbf31a36fc46b82f75e8975ede/psycopg2-2.0.14.tar.gz#sha256=902607cdbe1195a00694d2b477eed8429eda433caaa0eb6ff7f80883e1c17ac7 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_a534bf56e94f45f9a2a186e025a75552/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_a534bf56e94f45f9a2a186e025a75552/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-cd2s2cdh\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_a534bf56e94f45f9a2a186e025a75552/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_a534bf56e94f45f9a2a186e025a75552/setup.py\", line 233\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/3a/7a/968afcb86b1958ae963a3aaa42c561e3ed2c2d4a8b773622b03856a16248/psycopg2-2.0.13.tar.gz#sha256=a15e622e101b16aa8ad44813d8fb1eced91379396c054aacbfa3ad658352332b (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_9cdca78d30ff416eb235efa3f31b5ed2/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_9cdca78d30ff416eb235efa3f31b5ed2/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-xmmlr67p\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_9cdca78d30ff416eb235efa3f31b5ed2/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_9cdca78d30ff416eb235efa3f31b5ed2/setup.py\", line 225\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/6a/8d/ee5c330823d527a5cd14c833063f825211d7b5de6e4897f72e250c107d85/psycopg2-2.0.12.tar.gz#sha256=542c187531e756867fb60034c393b6f2beca34eeeb3ce2e0089a2b6fb8be1292 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_4937ab3d7f024678ac86688cc3a66cbb/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_4937ab3d7f024678ac86688cc3a66cbb/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-qos6p3nr\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_4937ab3d7f024678ac86688cc3a66cbb/\n    Complete output (6 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_4937ab3d7f024678ac86688cc3a66cbb/setup.py\", line 225\n        except Warning, w:\n                      ^\n    SyntaxError: invalid syntax\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/2d/d7/496da11d7c81971870ddd36800419c4f84e8f6208aac5eabedf9f7748729/psycopg2-2.0.11.tar.gz#sha256=e6b4e0e41df97441eff34e00065376414da6488e0d55848a45cd77551dbae434 (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n    ERROR: Command errored out with exit status 1:\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-0dymftjr/psycopg2_4548731cad4344bca86cb386d0164548/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-0dymftjr/psycopg2_4548731cad4344bca86cb386d0164548/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-pip-egg-info-l9aioze7\n         cwd: /tmp/pip-install-0dymftjr/psycopg2_4548731cad4344bca86cb386d0164548/\n    Complete output (5 lines):\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-install-0dymftjr/psycopg2_4548731cad4344bca86cb386d0164548/setup.py\", line 50, in <module>\n        import ConfigParser\n    ModuleNotFoundError: No module named 'ConfigParser'\n    ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/19/79/35c7596bab4456f3610c12ec542a94d51c6781ced587d1d85127210b879b/psycopg2-2.0.10.tar.gz#sha256=e40cc04b43849085725076ae134bfef9e3b087f6dd7c964aeeb930e2f0bc14ab (from https://pypi.org/simple/psycopg2/). Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\nERROR: Could not find a version that satisfies the requirement psycopg2 (from versions: 2.0.10, 2.0.11, 2.0.12, 2.0.13, 2.0.14, 2.2.0, 2.2.1, 2.2.2, 2.3.0, 2.3.1, 2.3.2, 2.4, 2.4.1, 2.4.2, 2.4.3, 2.4.4, 2.4.5, 2.4.6, 2.5, 2.5.1, 2.5.2, 2.5.3, 2.5.4, 2.5.5, 2.6, 2.6.1, 2.6.2, 2.7, 2.7.1, 2.7.2, 2.7.3, 2.7.3.1, 2.7.3.2, 2.7.4, 2.7.5, 2.7.6, 2.7.6.1, 2.7.7, 2.8, 2.8.1, 2.8.2, 2.8.3, 2.8.4, 2.8.5, 2.8.6, 2.9, 2.9.1, 2.9.2, 2.9.3, 2.9.4, 2.9.5, 2.9.6)\nERROR: No matching distribution found for psycopg2\n"}
2023-07-30 14:00:26,595 p=11009 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 14:00:26,595 p=11009 u=ansible n=ansible | centos2                    : ok=11   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 14:02:18,464 p=11329 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 14:02:18,468 p=11329 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 14:02:19,912 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:19,919 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 14:02:19,934 p=11329 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 14:02:19,938 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 14:02:21,095 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:21,099 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 14:02:23,705 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:23,708 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 14:02:24,405 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:24,410 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 14:02:24,759 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:24,764 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 14:02:24,774 p=11329 u=ansible n=ansible | skipping: [centos2]
2023-07-30 14:02:24,779 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 14:02:25,342 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:25,346 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 14:02:25,683 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:25,686 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 14:02:26,065 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:26,070 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 14:02:26,417 p=11329 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:26,422 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 14:02:29,707 p=11329 u=ansible n=ansible | changed: [centos2]
2023-07-30 14:02:29,711 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 14:02:30,254 p=11329 u=ansible n=ansible | changed: [centos2]
2023-07-30 14:02:30,258 p=11329 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 14:02:30,270 p=11329 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-30 14:02:30,272 p=11329 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 14:02:30,272 p=11329 u=ansible n=ansible | centos2                    : ok=12   changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 14:02:55,818 p=11615 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 14:02:55,823 p=11615 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 14:02:56,974 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:56,983 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 14:02:57,004 p=11615 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 14:02:57,010 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 14:02:57,857 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:02:57,861 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 14:03:00,884 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:00,888 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 14:03:01,544 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:01,547 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 14:03:01,871 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:01,874 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 14:03:01,882 p=11615 u=ansible n=ansible | skipping: [centos2]
2023-07-30 14:03:01,887 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 14:03:02,366 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:02,370 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 14:03:02,693 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:02,696 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 14:03:02,952 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:02,956 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 14:03:03,213 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:03,217 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 14:03:03,849 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:03,852 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 14:03:04,204 p=11615 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:03:04,207 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 14:03:04,568 p=11615 u=ansible n=ansible | changed: [centos2]
2023-07-30 14:03:04,572 p=11615 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 14:03:04,921 p=11615 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Argument \"objs\" is required for type \"table\"."}
2023-07-30 14:03:04,922 p=11615 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 14:03:04,922 p=11615 u=ansible n=ansible | centos2                    : ok=13   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 14:09:32,855 p=11900 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 14:09:32,860 p=11900 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 14:09:34,426 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:34,434 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 14:09:34,451 p=11900 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 14:09:34,455 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 14:09:35,297 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:35,301 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 14:09:37,676 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:37,680 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 14:09:38,338 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:38,342 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 14:09:38,723 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:38,729 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 14:09:38,739 p=11900 u=ansible n=ansible | skipping: [centos2]
2023-07-30 14:09:38,745 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 14:09:39,247 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:39,251 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 14:09:39,576 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:39,579 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 14:09:39,883 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:39,888 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 14:09:40,203 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:40,208 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 14:09:40,615 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:40,621 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 14:09:41,028 p=11900 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:09:41,032 p=11900 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 14:09:41,379 p=11900 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Argument \"objs\" is required for type \"table\"."}
2023-07-30 14:09:41,380 p=11900 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 14:09:41,380 p=11900 u=ansible n=ansible | centos2                    : ok=12   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 14:13:39,733 p=12195 u=ansible n=ansible | Starting galaxy collection install process
2023-07-30 14:13:39,764 p=12195 u=ansible n=ansible | Process install dependency map
2023-07-30 14:13:39,764 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:39,870 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:39,979 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:40,080 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:40,182 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:40,285 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:40,387 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:40,490 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:40,593 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:40,702 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:40,808 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:40,982 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:41,090 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:41,192 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:41,294 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:41,400 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:41,503 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:41,604 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:41,710 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:41,813 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:41,917 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:42,026 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:42,131 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:42,238 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:42,340 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:42,443 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:42,546 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:42,648 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:42,754 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:42,861 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:42,965 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:43,068 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:43,173 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:43,277 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:43,381 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:43,487 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:43,589 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:43,692 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:43,796 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:43,902 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:44,008 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:44,116 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:44,221 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:44,325 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:44,429 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:44,535 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:44,637 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:44,740 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:44,845 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:44,950 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:45,051 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:45,152 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:45,255 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:45,360 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:45,530 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:45,631 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:45,733 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:45,833 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:45,937 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:46,040 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:46,141 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:46,243 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:46,345 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:46,447 p=12195 u=ansible n=ansible | Starting collection install process
2023-07-30 14:13:46,448 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:46,453 p=12195 u=ansible n=ansible | Downloading https://galaxy.ansible.com/download/community-general-7.2.0.tar.gz to /home/ansible/.ansible/tmp/ansible-local-12195th7gharx/tmp_dnfssg4/community-general-7.2.0-y7ex41w4
2023-07-30 14:13:46,591 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:46,696 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:46,798 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:46,901 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:47,004 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:47,106 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:47,208 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:47,313 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:47,416 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:47,521 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:47,624 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:47,726 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:47,829 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:47,931 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:48,034 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:48,138 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:48,243 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:48,345 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:48,448 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:48,552 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:48,655 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:48,763 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:48,867 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:48,972 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:49,074 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:49,177 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:49,282 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:49,388 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:49,491 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:49,592 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:49,695 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:49,799 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:49,902 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:50,005 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:50,106 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:50,209 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:50,315 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:50,417 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:50,521 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:50,624 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:50,726 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:50,829 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:50,930 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:51,037 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:51,139 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:51,242 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:51,348 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:51,453 p=12195 u=ansible n=ansible | Installing 'community.general:7.2.0' to '/home/ansible/.ansible/collections/ansible_collections/community/general'
2023-07-30 14:13:51,453 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:51,558 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:51,660 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:51,761 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:51,861 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:51,961 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:52,065 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:52,166 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:52,267 p=12195 u=ansible n=ansible | |
2023-07-30 14:13:52,369 p=12195 u=ansible n=ansible | /
2023-07-30 14:13:52,470 p=12195 u=ansible n=ansible | -
2023-07-30 14:13:52,570 p=12195 u=ansible n=ansible | \
2023-07-30 14:13:52,673 p=12195 u=ansible n=ansible | community.general:7.2.0 was installed successfully
2023-07-30 14:14:03,507 p=12261 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 14:14:03,511 p=12261 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 14:14:05,115 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:05,124 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 14:14:05,141 p=12261 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 14:14:05,145 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 14:14:06,008 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:06,012 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 14:14:07,637 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:07,641 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 14:14:08,344 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:08,348 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 14:14:08,670 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:08,673 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 14:14:08,681 p=12261 u=ansible n=ansible | skipping: [centos2]
2023-07-30 14:14:08,685 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 14:14:09,166 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:09,170 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 14:14:09,507 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:09,511 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 14:14:09,792 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:09,795 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 14:14:10,065 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:10,068 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 14:14:10,713 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:10,717 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 14:14:11,088 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:11,091 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 14:14:11,468 p=12261 u=ansible n=ansible | ok: [centos2]
2023-07-30 14:14:11,471 p=12261 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 14:14:11,823 p=12261 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Argument \"objs\" is required for type \"table\"."}
2023-07-30 14:14:11,824 p=12261 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 14:14:11,824 p=12261 u=ansible n=ansible | centos2                    : ok=13   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 19:45:10,876 p=2663 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 19:45:10,884 p=2663 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 19:45:12,449 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:12,458 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 19:45:12,483 p=2663 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 19:45:12,488 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 19:45:14,545 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:14,548 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 19:45:17,199 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:17,203 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 19:45:17,875 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:17,878 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 19:45:18,188 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:18,192 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 19:45:18,198 p=2663 u=ansible n=ansible | skipping: [centos2]
2023-07-30 19:45:18,202 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 19:45:18,672 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:18,675 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 19:45:18,974 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:18,977 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 19:45:19,214 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:19,218 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 19:45:19,453 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:19,456 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 19:45:20,052 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:20,055 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 19:45:20,464 p=2663 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:45:20,467 p=2663 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 19:45:20,473 p=2663 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-30 19:45:20,474 p=2663 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 19:45:20,474 p=2663 u=ansible n=ansible | centos2                    : ok=12   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 19:46:09,889 p=2940 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 19:46:09,893 p=2940 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 19:46:10,967 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:10,974 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 19:46:10,989 p=2940 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 19:46:10,992 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 19:46:11,684 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:11,688 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 19:46:13,373 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:13,377 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 19:46:13,967 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:13,970 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 19:46:14,266 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:14,270 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 19:46:14,277 p=2940 u=ansible n=ansible | skipping: [centos2]
2023-07-30 19:46:14,281 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 19:46:14,759 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:14,764 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 19:46:15,142 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:15,146 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 19:46:15,402 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:15,405 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 19:46:15,643 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:15,646 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 19:46:16,301 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:16,304 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 19:46:16,631 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:16,634 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 19:46:16,973 p=2940 u=ansible n=ansible | ok: [centos2]
2023-07-30 19:46:16,976 p=2940 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 19:46:17,316 p=2940 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Argument \"objs\" is required for type \"table\"."}
2023-07-30 19:46:17,317 p=2940 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 19:46:17,317 p=2940 u=ansible n=ansible | centos2                    : ok=13   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | # /home/ansible/.ansible/collections/ansible_collections
Collection                    Version
----------------------------- -------

2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | community.general             7.2.0  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | # /usr/lib/python3.11/site-packages/ansible_collections
Collection                    Version
----------------------------- -------

2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | amazon.aws                    6.0.1  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | ansible.netcommon             5.1.1  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | ansible.posix                 1.5.4  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | ansible.utils                 2.10.3 
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | ansible.windows               1.14.0 
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | arista.eos                    6.0.1  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | awx.awx                       22.2.0 
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | azure.azcollection            1.15.0 
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | check_point.mgmt              5.0.0  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | chocolatey.chocolatey         1.4.0  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | cisco.aci                     2.6.0  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | cisco.asa                     4.0.0  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | cisco.dnac                    6.7.2  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | cisco.intersight              1.0.27 
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | cisco.ios                     4.5.0  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | cisco.iosxr                   5.0.2  
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | cisco.ise                     2.5.12 
2023-07-30 19:48:24,808 p=3225 u=ansible n=ansible | cisco.meraki                  2.15.1 
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | cisco.mso                     2.4.0  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | cisco.nso                     1.0.3  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | cisco.nxos                    4.3.0  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | cisco.ucs                     1.8.0  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | cloud.common                  2.1.3  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | cloudscale_ch.cloud           2.2.4  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.aws                 6.0.0  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.azure               2.0.0  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.ciscosmb            1.0.5  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.crypto              2.13.1 
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.digitalocean        1.23.0 
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.dns                 2.5.4  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.docker              3.4.6  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.fortios             1.0.0  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.general             7.0.1  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.google              1.0.0  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.grafana             1.5.4  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.hashi_vault         5.0.0  
2023-07-30 19:48:24,809 p=3225 u=ansible n=ansible | community.hrobot              1.8.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.libvirt             1.2.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.mongodb             1.5.2  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.mysql               3.7.1  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.network             5.0.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.okd                 2.3.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.postgresql          2.4.1  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.proxysql            1.5.1  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.rabbitmq            1.2.3  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.routeros            2.8.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.sap                 1.0.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.sap_libs            1.4.1  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.skydive             1.0.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.sops                1.6.1  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.vmware              3.6.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.windows             1.13.0 
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | community.zabbix              2.0.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | containers.podman             1.10.1 
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | cyberark.conjur               1.2.0  
2023-07-30 19:48:24,810 p=3225 u=ansible n=ansible | cyberark.pas                  1.0.19 
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | dellemc.enterprise_sonic      2.0.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | dellemc.openmanage            7.5.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | dellemc.powerflex             1.6.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | dellemc.unity                 1.6.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | f5networks.f5_modules         1.24.0 
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | fortinet.fortimanager         2.1.7  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | fortinet.fortios              2.2.3  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | frr.frr                       2.0.2  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | gluster.gluster               1.0.2  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | google.cloud                  1.1.3  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | grafana.grafana               2.0.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | hetzner.hcloud                1.11.0 
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | hpe.nimble                    1.1.4  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | ibm.qradar                    2.1.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | ibm.spectrum_virtualize       1.12.0 
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | infinidat.infinibox           1.3.12 
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | infoblox.nios_modules         1.5.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | inspur.ispim                  1.3.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | inspur.sm                     2.3.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | junipernetworks.junos         5.1.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | kubernetes.core               2.4.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | lowlydba.sqlserver            2.0.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | microsoft.ad                  1.1.0  
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | netapp.aws                    21.7.0 
2023-07-30 19:48:24,811 p=3225 u=ansible n=ansible | netapp.azure                  21.10.0
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | netapp.cloudmanager           21.22.0
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | netapp.elementsw              21.7.0 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | netapp.ontap                  22.6.0 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | netapp.storagegrid            21.11.1
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | netapp.um_info                21.8.0 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | netapp_eseries.santricity     1.4.0  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | netbox.netbox                 3.13.0 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | ngine_io.cloudstack           2.3.0  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | ngine_io.exoscale             1.0.0  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | ngine_io.vultr                1.1.3  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | openstack.cloud               2.1.0  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | openvswitch.openvswitch       2.1.1  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | ovirt.ovirt                   3.1.2  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | purestorage.flasharray        1.18.0 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | purestorage.flashblade        1.11.0 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | purestorage.fusion            1.4.2  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | sensu.sensu_go                1.13.2 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | servicenow.servicenow         1.0.6  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | splunk.es                     2.1.0  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | t_systems_mms.icinga_director 1.32.2 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | theforeman.foreman            3.10.0 
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | vmware.vmware_rest            2.3.1  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | vultr.cloud                   1.7.1  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | vyos.vyos                     4.0.2  
2023-07-30 19:48:24,812 p=3225 u=ansible n=ansible | wti.remote                    1.0.4  
2023-07-30 20:08:06,547 p=3314 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 20:08:06,552 p=3314 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 20:08:07,898 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:07,907 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 20:08:07,928 p=3314 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:08:07,934 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 20:08:08,871 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:08,874 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 20:08:11,352 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:11,355 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 20:08:11,963 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:11,966 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 20:08:12,263 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:12,266 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 20:08:12,273 p=3314 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:08:12,276 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 20:08:12,717 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:12,720 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 20:08:13,015 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:13,018 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 20:08:13,254 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:13,257 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 20:08:13,489 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:13,492 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 20:08:14,075 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:14,078 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 20:08:14,416 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:14,418 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 20:08:14,750 p=3314 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:08:14,753 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 20:08:15,100 p=3314 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:08:15,103 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Who am I] ****************************************************************************************************************
2023-07-30 20:08:15,385 p=3314 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:08:15,388 p=3314 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 20:08:15,397 p=3314 u=ansible n=ansible | ok: [centos2] => {
    "msg": "result: {'changed': True, 'stdout': 'root', 'stderr': '', 'rc': 0, 'cmd': ['whoami'], 'start': '2023-07-30 20:08:15.357682', 'end': '2023-07-30 20:08:15.361034', 'delta': '0:00:00.003352', 'msg': '', 'stdout_lines': ['root'], 'stderr_lines': [], 'failed': False}"
}
2023-07-30 20:08:15,400 p=3314 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 20:08:15,406 p=3314 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:08:15,419 p=3314 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 20:08:15,419 p=3314 u=ansible n=ansible | centos2                    : ok=16   changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-30 20:30:14,870 p=3687 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 20:30:14,874 p=3687 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 20:30:16,208 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:16,215 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 20:30:16,228 p=3687 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:30:16,232 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 20:30:17,320 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:17,324 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 20:30:18,946 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:18,950 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 20:30:19,631 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:19,635 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 20:30:19,994 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:19,998 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 20:30:20,009 p=3687 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:30:20,014 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 20:30:20,490 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:20,493 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 20:30:20,803 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:20,807 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 20:30:21,081 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:21,084 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 20:30:21,329 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:21,333 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 20:30:21,942 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:21,946 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 20:30:22,295 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:22,298 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 20:30:22,659 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:22,662 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 20:30:22,994 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:22,997 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 20:30:23,340 p=3687 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:30:23,343 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Check nexus download file was existed] ***********************************************************************************
2023-07-30 20:30:23,590 p=3687 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:30:23,593 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 20:30:59,654 p=3687 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:30:59,658 p=3687 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 20:30:59,665 p=3687 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:30:59,676 p=3687 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 20:30:59,676 p=3687 u=ansible n=ansible | centos2                    : ok=17   changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-30 20:32:07,581 p=4075 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 20:32:07,584 p=4075 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 20:32:08,906 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:08,913 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 20:32:08,929 p=4075 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:32:08,933 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 20:32:10,117 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:10,120 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 20:32:11,625 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:11,628 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 20:32:12,224 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:12,227 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 20:32:12,530 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:12,533 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 20:32:12,539 p=4075 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:32:12,544 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 20:32:12,993 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:12,996 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 20:32:13,296 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:13,299 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 20:32:13,538 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:13,541 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 20:32:13,777 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:13,781 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 20:32:14,366 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:14,369 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 20:32:14,732 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:14,736 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 20:32:15,114 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:15,117 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 20:32:15,456 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:15,458 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 20:32:15,747 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:15,750 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 20:32:16,217 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:32:16,220 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 20:32:16,227 p=4075 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:32:16,231 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 20:32:16,238 p=4075 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:32:16,251 p=4075 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 20:32:16,251 p=4075 u=ansible n=ansible | centos2                    : ok=16   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2023-07-30 20:36:47,158 p=4450 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 20:36:47,162 p=4450 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 20:36:48,565 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:48,573 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 20:36:48,588 p=4450 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:36:48,592 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 20:36:49,470 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:49,473 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 20:36:50,988 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:50,992 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 20:36:51,596 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:51,599 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 20:36:51,895 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:51,899 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 20:36:51,906 p=4450 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:36:51,909 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 20:36:52,355 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:52,358 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 20:36:52,650 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:52,653 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 20:36:52,889 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:52,892 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 20:36:53,128 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:53,131 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 20:36:53,716 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:53,719 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 20:36:54,063 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:54,066 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 20:36:54,441 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:54,444 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 20:36:54,774 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:54,777 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 20:36:55,067 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:55,071 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 20:36:55,507 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:55,510 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 20:36:55,517 p=4450 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:36:55,522 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **********************************************************************
2023-07-30 20:36:55,762 p=4450 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:36:55,766 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **********************************************************************************************
2023-07-30 20:36:55,772 p=4450 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:36:55,777 p=4450 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ***************************************************************************************************
2023-07-30 20:36:55,784 p=4450 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The conditional check 'nexus_file.stat.exists == false' failed. The error was: error while evaluating conditional (nexus_file.stat.exists == false): 'nexus_file' is undefined. 'nexus_file' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 115, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Rename SonarQube file\n  ^ here\n"}
2023-07-30 20:36:55,785 p=4450 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 20:36:55,785 p=4450 u=ansible n=ansible | centos2                    : ok=17   changed=0    unreachable=0    failed=1    skipped=3    rescued=0    ignored=0   
2023-07-30 20:38:54,914 p=4817 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 20:38:54,918 p=4817 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 20:38:56,308 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:38:56,317 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 20:38:56,339 p=4817 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:38:56,345 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 20:38:57,283 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:38:57,287 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 20:38:58,882 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:38:58,885 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 20:38:59,467 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:38:59,471 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 20:38:59,765 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:38:59,768 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 20:38:59,776 p=4817 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:38:59,779 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 20:39:00,256 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:00,259 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 20:39:00,556 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:00,559 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 20:39:00,797 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:00,800 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 20:39:01,038 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:01,041 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 20:39:01,642 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:01,645 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 20:39:01,995 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:01,998 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 20:39:02,330 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:02,333 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 20:39:02,657 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:02,660 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 20:39:02,951 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:02,954 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 20:39:03,388 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:03,391 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 20:39:03,398 p=4817 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:39:03,402 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **********************************************************************
2023-07-30 20:39:03,636 p=4817 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:39:03,639 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **********************************************************************************************
2023-07-30 20:39:06,440 p=4817 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:39:06,445 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ***************************************************************************************************
2023-07-30 20:39:06,946 p=4817 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:39:06,949 p=4817 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 20:39:06,956 p=4817 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:39:06,968 p=4817 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 20:39:06,968 p=4817 u=ansible n=ansible | centos2                    : ok=19   changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2023-07-30 20:41:50,713 p=5226 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 20:41:50,716 p=5226 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 20:41:52,150 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:52,157 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 20:41:52,172 p=5226 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:41:52,176 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 20:41:53,532 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:53,535 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 20:41:55,000 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:55,003 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 20:41:55,569 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:55,572 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 20:41:55,870 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:55,873 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 20:41:55,880 p=5226 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:41:55,884 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 20:41:56,328 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:56,331 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 20:41:56,627 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:56,630 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 20:41:56,868 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:56,871 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 20:41:57,106 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:57,108 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 20:41:57,687 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:57,691 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 20:41:58,030 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:58,033 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 20:41:58,384 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:58,387 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 20:41:58,726 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:58,729 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 20:41:59,035 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:59,038 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 20:41:59,274 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:41:59,277 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 20:42:35,643 p=5226 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:42:35,647 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **********************************************************************
2023-07-30 20:42:36,175 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:42:36,178 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **********************************************************************************************
2023-07-30 20:42:37,572 p=5226 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:42:37,576 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ***************************************************************************************************
2023-07-30 20:42:37,584 p=5226 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:42:37,588 p=5226 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 20:42:37,597 p=5226 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:42:37,610 p=5226 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 20:42:37,610 p=5226 u=ansible n=ansible | centos2                    : ok=19   changed=1    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2023-07-30 20:43:51,399 p=5660 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 20:43:51,403 p=5660 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 20:43:52,876 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:52,883 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 20:43:52,897 p=5660 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:43:52,901 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 20:43:54,239 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:54,243 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 20:43:55,736 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:55,739 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 20:43:56,319 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:56,322 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 20:43:56,639 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:56,643 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 20:43:56,649 p=5660 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:43:56,653 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 20:43:57,097 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:57,100 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 20:43:57,395 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:57,398 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 20:43:57,636 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:57,639 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 20:43:57,876 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:57,879 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 20:43:58,458 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:58,461 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 20:43:58,789 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:58,793 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 20:43:59,142 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:59,146 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 20:43:59,491 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:59,494 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 20:43:59,798 p=5660 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:43:59,802 p=5660 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 20:46:41,970 p=2439 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 20:46:52,459 p=2468 u=ansible n=ansible | PLAY [SonarQube playbook] ***********************************************************************************************************************
2023-07-30 20:46:52,466 p=2468 u=ansible n=ansible | TASK [Gathering Facts] **************************************************************************************************************************
2023-07-30 20:46:53,984 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:53,991 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ********************************************************************************
2023-07-30 20:46:54,011 p=2468 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:46:54,015 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ***********************************************************************************************************
2023-07-30 20:46:54,744 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:54,747 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ************************************************************************************
2023-07-30 20:46:56,254 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:56,260 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ***********************************************************************************
2023-07-30 20:46:56,919 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:56,923 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ***********************************************************************************
2023-07-30 20:46:57,302 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:57,308 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ****************************************************************************************
2023-07-30 20:46:57,317 p=2468 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:46:57,321 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *************************************************************************************
2023-07-30 20:46:57,895 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:57,898 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] ******************************************************************************
2023-07-30 20:46:58,244 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:58,247 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] **********************************************************
2023-07-30 20:46:58,513 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:58,516 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] **********************************************************
2023-07-30 20:46:58,787 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:58,791 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *****************************************************************************************************
2023-07-30 20:46:59,595 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:59,598 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] ******************************************************************************************
2023-07-30 20:46:59,929 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:46:59,932 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *********************************************************************
2023-07-30 20:47:00,367 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:47:00,372 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ****************************************************************
2023-07-30 20:47:00,750 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:47:00,753 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ****************************************************************************************
2023-07-30 20:47:01,125 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:47:01,129 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ****************************************************************************
2023-07-30 20:47:01,396 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:47:01,401 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***************************************************************************************************
2023-07-30 20:47:37,274 p=2468 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:47:37,277 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] *******************************************************************
2023-07-30 20:47:37,531 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:47:37,535 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] *******************************************************************************************
2023-07-30 20:47:38,790 p=2468 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:47:38,794 p=2468 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ************************************************************************************************
2023-07-30 20:47:39,248 p=2468 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": true, "cmd": ["mv", "/opt/sonarqube_dir/sonarqube-9.9.1.69595.zip"], "delta": "0:00:00.003399", "end": "2023-07-30 20:47:39.193301", "msg": "non-zero return code", "rc": 1, "start": "2023-07-30 20:47:39.189902", "stderr": "mv: missing destination file operand after '/opt/sonarqube_dir/sonarqube-9.9.1.69595.zip'\nTry 'mv --help' for more information.", "stderr_lines": ["mv: missing destination file operand after '/opt/sonarqube_dir/sonarqube-9.9.1.69595.zip'", "Try 'mv --help' for more information."], "stdout": "", "stdout_lines": []}
2023-07-30 20:47:39,253 p=2468 u=ansible n=ansible | PLAY RECAP **************************************************************************************************************************************
2023-07-30 20:47:39,254 p=2468 u=ansible n=ansible | centos2                    : ok=19   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 20:49:50,891 p=2926 u=ansible n=ansible | PLAY [SonarQube playbook] ***********************************************************************************************************************
2023-07-30 20:49:50,895 p=2926 u=ansible n=ansible | TASK [Gathering Facts] **************************************************************************************************************************
2023-07-30 20:49:52,228 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:52,237 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ********************************************************************************
2023-07-30 20:49:52,256 p=2926 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 20:49:52,261 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ***********************************************************************************************************
2023-07-30 20:49:53,115 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:53,120 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ************************************************************************************
2023-07-30 20:49:54,728 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:54,732 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ***********************************************************************************
2023-07-30 20:49:55,350 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:55,353 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ***********************************************************************************
2023-07-30 20:49:55,651 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:55,654 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ****************************************************************************************
2023-07-30 20:49:55,661 p=2926 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:49:55,664 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *************************************************************************************
2023-07-30 20:49:56,108 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:56,111 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] ******************************************************************************
2023-07-30 20:49:56,415 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:56,418 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] **********************************************************
2023-07-30 20:49:56,717 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:56,720 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] **********************************************************
2023-07-30 20:49:56,963 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:56,968 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *****************************************************************************************************
2023-07-30 20:49:57,721 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:57,724 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] ******************************************************************************************
2023-07-30 20:49:58,255 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:58,259 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *********************************************************************
2023-07-30 20:49:58,598 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:58,603 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ****************************************************************
2023-07-30 20:49:59,051 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:59,054 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ****************************************************************************************
2023-07-30 20:49:59,383 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:59,386 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ****************************************************************************
2023-07-30 20:49:59,818 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:49:59,822 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***************************************************************************************************
2023-07-30 20:49:59,828 p=2926 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:49:59,832 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] *******************************************************************
2023-07-30 20:50:00,140 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:50:00,145 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] *******************************************************************************************
2023-07-30 20:50:01,185 p=2926 u=ansible n=ansible | ok: [centos2]
2023-07-30 20:50:01,189 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ************************************************************************************************
2023-07-30 20:50:01,487 p=2926 u=ansible n=ansible | changed: [centos2]
2023-07-30 20:50:01,491 p=2926 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ********************************************************************************
2023-07-30 20:50:01,498 p=2926 u=ansible n=ansible | skipping: [centos2]
2023-07-30 20:50:01,512 p=2926 u=ansible n=ansible | PLAY RECAP **************************************************************************************************************************************
2023-07-30 20:50:01,512 p=2926 u=ansible n=ansible | centos2                    : ok=19   changed=1    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2023-07-30 21:11:59,405 p=3392 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 21:11:59,410 p=3392 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 21:12:00,758 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:00,765 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 21:12:00,780 p=3392 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 21:12:00,784 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 21:12:02,151 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:02,155 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 21:12:04,439 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:04,442 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 21:12:05,283 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:05,286 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 21:12:05,583 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:05,586 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 21:12:05,593 p=3392 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:12:05,597 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 21:12:06,042 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:06,045 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 21:12:06,346 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:06,349 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 21:12:06,590 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:06,593 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 21:12:06,832 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:06,836 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 21:12:07,412 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:07,415 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 21:12:07,753 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:07,766 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 21:12:08,117 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:08,122 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 21:12:08,473 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:08,476 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 21:12:08,762 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:08,765 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 21:12:08,999 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:09,002 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 21:12:44,666 p=3392 u=ansible n=ansible | changed: [centos2]
2023-07-30 21:12:44,670 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **********************************************************************
2023-07-30 21:12:44,919 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:44,922 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **********************************************************************************************
2023-07-30 21:12:45,964 p=3392 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:12:45,967 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ***************************************************************************************************
2023-07-30 21:12:46,260 p=3392 u=ansible n=ansible | changed: [centos2]
2023-07-30 21:12:46,264 p=3392 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 21:12:46,270 p=3392 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:12:46,283 p=3392 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 21:12:46,283 p=3392 u=ansible n=ansible | centos2                    : ok=20   changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-30 21:18:27,015 p=3876 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 21:18:27,019 p=3876 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 21:18:28,335 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:28,342 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 21:18:28,357 p=3876 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 21:18:28,361 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 21:18:29,544 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:29,547 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 21:18:31,028 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:31,031 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 21:18:31,616 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:31,620 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 21:18:31,915 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:31,919 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 21:18:31,926 p=3876 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:18:31,930 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 21:18:32,372 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:32,374 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 21:18:32,673 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:32,676 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 21:18:32,914 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:32,918 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 21:18:33,155 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:33,158 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 21:18:33,737 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:33,740 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 21:18:34,089 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:34,092 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 21:18:34,430 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:34,433 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 21:18:34,755 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:34,758 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 21:18:35,045 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:35,048 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 21:18:35,284 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:18:35,287 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 21:19:08,282 p=3876 u=ansible n=ansible | changed: [centos2]
2023-07-30 21:19:08,285 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **********************************************************************
2023-07-30 21:19:08,520 p=3876 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:19:08,525 p=3876 u=ansible n=ansible | TASK [install_sonarqube : debug] *******************************************************************************************************************
2023-07-30 21:19:08,534 p=3876 u=ansible n=ansible | ok: [centos2] => {
    "msg": "sonarqube_file: {'changed': False, 'stat': {'exists': False}, 'failed': False}"
}
2023-07-30 21:19:08,537 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **********************************************************************************************
2023-07-30 21:19:11,227 p=3876 u=ansible n=ansible | changed: [centos2]
2023-07-30 21:19:11,230 p=3876 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 21:19:11,237 p=3876 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:19:11,252 p=3876 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 21:19:11,252 p=3876 u=ansible n=ansible | centos2                    : ok=20   changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-30 21:24:45,593 p=4349 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 21:24:45,597 p=4349 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 21:24:46,890 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:46,897 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 21:24:46,911 p=4349 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 21:24:46,914 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 21:24:48,058 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:48,061 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 21:24:49,531 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:49,535 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 21:24:50,114 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:50,118 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 21:24:50,447 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:50,451 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 21:24:50,460 p=4349 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:24:50,464 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 21:24:50,912 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:50,915 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 21:24:51,210 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:51,213 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 21:24:51,446 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:51,450 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 21:24:51,686 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:51,689 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 21:24:52,357 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:52,360 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 21:24:52,720 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:52,723 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 21:24:53,062 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:53,065 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 21:24:53,390 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:53,393 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 21:24:53,685 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:53,689 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 21:24:54,120 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:54,125 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 21:24:54,135 p=4349 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:24:54,139 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **********************************************************************
2023-07-30 21:24:54,404 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:54,408 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **********************************************************************************************
2023-07-30 21:24:55,565 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:55,569 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *********************************************************************************
2023-07-30 21:24:55,893 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:55,897 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] *****************************************************************************************
2023-07-30 21:24:55,931 p=4349 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:24:55,935 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ***************************************************************************************************
2023-07-30 21:24:56,243 p=4349 u=ansible n=ansible | changed: [centos2]
2023-07-30 21:24:56,245 p=4349 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 21:24:56,252 p=4349 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:24:56,264 p=4349 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 21:24:56,265 p=4349 u=ansible n=ansible | centos2                    : ok=21   changed=1    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2023-07-30 21:25:37,296 p=4758 u=ansible n=ansible | PLAY [SonarQube playbook] **************************************************************************************************************************
2023-07-30 21:25:37,301 p=4758 u=ansible n=ansible | TASK [Gathering Facts] *****************************************************************************************************************************
2023-07-30 21:25:38,511 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:38,519 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***********************************************************************************
2023-07-30 21:25:38,535 p=4758 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 21:25:38,538 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **************************************************************************************************************
2023-07-30 21:25:39,538 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:39,542 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***************************************************************************************
2023-07-30 21:25:41,256 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:41,260 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **************************************************************************************
2023-07-30 21:25:41,950 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:41,953 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **************************************************************************************
2023-07-30 21:25:42,364 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:42,368 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *******************************************************************************************
2023-07-30 21:25:42,380 p=4758 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:25:42,385 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ****************************************************************************************
2023-07-30 21:25:42,886 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:42,889 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *********************************************************************************
2023-07-30 21:25:43,187 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:43,190 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *************************************************************
2023-07-30 21:25:43,426 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:43,429 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *************************************************************
2023-07-30 21:25:43,677 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:43,681 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ********************************************************************************************************
2023-07-30 21:25:44,274 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:44,277 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *********************************************************************************************
2023-07-30 21:25:44,627 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:44,630 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ************************************************************************
2023-07-30 21:25:44,970 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:44,973 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *******************************************************************
2023-07-30 21:25:45,302 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:45,306 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *******************************************************************************************
2023-07-30 21:25:45,604 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:45,608 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *******************************************************************************
2023-07-30 21:25:46,032 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:46,035 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ******************************************************************************************************
2023-07-30 21:25:46,043 p=4758 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:25:46,047 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **********************************************************************
2023-07-30 21:25:46,296 p=4758 u=ansible n=ansible | ok: [centos2]
2023-07-30 21:25:46,299 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **********************************************************************************************
2023-07-30 21:25:46,306 p=4758 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:25:46,311 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *********************************************************************************
2023-07-30 21:25:46,319 p=4758 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:25:46,323 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] *****************************************************************************************
2023-07-30 21:25:46,332 p=4758 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:25:46,336 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ***************************************************************************************************
2023-07-30 21:25:46,345 p=4758 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:25:46,349 p=4758 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***********************************************************************************
2023-07-30 21:25:46,356 p=4758 u=ansible n=ansible | skipping: [centos2]
2023-07-30 21:25:46,369 p=4758 u=ansible n=ansible | PLAY RECAP *****************************************************************************************************************************************
2023-07-30 21:25:46,370 p=4758 u=ansible n=ansible | centos2                    : ok=17   changed=0    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 22:15:26,097 p=5286 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:15:26,101 p=5286 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:15:27,564 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:27,571 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:15:27,589 p=5286 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:15:27,592 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:15:28,962 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:28,965 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:15:31,664 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:31,667 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:15:32,284 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:32,287 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:15:32,582 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:32,586 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:15:32,593 p=5286 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:15:32,596 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:15:33,059 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:33,062 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:15:33,364 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:33,367 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:15:33,614 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:33,618 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:15:33,919 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:33,922 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:15:34,592 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:34,595 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:15:35,080 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:35,084 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:15:35,484 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:35,488 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:15:35,902 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:35,905 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:15:36,211 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:36,214 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:15:37,034 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:37,037 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:15:37,048 p=5286 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:15:37,054 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:15:37,368 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:37,372 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:15:37,380 p=5286 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:15:37,384 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:15:37,394 p=5286 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:15:37,398 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:15:37,411 p=5286 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:15:37,415 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:15:37,427 p=5286 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:15:37,431 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:15:37,745 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:37,751 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:15:38,064 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:38,067 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:15:38,477 p=5286 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:15:38,477 p=5286 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:15:38,481 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:15:38,809 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:38,813 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:15:39,062 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:39,067 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:15:39,638 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:39,641 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:15:40,223 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:40,226 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:15:40,796 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:40,799 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:15:41,131 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:41,135 p=5286 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:15:41,146 p=5286 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service_status.status.ActiveState": "inactive"
}
2023-07-30 22:15:41,150 p=5286 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 22:15:41,159 p=5286 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:15:41,175 p=5286 u=ansible n=ansible | RUNNING HANDLER [Reload SonarQube systemd service] ******************************************************************************************
2023-07-30 22:15:41,585 p=5286 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:15:41,590 p=5286 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:15:41,591 p=5286 u=ansible n=ansible | centos2                    : ok=28   changed=9    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 22:22:33,983 p=5927 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:22:33,987 p=5927 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:22:35,521 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:35,529 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:22:35,545 p=5927 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:22:35,549 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:22:37,014 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:37,017 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:22:39,940 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:39,943 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:22:41,485 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:41,489 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:22:41,805 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:41,808 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:22:41,815 p=5927 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:22:41,818 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:22:42,291 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:42,294 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:22:42,598 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:42,601 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:22:42,839 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:42,843 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:22:43,080 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:43,083 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:22:44,272 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:44,275 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:22:44,679 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:44,682 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:22:45,031 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:45,034 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:22:45,386 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:45,390 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:22:45,693 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:45,696 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:22:46,262 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:46,265 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:22:46,273 p=5927 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:22:46,276 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:22:46,520 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:46,524 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:22:46,531 p=5927 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:22:46,534 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:22:46,541 p=5927 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:22:46,544 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:22:46,551 p=5927 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:22:46,555 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:22:46,562 p=5927 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:22:46,565 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:22:46,805 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:46,808 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:22:47,051 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:47,055 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:22:47,404 p=5927 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:22:47,404 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:47,407 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:22:47,684 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:47,687 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:22:47,926 p=5927 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:22:47,930 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:22:48,343 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:48,346 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:22:48,880 p=5927 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:22:48,883 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:22:49,207 p=5927 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:22:49,211 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:22:49,529 p=5927 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:22:49,534 p=5927 u=ansible n=ansible | TASK [install_sonarqube : Reboot the host if SonarQube is inactive] *************************************************************************
2023-07-30 22:22:49,542 p=5927 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The conditional check 'sonarqube_service_status.status.ActiveState == inactive' failed. The error was: error while evaluating conditional (sonarqube_service_status.status.ActiveState == inactive): 'inactive' is undefined. 'inactive' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 184, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Reboot the host if SonarQube is inactive\n  ^ here\n"}
2023-07-30 22:22:49,543 p=5927 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:22:49,543 p=5927 u=ansible n=ansible | centos2                    : ok=26   changed=3    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   
2023-07-30 22:23:25,061 p=6459 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:23:25,065 p=6459 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:23:26,219 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:26,226 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:23:26,243 p=6459 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:23:26,247 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:23:27,982 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:27,986 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:23:31,388 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:31,391 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:23:32,630 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:32,633 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:23:32,956 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:32,960 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:23:32,968 p=6459 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:23:32,972 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:23:33,480 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:33,483 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:23:33,784 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:33,787 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:23:34,064 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:34,068 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:23:34,339 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:34,342 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:23:35,367 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:35,370 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:23:35,733 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:35,737 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:23:36,105 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:36,108 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:23:36,464 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:36,467 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:23:36,780 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:36,783 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:23:37,354 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:37,358 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:23:37,365 p=6459 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:23:37,369 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:23:37,621 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:37,625 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:23:37,633 p=6459 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:23:37,638 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:23:37,646 p=6459 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:23:37,650 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:23:37,662 p=6459 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:23:37,667 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:23:37,680 p=6459 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:23:37,687 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:23:37,947 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:37,951 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:23:38,213 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:38,216 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:23:38,566 p=6459 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:23:38,566 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:38,570 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:23:39,027 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:39,032 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:23:39,361 p=6459 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:23:39,366 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:23:39,875 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:39,879 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:23:40,325 p=6459 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:23:40,328 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:23:40,652 p=6459 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:23:40,655 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:23:40,973 p=6459 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:23:40,976 p=6459 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:23:40,989 p=6459 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service_status": {
        "changed": true,
        "failed": false,
        "name": "sonarqube",
        "state": "started",
        "status": {
            "AccessSELinuxContext": "unconfined_u:object_r:systemd_unit_file_t:s0",
            "ActiveEnterTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "ActiveEnterTimestampMonotonic": "11224286077",
            "ActiveExitTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "ActiveExitTimestampMonotonic": "11224288080",
            "ActiveState": "failed",
            "After": "network.target syslog.target systemd-journald.socket basic.target system.slice sysinit.target",
            "AllowIsolate": "no",
            "AssertResult": "yes",
            "AssertTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "AssertTimestampMonotonic": "11224535311",
            "Before": "multi-user.target shutdown.target",
            "BlockIOAccounting": "no",
            "BlockIOWeight": "[not set]",
            "CPUAccounting": "yes",
            "CPUAffinityFromNUMA": "no",
            "CPUQuotaPerSecUSec": "infinity",
            "CPUQuotaPeriodUSec": "infinity",
            "CPUSchedulingPolicy": "0",
            "CPUSchedulingPriority": "0",
            "CPUSchedulingResetOnFork": "no",
            "CPUShares": "[not set]",
            "CPUUsageNSec": "2044000",
            "CPUWeight": "[not set]",
            "CacheDirectoryMode": "0755",
            "CanFreeze": "yes",
            "CanIsolate": "no",
            "CanReload": "no",
            "CanStart": "yes",
            "CanStop": "yes",
            "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore",
            "CleanResult": "success",
            "CollectMode": "inactive",
            "ConditionResult": "yes",
            "ConditionTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "ConditionTimestampMonotonic": "11224535308",
            "ConfigurationDirectoryMode": "0755",
            "Conflicts": "shutdown.target",
            "ControlGroupId": "0",
            "ControlPID": "0",
            "CoredumpFilter": "0x33",
            "DefaultDependencies": "yes",
            "DefaultMemoryLow": "0",
            "DefaultMemoryMin": "0",
            "Delegate": "no",
            "Description": "SonarQube service",
            "DevicePolicy": "auto",
            "DynamicUser": "no",
            "ExecMainCode": "1",
            "ExecMainExitTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "ExecMainExitTimestampMonotonic": "11224287951",
            "ExecMainPID": "47776",
            "ExecMainStartTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "ExecMainStartTimestampMonotonic": "11224285835",
            "ExecMainStatus": "217",
            "ExecStart": "{ path=/bin/nohup ; argv[]=/bin/nohup java -Xms32m -Xmx32m -Djava.net.preferIPv4Stack=true -jar /opt/sonarqube_dir/sonarqube/lib/sonar-application-9.9.1.69595.jar ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
            "ExecStartEx": "{ path=/bin/nohup ; argv[]=/bin/nohup java -Xms32m -Xmx32m -Djava.net.preferIPv4Stack=true -jar /opt/sonarqube_dir/sonarqube/lib/sonar-application-9.9.1.69595.jar ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
            "ExitType": "main",
            "FailureAction": "none",
            "FileDescriptorStoreMax": "0",
            "FinalKillSignal": "9",
            "FragmentPath": "/etc/systemd/system/sonarqube.service",
            "FreezerState": "running",
            "GID": "[not set]",
            "Group": "sonarqube",
            "GuessMainPID": "yes",
            "IOAccounting": "no",
            "IOReadBytes": "18446744073709551615",
            "IOReadOperations": "18446744073709551615",
            "IOSchedulingClass": "2",
            "IOSchedulingPriority": "4",
            "IOWeight": "[not set]",
            "IOWriteBytes": "18446744073709551615",
            "IOWriteOperations": "18446744073709551615",
            "IPAccounting": "no",
            "IPEgressBytes": "[no data]",
            "IPEgressPackets": "[no data]",
            "IPIngressBytes": "[no data]",
            "IPIngressPackets": "[no data]",
            "Id": "sonarqube.service",
            "IgnoreOnIsolate": "no",
            "IgnoreSIGPIPE": "yes",
            "InactiveEnterTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "InactiveEnterTimestampMonotonic": "11224535175",
            "InactiveExitTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "InactiveExitTimestampMonotonic": "11224288320",
            "InvocationID": "89174e184d494dbf89dc9047e6f420de",
            "JobRunningTimeoutUSec": "infinity",
            "JobTimeoutAction": "none",
            "JobTimeoutUSec": "infinity",
            "KeyringMode": "private",
            "KillMode": "control-group",
            "KillSignal": "15",
            "LimitAS": "infinity",
            "LimitASSoft": "infinity",
            "LimitCORE": "infinity",
            "LimitCORESoft": "0",
            "LimitCPU": "infinity",
            "LimitCPUSoft": "infinity",
            "LimitDATA": "infinity",
            "LimitDATASoft": "infinity",
            "LimitFSIZE": "infinity",
            "LimitFSIZESoft": "infinity",
            "LimitLOCKS": "infinity",
            "LimitLOCKSSoft": "infinity",
            "LimitMEMLOCK": "8388608",
            "LimitMEMLOCKSoft": "8388608",
            "LimitMSGQUEUE": "819200",
            "LimitMSGQUEUESoft": "819200",
            "LimitNICE": "0",
            "LimitNICESoft": "0",
            "LimitNOFILE": "65536",
            "LimitNOFILESoft": "65536",
            "LimitNPROC": "8192",
            "LimitNPROCSoft": "8192",
            "LimitRSS": "infinity",
            "LimitRSSSoft": "infinity",
            "LimitRTPRIO": "0",
            "LimitRTPRIOSoft": "0",
            "LimitRTTIME": "infinity",
            "LimitRTTIMESoft": "infinity",
            "LimitSIGPENDING": "6767",
            "LimitSIGPENDINGSoft": "6767",
            "LimitSTACK": "infinity",
            "LimitSTACKSoft": "8388608",
            "LoadState": "loaded",
            "LockPersonality": "no",
            "LogLevelMax": "-1",
            "LogRateLimitBurst": "0",
            "LogRateLimitIntervalUSec": "0",
            "LogsDirectoryMode": "0755",
            "MainPID": "0",
            "ManagedOOMMemoryPressure": "auto",
            "ManagedOOMMemoryPressureLimit": "0",
            "ManagedOOMPreference": "none",
            "ManagedOOMSwap": "auto",
            "MemoryAccounting": "yes",
            "MemoryAvailable": "infinity",
            "MemoryCurrent": "[not set]",
            "MemoryDenyWriteExecute": "no",
            "MemoryHigh": "infinity",
            "MemoryLimit": "infinity",
            "MemoryLow": "0",
            "MemoryMax": "infinity",
            "MemoryMin": "0",
            "MemorySwapMax": "infinity",
            "MountAPIVFS": "no",
            "NFileDescriptorStore": "0",
            "NRestarts": "5",
            "NUMAPolicy": "n/a",
            "Names": "sonarqube.service",
            "NeedDaemonReload": "no",
            "Nice": "0",
            "NoNewPrivileges": "no",
            "NonBlocking": "no",
            "NotifyAccess": "none",
            "OOMPolicy": "stop",
            "OOMScoreAdjust": "0",
            "OnFailureJobMode": "replace",
            "OnSuccessJobMode": "fail",
            "Perpetual": "no",
            "PrivateDevices": "no",
            "PrivateIPC": "no",
            "PrivateMounts": "no",
            "PrivateNetwork": "no",
            "PrivateTmp": "no",
            "PrivateUsers": "no",
            "ProcSubset": "all",
            "ProtectClock": "no",
            "ProtectControlGroups": "no",
            "ProtectHome": "no",
            "ProtectHostname": "no",
            "ProtectKernelLogs": "no",
            "ProtectKernelModules": "no",
            "ProtectKernelTunables": "no",
            "ProtectProc": "default",
            "ProtectSystem": "no",
            "RefuseManualStart": "no",
            "RefuseManualStop": "no",
            "ReloadResult": "success",
            "RemainAfterExit": "no",
            "RemoveIPC": "no",
            "Requires": "system.slice sysinit.target",
            "Restart": "always",
            "RestartKillSignal": "15",
            "RestartUSec": "100ms",
            "RestrictNamespaces": "no",
            "RestrictRealtime": "no",
            "RestrictSUIDSGID": "no",
            "Result": "exit-code",
            "RootDirectoryStartOnly": "no",
            "RuntimeDirectoryMode": "0755",
            "RuntimeDirectoryPreserve": "no",
            "RuntimeMaxUSec": "infinity",
            "RuntimeRandomizedExtraUSec": "0",
            "SameProcessGroup": "no",
            "SecureBits": "0",
            "SendSIGHUP": "no",
            "SendSIGKILL": "yes",
            "Slice": "system.slice",
            "StandardError": "inherit",
            "StandardInput": "null",
            "StandardOutput": "journal",
            "StartLimitAction": "none",
            "StartLimitBurst": "5",
            "StartLimitIntervalUSec": "10s",
            "StartupBlockIOWeight": "[not set]",
            "StartupCPUShares": "[not set]",
            "StartupCPUWeight": "[not set]",
            "StartupIOWeight": "[not set]",
            "StateChangeTimestamp": "Sun 2023-07-30 22:22:50 +07",
            "StateChangeTimestampMonotonic": "11224535740",
            "StateDirectoryMode": "0755",
            "StatusErrno": "0",
            "StopWhenUnneeded": "no",
            "SubState": "failed",
            "SuccessAction": "none",
            "SyslogFacility": "3",
            "SyslogLevel": "6",
            "SyslogLevelPrefix": "yes",
            "SyslogPriority": "30",
            "SystemCallErrorNumber": "2147483646",
            "TTYReset": "no",
            "TTYVHangup": "no",
            "TTYVTDisallocate": "no",
            "TasksAccounting": "yes",
            "TasksCurrent": "[not set]",
            "TasksMax": "10827",
            "TimeoutAbortUSec": "1min 30s",
            "TimeoutCleanUSec": "infinity",
            "TimeoutStartFailureMode": "terminate",
            "TimeoutStartUSec": "5s",
            "TimeoutStopFailureMode": "terminate",
            "TimeoutStopUSec": "1min 30s",
            "TimerSlackNSec": "50000",
            "Transient": "no",
            "Type": "simple",
            "UID": "[not set]",
            "UMask": "0022",
            "UnitFilePreset": "disabled",
            "UnitFileState": "enabled",
            "User": "sonarqube",
            "UtmpMode": "init",
            "WantedBy": "multi-user.target",
            "WatchdogSignal": "6",
            "WatchdogTimestampMonotonic": "0",
            "WatchdogUSec": "0"
        }
    }
}
2023-07-30 22:23:40,992 p=6459 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:23:41,001 p=6459 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service_status.status.ActiveState": "failed"
}
2023-07-30 22:23:41,005 p=6459 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 22:23:41,014 p=6459 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:23:41,028 p=6459 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:23:41,028 p=6459 u=ansible n=ansible | centos2                    : ok=28   changed=3    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 22:24:10,557 p=6989 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:24:10,561 p=6989 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:24:11,645 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:11,653 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:24:11,670 p=6989 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:24:11,673 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:24:12,962 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:12,965 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:24:15,975 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:15,978 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:24:16,685 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:16,688 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:24:16,999 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:17,002 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:24:17,008 p=6989 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:24:17,013 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:24:17,473 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:17,477 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:24:17,780 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:17,784 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:24:18,020 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:18,023 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:24:18,263 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:18,266 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:24:19,393 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:19,396 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:24:19,741 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:19,744 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:24:20,078 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:20,081 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:24:20,423 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:20,426 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:24:20,726 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:20,729 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:24:21,300 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:21,303 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:24:21,310 p=6989 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:24:21,314 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:24:21,574 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:21,577 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:24:21,584 p=6989 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:24:21,589 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:24:21,596 p=6989 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:24:21,601 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:24:21,609 p=6989 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:24:21,612 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:24:21,622 p=6989 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:24:21,625 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:24:21,868 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:21,871 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:24:22,117 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:22,120 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:24:22,468 p=6989 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:24:22,468 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:22,472 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:24:22,743 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:22,746 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:24:22,990 p=6989 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:24:22,993 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:24:23,402 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:23,405 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:24:23,896 p=6989 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:24:23,899 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:24:24,222 p=6989 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:24:24,225 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:24:24,544 p=6989 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:24:24,547 p=6989 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:24:24,560 p=6989 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service_status.status": {
        "AccessSELinuxContext": "unconfined_u:object_r:systemd_unit_file_t:s0",
        "ActiveEnterTimestamp": "Sun 2023-07-30 22:23:41 +07",
        "ActiveEnterTimestampMonotonic": "11275787532",
        "ActiveExitTimestamp": "Sun 2023-07-30 22:23:41 +07",
        "ActiveExitTimestampMonotonic": "11275792804",
        "ActiveState": "failed",
        "After": "syslog.target sysinit.target network.target basic.target systemd-journald.socket system.slice",
        "AllowIsolate": "no",
        "AssertResult": "yes",
        "AssertTimestamp": "Sun 2023-07-30 22:23:42 +07",
        "AssertTimestampMonotonic": "11276034337",
        "Before": "shutdown.target multi-user.target",
        "BlockIOAccounting": "no",
        "BlockIOWeight": "[not set]",
        "CPUAccounting": "yes",
        "CPUAffinityFromNUMA": "no",
        "CPUQuotaPerSecUSec": "infinity",
        "CPUQuotaPeriodUSec": "infinity",
        "CPUSchedulingPolicy": "0",
        "CPUSchedulingPriority": "0",
        "CPUSchedulingResetOnFork": "no",
        "CPUShares": "[not set]",
        "CPUUsageNSec": "4609000",
        "CPUWeight": "[not set]",
        "CacheDirectoryMode": "0755",
        "CanFreeze": "yes",
        "CanIsolate": "no",
        "CanReload": "no",
        "CanStart": "yes",
        "CanStop": "yes",
        "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore",
        "CleanResult": "success",
        "CollectMode": "inactive",
        "ConditionResult": "yes",
        "ConditionTimestamp": "Sun 2023-07-30 22:23:42 +07",
        "ConditionTimestampMonotonic": "11276034332",
        "ConfigurationDirectoryMode": "0755",
        "Conflicts": "shutdown.target",
        "ControlGroupId": "0",
        "ControlPID": "0",
        "CoredumpFilter": "0x33",
        "DefaultDependencies": "yes",
        "DefaultMemoryLow": "0",
        "DefaultMemoryMin": "0",
        "Delegate": "no",
        "Description": "SonarQube service",
        "DevicePolicy": "auto",
        "DynamicUser": "no",
        "ExecMainCode": "1",
        "ExecMainExitTimestamp": "Sun 2023-07-30 22:23:41 +07",
        "ExecMainExitTimestampMonotonic": "11275792167",
        "ExecMainPID": "51295",
        "ExecMainStartTimestamp": "Sun 2023-07-30 22:23:41 +07",
        "ExecMainStartTimestampMonotonic": "11275787067",
        "ExecMainStatus": "217",
        "ExecStart": "{ path=/bin/nohup ; argv[]=/bin/nohup java -Xms32m -Xmx32m -Djava.net.preferIPv4Stack=true -jar /opt/sonarqube_dir/sonarqube/lib/sonar-application-9.9.1.69595.jar ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExecStartEx": "{ path=/bin/nohup ; argv[]=/bin/nohup java -Xms32m -Xmx32m -Djava.net.preferIPv4Stack=true -jar /opt/sonarqube_dir/sonarqube/lib/sonar-application-9.9.1.69595.jar ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }",
        "ExitType": "main",
        "FailureAction": "none",
        "FileDescriptorStoreMax": "0",
        "FinalKillSignal": "9",
        "FragmentPath": "/etc/systemd/system/sonarqube.service",
        "FreezerState": "running",
        "GID": "[not set]",
        "Group": "sonarqube",
        "GuessMainPID": "yes",
        "IOAccounting": "no",
        "IOReadBytes": "18446744073709551615",
        "IOReadOperations": "18446744073709551615",
        "IOSchedulingClass": "2",
        "IOSchedulingPriority": "4",
        "IOWeight": "[not set]",
        "IOWriteBytes": "18446744073709551615",
        "IOWriteOperations": "18446744073709551615",
        "IPAccounting": "no",
        "IPEgressBytes": "[no data]",
        "IPEgressPackets": "[no data]",
        "IPIngressBytes": "[no data]",
        "IPIngressPackets": "[no data]",
        "Id": "sonarqube.service",
        "IgnoreOnIsolate": "no",
        "IgnoreSIGPIPE": "yes",
        "InactiveEnterTimestamp": "Sun 2023-07-30 22:23:42 +07",
        "InactiveEnterTimestampMonotonic": "11276034153",
        "InactiveExitTimestamp": "Sun 2023-07-30 22:23:41 +07",
        "InactiveExitTimestampMonotonic": "11275793580",
        "InvocationID": "2f2a500047144c868e8ba225bfe0002b",
        "JobRunningTimeoutUSec": "infinity",
        "JobTimeoutAction": "none",
        "JobTimeoutUSec": "infinity",
        "KeyringMode": "private",
        "KillMode": "control-group",
        "KillSignal": "15",
        "LimitAS": "infinity",
        "LimitASSoft": "infinity",
        "LimitCORE": "infinity",
        "LimitCORESoft": "0",
        "LimitCPU": "infinity",
        "LimitCPUSoft": "infinity",
        "LimitDATA": "infinity",
        "LimitDATASoft": "infinity",
        "LimitFSIZE": "infinity",
        "LimitFSIZESoft": "infinity",
        "LimitLOCKS": "infinity",
        "LimitLOCKSSoft": "infinity",
        "LimitMEMLOCK": "8388608",
        "LimitMEMLOCKSoft": "8388608",
        "LimitMSGQUEUE": "819200",
        "LimitMSGQUEUESoft": "819200",
        "LimitNICE": "0",
        "LimitNICESoft": "0",
        "LimitNOFILE": "65536",
        "LimitNOFILESoft": "65536",
        "LimitNPROC": "8192",
        "LimitNPROCSoft": "8192",
        "LimitRSS": "infinity",
        "LimitRSSSoft": "infinity",
        "LimitRTPRIO": "0",
        "LimitRTPRIOSoft": "0",
        "LimitRTTIME": "infinity",
        "LimitRTTIMESoft": "infinity",
        "LimitSIGPENDING": "6767",
        "LimitSIGPENDINGSoft": "6767",
        "LimitSTACK": "infinity",
        "LimitSTACKSoft": "8388608",
        "LoadState": "loaded",
        "LockPersonality": "no",
        "LogLevelMax": "-1",
        "LogRateLimitBurst": "0",
        "LogRateLimitIntervalUSec": "0",
        "LogsDirectoryMode": "0755",
        "MainPID": "0",
        "ManagedOOMMemoryPressure": "auto",
        "ManagedOOMMemoryPressureLimit": "0",
        "ManagedOOMPreference": "none",
        "ManagedOOMSwap": "auto",
        "MemoryAccounting": "yes",
        "MemoryAvailable": "infinity",
        "MemoryCurrent": "[not set]",
        "MemoryDenyWriteExecute": "no",
        "MemoryHigh": "infinity",
        "MemoryLimit": "infinity",
        "MemoryLow": "0",
        "MemoryMax": "infinity",
        "MemoryMin": "0",
        "MemorySwapMax": "infinity",
        "MountAPIVFS": "no",
        "NFileDescriptorStore": "0",
        "NRestarts": "5",
        "NUMAPolicy": "n/a",
        "Names": "sonarqube.service",
        "NeedDaemonReload": "no",
        "Nice": "0",
        "NoNewPrivileges": "no",
        "NonBlocking": "no",
        "NotifyAccess": "none",
        "OOMPolicy": "stop",
        "OOMScoreAdjust": "0",
        "OnFailureJobMode": "replace",
        "OnSuccessJobMode": "fail",
        "Perpetual": "no",
        "PrivateDevices": "no",
        "PrivateIPC": "no",
        "PrivateMounts": "no",
        "PrivateNetwork": "no",
        "PrivateTmp": "no",
        "PrivateUsers": "no",
        "ProcSubset": "all",
        "ProtectClock": "no",
        "ProtectControlGroups": "no",
        "ProtectHome": "no",
        "ProtectHostname": "no",
        "ProtectKernelLogs": "no",
        "ProtectKernelModules": "no",
        "ProtectKernelTunables": "no",
        "ProtectProc": "default",
        "ProtectSystem": "no",
        "RefuseManualStart": "no",
        "RefuseManualStop": "no",
        "ReloadResult": "success",
        "RemainAfterExit": "no",
        "RemoveIPC": "no",
        "Requires": "system.slice sysinit.target",
        "Restart": "always",
        "RestartKillSignal": "15",
        "RestartUSec": "100ms",
        "RestrictNamespaces": "no",
        "RestrictRealtime": "no",
        "RestrictSUIDSGID": "no",
        "Result": "exit-code",
        "RootDirectoryStartOnly": "no",
        "RuntimeDirectoryMode": "0755",
        "RuntimeDirectoryPreserve": "no",
        "RuntimeMaxUSec": "infinity",
        "RuntimeRandomizedExtraUSec": "0",
        "SameProcessGroup": "no",
        "SecureBits": "0",
        "SendSIGHUP": "no",
        "SendSIGKILL": "yes",
        "Slice": "system.slice",
        "StandardError": "inherit",
        "StandardInput": "null",
        "StandardOutput": "journal",
        "StartLimitAction": "none",
        "StartLimitBurst": "5",
        "StartLimitIntervalUSec": "10s",
        "StartupBlockIOWeight": "[not set]",
        "StartupCPUShares": "[not set]",
        "StartupCPUWeight": "[not set]",
        "StartupIOWeight": "[not set]",
        "StateChangeTimestamp": "Sun 2023-07-30 22:23:42 +07",
        "StateChangeTimestampMonotonic": "11276034522",
        "StateDirectoryMode": "0755",
        "StatusErrno": "0",
        "StopWhenUnneeded": "no",
        "SubState": "failed",
        "SuccessAction": "none",
        "SyslogFacility": "3",
        "SyslogLevel": "6",
        "SyslogLevelPrefix": "yes",
        "SyslogPriority": "30",
        "SystemCallErrorNumber": "2147483646",
        "TTYReset": "no",
        "TTYVHangup": "no",
        "TTYVTDisallocate": "no",
        "TasksAccounting": "yes",
        "TasksCurrent": "[not set]",
        "TasksMax": "10827",
        "TimeoutAbortUSec": "1min 30s",
        "TimeoutCleanUSec": "infinity",
        "TimeoutStartFailureMode": "terminate",
        "TimeoutStartUSec": "5s",
        "TimeoutStopFailureMode": "terminate",
        "TimeoutStopUSec": "1min 30s",
        "TimerSlackNSec": "50000",
        "Transient": "no",
        "Type": "simple",
        "UID": "[not set]",
        "UMask": "0022",
        "UnitFilePreset": "disabled",
        "UnitFileState": "enabled",
        "User": "sonarqube",
        "UtmpMode": "init",
        "WantedBy": "multi-user.target",
        "WatchdogSignal": "6",
        "WatchdogTimestampMonotonic": "0",
        "WatchdogUSec": "0"
    }
}
2023-07-30 22:24:24,563 p=6989 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:24:24,574 p=6989 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service_status.status.ActiveState": "failed"
}
2023-07-30 22:24:24,578 p=6989 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 22:24:24,586 p=6989 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:24:24,600 p=6989 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:24:24,600 p=6989 u=ansible n=ansible | centos2                    : ok=28   changed=3    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 22:27:33,028 p=7571 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:27:33,032 p=7571 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:27:34,314 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:34,321 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:27:34,338 p=7571 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:27:34,342 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:27:35,807 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:35,811 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:27:38,239 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:38,243 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:27:39,493 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:39,496 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:27:39,809 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:39,812 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:27:39,819 p=7571 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:27:39,822 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:27:40,283 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:40,286 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:27:40,589 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:40,592 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:27:40,832 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:40,836 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:27:41,081 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:41,084 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:27:42,040 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:42,043 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:27:42,440 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:42,444 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:27:42,809 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:42,812 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:27:43,160 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:43,163 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:27:43,521 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:43,524 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:27:44,198 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:44,202 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:27:44,210 p=7571 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:27:44,214 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:27:44,474 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:44,477 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:27:44,485 p=7571 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:27:44,489 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:27:44,496 p=7571 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:27:44,500 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:27:44,507 p=7571 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:27:44,511 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:27:44,518 p=7571 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:27:44,522 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:27:44,776 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:44,779 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:27:45,026 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:45,029 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:27:45,374 p=7571 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:27:45,374 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:45,377 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:27:45,650 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:45,653 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:27:45,894 p=7571 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:27:45,898 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:27:46,314 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:46,316 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:27:46,749 p=7571 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:27:46,753 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:27:47,085 p=7571 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:27:47,089 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:27:47,405 p=7571 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:27:47,409 p=7571 u=ansible n=ansible | TASK [install_sonarqube : Reboot the host if SonarQube is inactive] *************************************************************************
2023-07-30 22:27:47,416 p=7571 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "The conditional check 'sonarqube_service_status.status.ActiveState != active' failed. The error was: error while evaluating conditional (sonarqube_service_status.status.ActiveState != active): 'active' is undefined. 'active' is undefined\n\nThe error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 184, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Reboot the host if SonarQube is inactive\n  ^ here\n"}
2023-07-30 22:27:47,417 p=7571 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:27:47,417 p=7571 u=ansible n=ansible | centos2                    : ok=26   changed=3    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   
2023-07-30 22:28:57,802 p=8108 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:28:57,806 p=8108 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:28:59,153 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:28:59,162 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:28:59,186 p=8108 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:28:59,192 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:29:00,640 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:00,644 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:29:02,803 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:02,806 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:29:03,562 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:03,565 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:29:03,866 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:03,869 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:29:03,875 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:29:03,879 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:29:04,340 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:04,343 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:29:04,707 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:04,712 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:29:04,987 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:04,991 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:29:05,230 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:05,233 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:29:06,263 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:06,266 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:29:06,621 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:06,624 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:29:06,980 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:06,983 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:29:07,330 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:07,333 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:29:07,640 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:07,643 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:29:08,205 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:08,209 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:29:08,215 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:29:08,218 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:29:08,457 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:08,461 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:29:08,467 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:29:08,472 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:29:08,480 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:29:08,484 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:29:08,492 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:29:08,495 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:29:08,504 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:29:08,508 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:29:08,747 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:08,750 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:29:08,994 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:08,997 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:29:09,344 p=8108 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:29:09,344 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:09,347 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:29:09,625 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:09,629 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:29:09,869 p=8108 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:29:09,872 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:29:10,289 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:10,292 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:29:10,738 p=8108 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:29:10,741 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:29:11,064 p=8108 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:29:11,067 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:29:11,385 p=8108 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:29:11,389 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Reboot the host if SonarQube is inactive] *************************************************************************
2023-07-30 22:29:42,736 p=8108 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:29:42,742 p=8108 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:29:42,764 p=8108 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service_status.status.ActiveState": "failed"
}
2023-07-30 22:29:42,776 p=8108 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 22:29:42,800 p=8108 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:29:42,841 p=8108 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:29:42,842 p=8108 u=ansible n=ansible | centos2                    : ok=28   changed=4    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 22:32:25,434 p=8744 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:32:25,438 p=8744 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:32:26,986 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:26,993 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:32:27,009 p=8744 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:32:27,012 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:32:28,961 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:28,964 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:32:30,857 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:30,860 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:32:31,613 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:31,619 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:32:32,026 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:32,030 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:32:32,038 p=8744 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:32:32,041 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:32:32,669 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:32,673 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:32:33,032 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:33,036 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:32:33,381 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:33,384 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:32:33,668 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:33,672 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:32:34,470 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:34,474 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:32:34,895 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:34,898 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:32:35,266 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:35,270 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:32:35,662 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:35,665 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:32:36,008 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:36,011 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:32:36,704 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:36,707 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:32:36,714 p=8744 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:32:36,717 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:32:36,974 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:36,980 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:32:36,989 p=8744 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:32:36,993 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:32:37,000 p=8744 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:32:37,006 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:32:37,016 p=8744 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:32:37,021 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:32:37,028 p=8744 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:32:37,032 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:32:37,293 p=8744 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:32:37,296 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:32:37,552 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:37,555 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:32:37,925 p=8744 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:32:37,925 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:37,928 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:32:38,218 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:38,221 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:32:38,473 p=8744 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:32:38,477 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:32:38,908 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:38,912 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:32:39,458 p=8744 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:32:39,461 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:32:39,801 p=8744 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:32:39,804 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:32:40,134 p=8744 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:32:40,138 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Reboot the host if SonarQube is inactive] *************************************************************************
2023-07-30 22:33:11,108 p=8744 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:33:11,112 p=8744 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:33:11,123 p=8744 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-30 22:33:11,127 p=8744 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 22:33:11,140 p=8744 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:33:11,158 p=8744 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:33:11,159 p=8744 u=ansible n=ansible | centos2                    : ok=28   changed=5    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 22:38:44,776 p=9388 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:38:44,780 p=9388 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:38:46,184 p=9388 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:46,191 p=9388 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:38:46,209 p=9388 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:38:46,212 p=9388 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:38:47,833 p=9388 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:47,836 p=9388 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:38:49,518 p=9388 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 22:38:53,061 p=9525 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:38:53,065 p=9525 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:38:54,167 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:54,174 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:38:54,190 p=9525 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:38:54,194 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:38:54,883 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:54,886 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:38:56,544 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:56,547 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:38:57,128 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:57,131 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:38:57,429 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:57,432 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:38:57,439 p=9525 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:38:57,444 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:38:57,899 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:57,902 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:38:58,196 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:58,200 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:38:58,436 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:58,439 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:38:58,675 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:58,678 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:38:59,255 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:59,258 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:38:59,622 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:59,626 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:38:59,978 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:38:59,981 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:39:00,335 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:00,339 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:39:00,637 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:00,640 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:39:01,266 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:01,269 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:39:01,276 p=9525 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:39:01,280 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:39:01,522 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:01,525 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:39:01,532 p=9525 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:39:01,536 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:39:01,545 p=9525 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:39:01,549 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:39:01,556 p=9525 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:39:01,560 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:39:01,568 p=9525 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:39:01,572 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:39:01,809 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:01,812 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:39:02,053 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:02,057 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:39:02,466 p=9525 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:39:02,466 p=9525 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:39:02,469 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:39:02,743 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:02,746 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:39:02,988 p=9525 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:39:02,991 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:39:03,401 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:03,404 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:39:03,894 p=9525 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:39:03,897 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:39:04,214 p=9525 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:39:04,217 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:39:04,534 p=9525 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:39:04,537 p=9525 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:39:04,547 p=9525 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-30 22:39:04,551 p=9525 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 22:39:04,560 p=9525 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:39:04,573 p=9525 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:39:04,573 p=9525 u=ansible n=ansible | centos2                    : ok=27   changed=4    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 22:55:49,818 p=10052 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 22:55:49,822 p=10052 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 22:55:51,265 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:51,272 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 22:55:51,289 p=10052 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 22:55:51,293 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 22:55:53,062 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:53,065 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 22:55:55,701 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:55,705 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 22:55:56,346 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:56,349 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 22:55:56,645 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:56,648 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 22:55:56,656 p=10052 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:55:56,659 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 22:55:57,128 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:57,131 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 22:55:57,416 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:57,419 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 22:55:57,656 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:57,660 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 22:55:57,897 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:57,900 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 22:55:58,504 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:58,507 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 22:55:58,913 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:58,916 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 22:55:59,278 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:59,281 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 22:55:59,647 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:59,650 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 22:55:59,954 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:55:59,957 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 22:56:00,625 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:56:00,628 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 22:56:00,635 p=10052 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:56:00,638 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 22:56:00,885 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:56:00,889 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 22:56:00,896 p=10052 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:56:00,900 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 22:56:00,907 p=10052 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:56:00,911 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 22:56:00,918 p=10052 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:56:00,922 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 22:56:00,930 p=10052 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:56:00,933 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 22:56:01,175 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:56:01,178 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:56:01,425 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:56:01,428 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 22:56:01,674 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:56:01,677 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit jdbc parameter] ********************************************************************************
2023-07-30 22:56:01,912 p=10052 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:56:01,915 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit host parameter] ********************************************************************************
2023-07-30 22:56:02,149 p=10052 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:56:02,153 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit port parameter] ********************************************************************************
2023-07-30 22:56:02,389 p=10052 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:56:02,392 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 22:56:02,739 p=10052 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 22:56:02,740 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:56:02,743 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 22:56:03,065 p=10052 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:56:03,068 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 22:56:03,308 p=10052 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:56:03,312 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 22:56:03,779 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:56:03,782 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 22:56:04,341 p=10052 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:56:04,345 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 22:56:04,672 p=10052 u=ansible n=ansible | ok: [centos2]
2023-07-30 22:56:04,675 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 22:56:04,996 p=10052 u=ansible n=ansible | changed: [centos2]
2023-07-30 22:56:05,000 p=10052 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 22:56:05,011 p=10052 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-30 22:56:05,014 p=10052 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 22:56:05,022 p=10052 u=ansible n=ansible | skipping: [centos2]
2023-07-30 22:56:05,035 p=10052 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 22:56:05,035 p=10052 u=ansible n=ansible | centos2                    : ok=31   changed=7    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 23:06:22,351 p=10700 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:06:22,355 p=10700 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:06:23,653 p=10700 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:06:23,661 p=10700 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:06:23,699 p=10700 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:06:23,703 p=10700 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:06:25,041 p=10700 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:06:25,044 p=10700 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:06:25,754 p=10700 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:06:25,757 p=10700 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-30 23:06:26,207 p=10700 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Needed to install the alternative, but unable to do so as we are missing the link"}
2023-07-30 23:06:26,208 p=10700 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:06:26,208 p=10700 u=ansible n=ansible | centos2                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | # /home/ansible/.ansible/collections/ansible_collections
Collection                    Version
----------------------------- -------

2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | community.general             7.2.0  
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | # /usr/lib/python3.11/site-packages/ansible_collections
Collection                    Version
----------------------------- -------

2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | amazon.aws                    6.0.1  
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | ansible.netcommon             5.1.1  
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | ansible.posix                 1.5.4  
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | ansible.utils                 2.10.3 
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | ansible.windows               1.14.0 
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | arista.eos                    6.0.1  
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | awx.awx                       22.2.0 
2023-07-30 23:06:51,423 p=10828 u=ansible n=ansible | azure.azcollection            1.15.0 
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | check_point.mgmt              5.0.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | chocolatey.chocolatey         1.4.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.aci                     2.6.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.asa                     4.0.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.dnac                    6.7.2  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.intersight              1.0.27 
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.ios                     4.5.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.iosxr                   5.0.2  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.ise                     2.5.12 
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.meraki                  2.15.1 
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.mso                     2.4.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.nso                     1.0.3  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.nxos                    4.3.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cisco.ucs                     1.8.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cloud.common                  2.1.3  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | cloudscale_ch.cloud           2.2.4  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.aws                 6.0.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.azure               2.0.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.ciscosmb            1.0.5  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.crypto              2.13.1 
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.digitalocean        1.23.0 
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.dns                 2.5.4  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.docker              3.4.6  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.fortios             1.0.0  
2023-07-30 23:06:51,424 p=10828 u=ansible n=ansible | community.general             7.0.1  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.google              1.0.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.grafana             1.5.4  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.hashi_vault         5.0.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.hrobot              1.8.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.libvirt             1.2.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.mongodb             1.5.2  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.mysql               3.7.1  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.network             5.0.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.okd                 2.3.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.postgresql          2.4.1  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.proxysql            1.5.1  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.rabbitmq            1.2.3  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.routeros            2.8.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.sap                 1.0.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.sap_libs            1.4.1  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.skydive             1.0.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.sops                1.6.1  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.vmware              3.6.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.windows             1.13.0 
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | community.zabbix              2.0.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | containers.podman             1.10.1 
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | cyberark.conjur               1.2.0  
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | cyberark.pas                  1.0.19 
2023-07-30 23:06:51,425 p=10828 u=ansible n=ansible | dellemc.enterprise_sonic      2.0.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | dellemc.openmanage            7.5.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | dellemc.powerflex             1.6.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | dellemc.unity                 1.6.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | f5networks.f5_modules         1.24.0 
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | fortinet.fortimanager         2.1.7  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | fortinet.fortios              2.2.3  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | frr.frr                       2.0.2  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | gluster.gluster               1.0.2  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | google.cloud                  1.1.3  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | grafana.grafana               2.0.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | hetzner.hcloud                1.11.0 
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | hpe.nimble                    1.1.4  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | ibm.qradar                    2.1.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | ibm.spectrum_virtualize       1.12.0 
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | infinidat.infinibox           1.3.12 
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | infoblox.nios_modules         1.5.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | inspur.ispim                  1.3.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | inspur.sm                     2.3.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | junipernetworks.junos         5.1.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | kubernetes.core               2.4.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | lowlydba.sqlserver            2.0.0  
2023-07-30 23:06:51,426 p=10828 u=ansible n=ansible | microsoft.ad                  1.1.0  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netapp.aws                    21.7.0 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netapp.azure                  21.10.0
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netapp.cloudmanager           21.22.0
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netapp.elementsw              21.7.0 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netapp.ontap                  22.6.0 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netapp.storagegrid            21.11.1
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netapp.um_info                21.8.0 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netapp_eseries.santricity     1.4.0  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | netbox.netbox                 3.13.0 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | ngine_io.cloudstack           2.3.0  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | ngine_io.exoscale             1.0.0  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | ngine_io.vultr                1.1.3  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | openstack.cloud               2.1.0  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | openvswitch.openvswitch       2.1.1  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | ovirt.ovirt                   3.1.2  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | purestorage.flasharray        1.18.0 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | purestorage.flashblade        1.11.0 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | purestorage.fusion            1.4.2  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | sensu.sensu_go                1.13.2 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | servicenow.servicenow         1.0.6  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | splunk.es                     2.1.0  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | t_systems_mms.icinga_director 1.32.2 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | theforeman.foreman            3.10.0 
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | vmware.vmware_rest            2.3.1  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | vultr.cloud                   1.7.1  
2023-07-30 23:06:51,427 p=10828 u=ansible n=ansible | vyos.vyos                     4.0.2  
2023-07-30 23:06:51,428 p=10828 u=ansible n=ansible | wti.remote                    1.0.4  
2023-07-30 23:07:04,696 p=10880 u=ansible n=ansible | Starting galaxy collection install process
2023-07-30 23:07:04,717 p=10880 u=ansible n=ansible | Nothing to do. All requested collections are already installed. If you want to reinstall them, consider using `--force`.
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | # /home/ansible/.ansible/collections/ansible_collections
Collection                    Version
----------------------------- -------

2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | community.general             7.2.0  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | # /usr/lib/python3.11/site-packages/ansible_collections
Collection                    Version
----------------------------- -------

2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | amazon.aws                    6.0.1  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | ansible.netcommon             5.1.1  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | ansible.posix                 1.5.4  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | ansible.utils                 2.10.3 
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | ansible.windows               1.14.0 
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | arista.eos                    6.0.1  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | awx.awx                       22.2.0 
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | azure.azcollection            1.15.0 
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | check_point.mgmt              5.0.0  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | chocolatey.chocolatey         1.4.0  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | cisco.aci                     2.6.0  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | cisco.asa                     4.0.0  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | cisco.dnac                    6.7.2  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | cisco.intersight              1.0.27 
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | cisco.ios                     4.5.0  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | cisco.iosxr                   5.0.2  
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | cisco.ise                     2.5.12 
2023-07-30 23:07:11,602 p=10909 u=ansible n=ansible | cisco.meraki                  2.15.1 
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | cisco.mso                     2.4.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | cisco.nso                     1.0.3  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | cisco.nxos                    4.3.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | cisco.ucs                     1.8.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | cloud.common                  2.1.3  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | cloudscale_ch.cloud           2.2.4  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.aws                 6.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.azure               2.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.ciscosmb            1.0.5  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.crypto              2.13.1 
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.digitalocean        1.23.0 
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.dns                 2.5.4  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.docker              3.4.6  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.fortios             1.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.general             7.0.1  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.google              1.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.grafana             1.5.4  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.hashi_vault         5.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.hrobot              1.8.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.libvirt             1.2.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.mongodb             1.5.2  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.mysql               3.7.1  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.network             5.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.okd                 2.3.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.postgresql          2.4.1  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.proxysql            1.5.1  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.rabbitmq            1.2.3  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.routeros            2.8.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.sap                 1.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.sap_libs            1.4.1  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.skydive             1.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.sops                1.6.1  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.vmware              3.6.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.windows             1.13.0 
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | community.zabbix              2.0.0  
2023-07-30 23:07:11,603 p=10909 u=ansible n=ansible | containers.podman             1.10.1 
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | cyberark.conjur               1.2.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | cyberark.pas                  1.0.19 
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | dellemc.enterprise_sonic      2.0.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | dellemc.openmanage            7.5.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | dellemc.powerflex             1.6.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | dellemc.unity                 1.6.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | f5networks.f5_modules         1.24.0 
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | fortinet.fortimanager         2.1.7  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | fortinet.fortios              2.2.3  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | frr.frr                       2.0.2  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | gluster.gluster               1.0.2  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | google.cloud                  1.1.3  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | grafana.grafana               2.0.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | hetzner.hcloud                1.11.0 
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | hpe.nimble                    1.1.4  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | ibm.qradar                    2.1.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | ibm.spectrum_virtualize       1.12.0 
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | infinidat.infinibox           1.3.12 
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | infoblox.nios_modules         1.5.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | inspur.ispim                  1.3.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | inspur.sm                     2.3.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | junipernetworks.junos         5.1.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | kubernetes.core               2.4.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | lowlydba.sqlserver            2.0.0  
2023-07-30 23:07:11,604 p=10909 u=ansible n=ansible | microsoft.ad                  1.1.0  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netapp.aws                    21.7.0 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netapp.azure                  21.10.0
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netapp.cloudmanager           21.22.0
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netapp.elementsw              21.7.0 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netapp.ontap                  22.6.0 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netapp.storagegrid            21.11.1
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netapp.um_info                21.8.0 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netapp_eseries.santricity     1.4.0  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | netbox.netbox                 3.13.0 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | ngine_io.cloudstack           2.3.0  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | ngine_io.exoscale             1.0.0  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | ngine_io.vultr                1.1.3  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | openstack.cloud               2.1.0  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | openvswitch.openvswitch       2.1.1  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | ovirt.ovirt                   3.1.2  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | purestorage.flasharray        1.18.0 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | purestorage.flashblade        1.11.0 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | purestorage.fusion            1.4.2  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | sensu.sensu_go                1.13.2 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | servicenow.servicenow         1.0.6  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | splunk.es                     2.1.0  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | t_systems_mms.icinga_director 1.32.2 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | theforeman.foreman            3.10.0 
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | vmware.vmware_rest            2.3.1  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | vultr.cloud                   1.7.1  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | vyos.vyos                     4.0.2  
2023-07-30 23:07:11,605 p=10909 u=ansible n=ansible | wti.remote                    1.0.4  
2023-07-30 23:07:53,626 p=10946 u=ansible n=ansible | ERROR! Neither the collection requirement entry key 'name', nor 'source' point to a concrete resolvable collection artifact. Also 'name' is not an FQCN. A valid collection name must be in the format <namespace>.<collection>. Please make sure that the namespace and the collection name contain characters from [a-zA-Z0-9_] only.

Could not find community.general.alternatives.
2023-07-30 23:08:24,719 p=10997 u=ansible n=ansible | Starting galaxy collection install process
2023-07-30 23:08:24,738 p=10997 u=ansible n=ansible | Nothing to do. All requested collections are already installed. If you want to reinstall them, consider using `--force`.
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | # /home/ansible/.ansible/collections/ansible_collections
Collection                    Version
----------------------------- -------

2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | community.general             7.2.0  
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | # /usr/lib/python3.11/site-packages/ansible_collections
Collection                    Version
----------------------------- -------

2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | amazon.aws                    6.0.1  
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | ansible.netcommon             5.1.1  
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | ansible.posix                 1.5.4  
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | ansible.utils                 2.10.3 
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | ansible.windows               1.14.0 
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | arista.eos                    6.0.1  
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | awx.awx                       22.2.0 
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | azure.azcollection            1.15.0 
2023-07-30 23:08:31,372 p=11023 u=ansible n=ansible | check_point.mgmt              5.0.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | chocolatey.chocolatey         1.4.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.aci                     2.6.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.asa                     4.0.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.dnac                    6.7.2  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.intersight              1.0.27 
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.ios                     4.5.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.iosxr                   5.0.2  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.ise                     2.5.12 
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.meraki                  2.15.1 
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.mso                     2.4.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.nso                     1.0.3  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.nxos                    4.3.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cisco.ucs                     1.8.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cloud.common                  2.1.3  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | cloudscale_ch.cloud           2.2.4  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.aws                 6.0.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.azure               2.0.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.ciscosmb            1.0.5  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.crypto              2.13.1 
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.digitalocean        1.23.0 
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.dns                 2.5.4  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.docker              3.4.6  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.fortios             1.0.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.general             7.0.1  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.google              1.0.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.grafana             1.5.4  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.hashi_vault         5.0.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.hrobot              1.8.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.libvirt             1.2.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.mongodb             1.5.2  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.mysql               3.7.1  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.network             5.0.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.okd                 2.3.0  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.postgresql          2.4.1  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.proxysql            1.5.1  
2023-07-30 23:08:31,373 p=11023 u=ansible n=ansible | community.rabbitmq            1.2.3  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | community.routeros            2.8.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | community.sap                 1.0.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | community.sap_libs            1.4.1  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | community.skydive             1.0.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | community.sops                1.6.1  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | community.vmware              3.6.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | community.windows             1.13.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | community.zabbix              2.0.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | containers.podman             1.10.1 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | cyberark.conjur               1.2.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | cyberark.pas                  1.0.19 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | dellemc.enterprise_sonic      2.0.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | dellemc.openmanage            7.5.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | dellemc.powerflex             1.6.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | dellemc.unity                 1.6.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | f5networks.f5_modules         1.24.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | fortinet.fortimanager         2.1.7  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | fortinet.fortios              2.2.3  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | frr.frr                       2.0.2  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | gluster.gluster               1.0.2  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | google.cloud                  1.1.3  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | grafana.grafana               2.0.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | hetzner.hcloud                1.11.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | hpe.nimble                    1.1.4  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | ibm.qradar                    2.1.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | ibm.spectrum_virtualize       1.12.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | infinidat.infinibox           1.3.12 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | infoblox.nios_modules         1.5.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | inspur.ispim                  1.3.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | inspur.sm                     2.3.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | junipernetworks.junos         5.1.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | kubernetes.core               2.4.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | lowlydba.sqlserver            2.0.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | microsoft.ad                  1.1.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netapp.aws                    21.7.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netapp.azure                  21.10.0
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netapp.cloudmanager           21.22.0
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netapp.elementsw              21.7.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netapp.ontap                  22.6.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netapp.storagegrid            21.11.1
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netapp.um_info                21.8.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netapp_eseries.santricity     1.4.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | netbox.netbox                 3.13.0 
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | ngine_io.cloudstack           2.3.0  
2023-07-30 23:08:31,374 p=11023 u=ansible n=ansible | ngine_io.exoscale             1.0.0  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | ngine_io.vultr                1.1.3  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | openstack.cloud               2.1.0  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | openvswitch.openvswitch       2.1.1  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | ovirt.ovirt                   3.1.2  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | purestorage.flasharray        1.18.0 
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | purestorage.flashblade        1.11.0 
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | purestorage.fusion            1.4.2  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | sensu.sensu_go                1.13.2 
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | servicenow.servicenow         1.0.6  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | splunk.es                     2.1.0  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | t_systems_mms.icinga_director 1.32.2 
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | theforeman.foreman            3.10.0 
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | vmware.vmware_rest            2.3.1  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | vultr.cloud                   1.7.1  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | vyos.vyos                     4.0.2  
2023-07-30 23:08:31,375 p=11023 u=ansible n=ansible | wti.remote                    1.0.4  
2023-07-30 23:08:56,690 p=11063 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:08:56,693 p=11063 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:08:58,007 p=11063 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:08:58,014 p=11063 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:08:58,049 p=11063 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:08:58,053 p=11063 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:08:58,820 p=11063 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:08:58,824 p=11063 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:08:59,512 p=11063 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:08:59,515 p=11063 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-30 23:08:59,838 p=11063 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Needed to install the alternative, but unable to do so as we are missing the link"}
2023-07-30 23:08:59,839 p=11063 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:08:59,839 p=11063 u=ansible n=ansible | centos2                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 23:10:45,864 p=11202 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:10:45,868 p=11202 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:10:47,156 p=11202 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:10:47,165 p=11202 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:10:47,202 p=11202 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:10:47,205 p=11202 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:10:48,100 p=11202 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:10:48,104 p=11202 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:10:48,822 p=11202 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:10:48,826 p=11202 u=ansible n=ansible | TASK [install_sonarqube : Create symbolic link for Java executable] *************************************************************************
2023-07-30 23:10:49,135 p=11202 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:10:49,138 p=11202 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-30 23:10:49,451 p=11202 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Needed to install the alternative, but unable to do so as we are missing the link"}
2023-07-30 23:10:49,451 p=11202 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:10:49,452 p=11202 u=ansible n=ansible | centos2                    : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 23:11:11,928 p=11350 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:11:11,932 p=11350 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:11:12,960 p=11350 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:11:12,967 p=11350 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:11:13,005 p=11350 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:11:13,010 p=11350 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:11:13,780 p=11350 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:11:13,784 p=11350 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:11:14,410 p=11350 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:11:14,413 p=11350 u=ansible n=ansible | TASK [install_sonarqube : Create symbolic link for Java executable] *************************************************************************
2023-07-30 23:11:14,701 p=11350 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:11:14,705 p=11350 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-30 23:11:14,991 p=11350 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Needed to install the alternative, but unable to do so as we are missing the link"}
2023-07-30 23:11:14,991 p=11350 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:11:14,991 p=11350 u=ansible n=ansible | centos2                    : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-30 23:12:41,821 p=11488 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:12:41,825 p=11488 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:12:43,025 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:43,031 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:12:43,049 p=11488 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:12:43,053 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:12:43,790 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:43,793 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:12:44,379 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:44,382 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 23:12:46,152 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:46,155 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 23:12:46,740 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:46,743 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 23:12:47,039 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:47,042 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 23:12:47,050 p=11488 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:12:47,054 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 23:12:47,506 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:47,509 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 23:12:47,807 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:47,810 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 23:12:48,049 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:48,052 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 23:12:48,287 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:48,290 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 23:12:48,922 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:48,925 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 23:12:49,274 p=11488 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:12:49,277 p=11488 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 23:12:49,291 p=11488 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Decryption failed (no vault secrets were found that could decrypt)"}
2023-07-30 23:12:49,292 p=11488 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:12:49,292 p=11488 u=ansible n=ansible | centos2                    : ok=13   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-30 23:15:05,068 p=11784 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:15:05,072 p=11784 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:15:06,276 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:06,284 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:15:06,319 p=11784 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:15:06,322 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:15:07,117 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:07,121 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:15:07,875 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:07,878 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-30 23:15:08,178 p=11784 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:08,182 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 23:15:10,094 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:10,097 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 23:15:10,701 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:10,703 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 23:15:11,022 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:11,026 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 23:15:11,035 p=11784 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:11,039 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 23:15:11,495 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:11,498 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 23:15:11,819 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:11,822 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 23:15:12,059 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:12,062 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 23:15:12,315 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:12,320 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 23:15:12,963 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:12,966 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 23:15:13,315 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:13,319 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 23:15:13,666 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:13,670 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 23:15:14,008 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:14,011 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 23:15:14,315 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:14,318 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 23:15:15,056 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:15,061 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 23:15:15,070 p=11784 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:15,074 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 23:15:15,341 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:15,346 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 23:15:15,356 p=11784 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:15,361 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 23:15:15,373 p=11784 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:15,378 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 23:15:15,390 p=11784 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:15,395 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 23:15:15,406 p=11784 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:15,410 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 23:15:15,677 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:15,681 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 23:15:16,027 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:16,033 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 23:15:16,301 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:16,304 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit jdbc parameter] ********************************************************************************
2023-07-30 23:15:16,540 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:16,543 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit host parameter] ********************************************************************************
2023-07-30 23:15:16,786 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:16,789 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit port parameter] ********************************************************************************
2023-07-30 23:15:17,039 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:17,043 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 23:15:17,391 p=11784 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 23:15:17,392 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:17,395 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 23:15:17,672 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:17,675 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 23:15:18,028 p=11784 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:18,033 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 23:15:18,686 p=11784 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:18,690 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 23:15:19,261 p=11784 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:19,266 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 23:15:19,702 p=11784 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:19,705 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 23:15:20,114 p=11784 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:20,119 p=11784 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 23:15:20,134 p=11784 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-30 23:15:20,139 p=11784 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 23:15:20,151 p=11784 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:20,163 p=11784 u=ansible n=ansible | RUNNING HANDLER [Reload SonarQube systemd service] ******************************************************************************************
2023-07-30 23:15:20,577 p=11784 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:20,583 p=11784 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:15:20,583 p=11784 u=ansible n=ansible | centos2                    : ok=34   changed=6    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 23:15:36,414 p=12443 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:15:36,418 p=12443 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:15:37,511 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:37,518 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:15:37,551 p=12443 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:15:37,555 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:15:38,436 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:38,440 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:15:39,116 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:39,120 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-30 23:15:39,454 p=12443 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:39,457 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 23:15:41,428 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:41,434 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 23:15:42,192 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:42,196 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 23:15:42,578 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:42,581 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 23:15:42,589 p=12443 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:42,592 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 23:15:43,102 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:43,106 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 23:15:43,544 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:43,548 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 23:15:43,865 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:43,869 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 23:15:44,158 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:44,162 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 23:15:44,853 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:44,857 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 23:15:45,213 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:45,216 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 23:15:45,566 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:45,570 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 23:15:45,914 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:45,917 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 23:15:46,225 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:46,228 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 23:15:46,895 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:46,898 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 23:15:46,905 p=12443 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:46,908 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 23:15:47,164 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:47,167 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 23:15:47,174 p=12443 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:47,178 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 23:15:47,185 p=12443 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:47,188 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 23:15:47,195 p=12443 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:47,199 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 23:15:47,207 p=12443 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:47,210 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 23:15:47,455 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:47,458 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 23:15:47,702 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:47,705 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 23:15:47,949 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:47,953 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit jdbc parameter] ********************************************************************************
2023-07-30 23:15:48,197 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:48,201 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit host parameter] ********************************************************************************
2023-07-30 23:15:48,450 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:48,453 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit port parameter] ********************************************************************************
2023-07-30 23:15:48,706 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:48,709 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 23:15:49,070 p=12443 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 23:15:49,071 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:49,074 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 23:15:49,393 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:49,396 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 23:15:49,639 p=12443 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:49,642 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 23:15:50,076 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:50,080 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 23:15:50,546 p=12443 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:50,549 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 23:15:50,880 p=12443 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:15:50,882 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 23:15:51,236 p=12443 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:15:51,240 p=12443 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 23:15:51,249 p=12443 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-30 23:15:51,254 p=12443 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 23:15:51,263 p=12443 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:15:51,278 p=12443 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:15:51,278 p=12443 u=ansible n=ansible | centos2                    : ok=33   changed=4    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 23:44:44,468 p=13112 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-30 23:44:49,306 p=13148 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:44:49,311 p=13148 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:44:50,759 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:50,766 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:44:50,801 p=13148 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:44:50,805 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:44:52,583 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:52,585 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:44:54,206 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:54,210 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-30 23:44:54,528 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:54,531 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 23:44:56,923 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:56,926 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 23:44:57,516 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:57,519 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 23:44:57,830 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:57,833 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 23:44:57,840 p=13148 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:44:57,844 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 23:44:58,366 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:58,373 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 23:44:58,732 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:58,737 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 23:44:59,005 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:59,008 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 23:44:59,379 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:44:59,384 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 23:45:00,264 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:00,268 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 23:45:00,821 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:00,824 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 23:45:01,255 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:01,258 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 23:45:01,640 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:01,643 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 23:45:01,962 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:01,966 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 23:45:02,740 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:02,743 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 23:45:02,754 p=13148 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:45:02,759 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 23:45:03,091 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:03,096 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 23:45:03,104 p=13148 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:45:03,108 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 23:45:03,117 p=13148 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:45:03,123 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 23:45:03,133 p=13148 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:45:03,137 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 23:45:03,146 p=13148 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:45:03,151 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 23:45:03,445 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:03,449 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 23:45:03,745 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:03,751 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 23:45:04,250 p=13148 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 23:45:04,251 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:04,254 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 23:45:04,550 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:04,554 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 23:45:04,870 p=13148 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:45:04,874 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 23:45:05,339 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:05,342 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 23:45:05,820 p=13148 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:45:05,823 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 23:45:06,157 p=13148 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:45:06,174 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 23:45:06,561 p=13148 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:45:06,565 p=13148 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 23:45:06,576 p=13148 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-30 23:45:06,581 p=13148 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 23:45:06,593 p=13148 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:45:06,610 p=13148 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:45:06,610 p=13148 u=ansible n=ansible | centos2                    : ok=29   changed=3    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-30 23:46:48,392 p=13714 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-30 23:46:48,396 p=13714 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-30 23:46:49,702 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:49,709 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-30 23:46:49,744 p=13714 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-30 23:46:49,747 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-30 23:46:51,051 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:51,055 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-30 23:46:51,707 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:51,710 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-30 23:46:52,012 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:52,016 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-30 23:46:54,371 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:54,374 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-30 23:46:55,006 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:55,010 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-30 23:46:55,306 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:55,310 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-30 23:46:55,316 p=13714 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:46:55,320 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-30 23:46:55,776 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:55,779 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-30 23:46:56,081 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:56,084 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-30 23:46:56,324 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:56,327 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-30 23:46:56,569 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:56,573 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-30 23:46:57,180 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:57,184 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] **************************************************************************************
2023-07-30 23:46:57,567 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:57,570 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-30 23:46:57,919 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:57,922 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ************************************************************
2023-07-30 23:46:58,268 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:58,272 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-30 23:46:58,582 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:58,585 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-30 23:46:59,282 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:59,285 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-30 23:46:59,292 p=13714 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:46:59,295 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-30 23:46:59,543 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:59,546 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-30 23:46:59,553 p=13714 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:46:59,557 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-30 23:46:59,565 p=13714 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:46:59,570 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-30 23:46:59,578 p=13714 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:46:59,582 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-30 23:46:59,591 p=13714 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:46:59,594 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-30 23:46:59,852 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:46:59,855 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-30 23:47:00,106 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:47:00,110 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-30 23:47:00,521 p=13714 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-30 23:47:00,521 p=13714 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:47:00,524 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-30 23:47:00,804 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:47:00,807 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-30 23:47:01,070 p=13714 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:47:01,073 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-30 23:47:01,526 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:47:01,530 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-30 23:47:02,087 p=13714 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:47:02,090 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-30 23:47:02,435 p=13714 u=ansible n=ansible | ok: [centos2]
2023-07-30 23:47:02,438 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-30 23:47:02,801 p=13714 u=ansible n=ansible | changed: [centos2]
2023-07-30 23:47:02,805 p=13714 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-30 23:47:02,816 p=13714 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-30 23:47:02,821 p=13714 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-30 23:47:02,831 p=13714 u=ansible n=ansible | skipping: [centos2]
2023-07-30 23:47:02,848 p=13714 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-30 23:47:02,849 p=13714 u=ansible n=ansible | centos2                    : ok=29   changed=4    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-31 08:30:12,592 p=2533 u=ansible n=ansible | PLAY [SonarQube playbook] ******************************************************************************************************************************
2023-07-31 08:30:12,600 p=2533 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************
2023-07-31 08:30:14,340 p=2533 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:30:14,347 p=2533 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***************************************************************************************
2023-07-31 08:30:14,387 p=2533 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 08:30:14,391 p=2533 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ******************************************************************************************************************
2023-07-31 08:30:18,815 p=2533 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:30:18,819 p=2533 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 17] **********************************************************************************************************
2023-07-31 08:32:40,357 p=2533 u=ansible n=ansible | changed: [centos2]
2023-07-31 08:32:40,361 p=2533 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 17] ***********************************************************************************************
2023-07-31 08:32:40,690 p=2533 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Specified path /usr/lib/jvm/java-17-openjdk/bin/java does not exist"}
2023-07-31 08:32:40,691 p=2533 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************
2023-07-31 08:32:40,691 p=2533 u=ansible n=ansible | centos2                    : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 08:34:18,154 p=2740 u=ansible n=ansible | PLAY [SonarQube playbook] ******************************************************************************************************************************
2023-07-31 08:34:18,158 p=2740 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************
2023-07-31 08:34:19,626 p=2740 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:34:19,633 p=2740 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***************************************************************************************
2023-07-31 08:34:19,666 p=2740 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 08:34:19,670 p=2740 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ******************************************************************************************************************
2023-07-31 08:34:20,381 p=2740 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:34:20,384 p=2740 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 17] **********************************************************************************************************
2023-07-31 08:34:20,972 p=2740 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:34:20,975 p=2740 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 17] ***********************************************************************************************
2023-07-31 08:34:21,258 p=2740 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Needed to install the alternative, but unable to do so as we are missing the link"}
2023-07-31 08:34:21,259 p=2740 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************
2023-07-31 08:34:21,259 p=2740 u=ansible n=ansible | centos2                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 08:34:39,312 p=2872 u=ansible n=ansible | PLAY [SonarQube playbook] ******************************************************************************************************************************
2023-07-31 08:34:39,316 p=2872 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************
2023-07-31 08:34:40,451 p=2872 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:34:40,458 p=2872 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***************************************************************************************
2023-07-31 08:34:40,493 p=2872 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 08:34:40,497 p=2872 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ******************************************************************************************************************
2023-07-31 08:34:41,178 p=2872 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:34:41,181 p=2872 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 17] **********************************************************************************************************
2023-07-31 08:34:41,765 p=2872 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:34:41,767 p=2872 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 17] ***********************************************************************************************
2023-07-31 08:34:42,050 p=2872 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Needed to install the alternative, but unable to do so as we are missing the link"}
2023-07-31 08:34:42,051 p=2872 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************
2023-07-31 08:34:42,051 p=2872 u=ansible n=ansible | centos2                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 08:35:14,828 p=3017 u=ansible n=ansible | PLAY [SonarQube playbook] ******************************************************************************************************************************
2023-07-31 08:35:14,832 p=3017 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************
2023-07-31 08:35:15,921 p=3017 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:35:15,930 p=3017 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***************************************************************************************
2023-07-31 08:35:15,973 p=3017 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 08:35:15,978 p=3017 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ******************************************************************************************************************
2023-07-31 08:35:16,775 p=3017 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:35:16,778 p=3017 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 17] **********************************************************************************************************
2023-07-31 08:35:17,358 p=3017 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:35:17,360 p=3017 u=ansible n=ansible | TASK [install_sonarqube : Create symbolic link for Java executable] ************************************************************************************
2023-07-31 08:35:17,647 p=3017 u=ansible n=ansible | changed: [centos2]
2023-07-31 08:35:17,650 p=3017 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 17] ***********************************************************************************************
2023-07-31 08:35:17,930 p=3017 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "msg": "Needed to install the alternative, but unable to do so as we are missing the link"}
2023-07-31 08:35:17,931 p=3017 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************
2023-07-31 08:35:17,931 p=3017 u=ansible n=ansible | centos2                    : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 08:36:49,591 p=3178 u=ansible n=ansible | PLAY [SonarQube playbook] ******************************************************************************************************************************
2023-07-31 08:36:49,595 p=3178 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************
2023-07-31 08:36:50,942 p=3178 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:36:50,952 p=3178 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***************************************************************************************
2023-07-31 08:36:50,988 p=3178 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 08:36:50,992 p=3178 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ******************************************************************************************************************
2023-07-31 08:36:51,809 p=3178 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:36:51,813 p=3178 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 17] **********************************************************************************************************
2023-07-31 08:36:52,524 p=3178 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:36:52,527 p=3178 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 17] ***********************************************************************************************
2023-07-31 08:36:52,813 p=3178 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"changed": false, "cmd": "/usr/sbin/update-alternatives --install /etc/alternatives/java java /usr/lib/jvm/jre-17-openjdk/bin/java 50", "msg": "the primary link for java must be /usr/bin/java", "rc": 2, "stderr": "the primary link for java must be /usr/bin/java\n", "stderr_lines": ["the primary link for java must be /usr/bin/java"], "stdout": "", "stdout_lines": []}
2023-07-31 08:36:52,813 p=3178 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************
2023-07-31 08:36:52,814 p=3178 u=ansible n=ansible | centos2                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 08:37:46,423 p=3292 u=ansible n=ansible | PLAY [SonarQube playbook] ******************************************************************************************************************************
2023-07-31 08:37:46,426 p=3292 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************
2023-07-31 08:37:47,619 p=3292 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:37:47,627 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***************************************************************************************
2023-07-31 08:37:47,660 p=3292 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 08:37:47,663 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ******************************************************************************************************************
2023-07-31 08:37:48,454 p=3292 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:37:48,457 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 17] **********************************************************************************************************
2023-07-31 08:37:49,034 p=3292 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:37:49,037 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 17] ***********************************************************************************************
2023-07-31 08:37:49,318 p=3292 u=ansible n=ansible | changed: [centos2]
2023-07-31 08:37:49,321 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *******************************************************************************************
2023-07-31 08:37:50,834 p=3292 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:37:50,838 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ******************************************************************************************
2023-07-31 08:37:51,441 p=3292 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:37:51,444 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ******************************************************************************************
2023-07-31 08:37:51,774 p=3292 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:37:51,778 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***********************************************************************************************
2023-07-31 08:37:51,790 p=3292 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:37:51,799 p=3292 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ********************************************************************************************
2023-07-31 08:40:38,932 p=2538 u=ansible n=ansible | PLAY [SonarQube playbook] ************************************************************************************************************************
2023-07-31 08:40:38,939 p=2538 u=ansible n=ansible | TASK [Gathering Facts] ***************************************************************************************************************************
2023-07-31 08:40:40,254 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:40,261 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *********************************************************************************
2023-07-31 08:40:40,303 p=2538 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 08:40:40,307 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ************************************************************************************************************
2023-07-31 08:40:41,116 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:41,119 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 17] ****************************************************************************************************
2023-07-31 08:40:41,726 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:41,729 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 17] *****************************************************************************************
2023-07-31 08:40:42,019 p=2538 u=ansible n=ansible | changed: [centos2]
2023-07-31 08:40:42,022 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *************************************************************************************
2023-07-31 08:40:44,327 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:44,331 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ************************************************************************************
2023-07-31 08:40:44,921 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:44,924 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ************************************************************************************
2023-07-31 08:40:45,222 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:45,225 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *****************************************************************************************
2023-07-31 08:40:45,232 p=2538 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:40:45,236 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] **************************************************************************************
2023-07-31 08:40:45,692 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:45,694 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *******************************************************************************
2023-07-31 08:40:45,998 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:46,001 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ***********************************************************
2023-07-31 08:40:46,245 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:46,248 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ***********************************************************
2023-07-31 08:40:46,486 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:46,489 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ******************************************************************************************************
2023-07-31 08:40:47,078 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:47,081 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *******************************************************************************************
2023-07-31 08:40:47,499 p=2538 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:40:47,503 p=2538 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **********************************************************************
2023-07-31 08:40:47,509 p=2538 u=ansible n=ansible | fatal: [centos2]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-31 08:40:47,510 p=2538 u=ansible n=ansible | PLAY RECAP ***************************************************************************************************************************************
2023-07-31 08:40:47,510 p=2538 u=ansible n=ansible | centos2                    : ok=14   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 08:41:05,712 p=2840 u=ansible n=ansible | PLAY [SonarQube playbook] ************************************************************************************************************************
2023-07-31 08:41:05,715 p=2840 u=ansible n=ansible | TASK [Gathering Facts] ***************************************************************************************************************************
2023-07-31 08:41:06,817 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:06,824 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *********************************************************************************
2023-07-31 08:41:06,860 p=2840 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 08:41:06,865 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ************************************************************************************************************
2023-07-31 08:41:07,557 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:07,560 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 17] ****************************************************************************************************
2023-07-31 08:41:08,149 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:08,163 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 17] *****************************************************************************************
2023-07-31 08:41:08,452 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:08,455 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *************************************************************************************
2023-07-31 08:41:09,897 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:09,900 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ************************************************************************************
2023-07-31 08:41:10,486 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:10,489 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ************************************************************************************
2023-07-31 08:41:10,791 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:10,794 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *****************************************************************************************
2023-07-31 08:41:10,801 p=2840 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:41:10,805 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] **************************************************************************************
2023-07-31 08:41:11,240 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:11,243 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *******************************************************************************
2023-07-31 08:41:11,542 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:11,545 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ***********************************************************
2023-07-31 08:41:11,783 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:11,786 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ***********************************************************
2023-07-31 08:41:12,031 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:12,034 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ******************************************************************************************************
2023-07-31 08:41:12,613 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:12,617 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *******************************************************************************************
2023-07-31 08:41:12,960 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:12,963 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **********************************************************************
2023-07-31 08:41:13,314 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:13,317 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *****************************************************************
2023-07-31 08:41:13,678 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:13,682 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *****************************************************************************************
2023-07-31 08:41:14,026 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:14,032 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *****************************************************************************
2023-07-31 08:41:14,979 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:14,982 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ****************************************************************************************************
2023-07-31 08:41:14,989 p=2840 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:41:14,992 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ********************************************************************
2023-07-31 08:41:15,267 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:15,271 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ********************************************************************************************
2023-07-31 08:41:15,279 p=2840 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:41:15,283 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *******************************************************************************
2023-07-31 08:41:15,290 p=2840 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:41:15,295 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] ***************************************************************************************
2023-07-31 08:41:15,303 p=2840 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:41:15,307 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *************************************************************************************************
2023-07-31 08:41:15,314 p=2840 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:41:15,317 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] *********************************************************************************
2023-07-31 08:41:15,568 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:15,571 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] *********************************************************************************
2023-07-31 08:41:15,836 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:15,839 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ********************************************************************************************************
2023-07-31 08:41:16,197 p=2840 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 08:41:16,197 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:16,200 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] *******************************************************************************
2023-07-31 08:41:16,502 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:16,505 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] *****************************************************************************************
2023-07-31 08:41:16,748 p=2840 u=ansible n=ansible | changed: [centos2]
2023-07-31 08:41:16,752 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] **************************************************************************************
2023-07-31 08:41:17,173 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:17,176 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] *****************************************************
2023-07-31 08:41:17,762 p=2840 u=ansible n=ansible | changed: [centos2]
2023-07-31 08:41:17,766 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] **************************************************************************************
2023-07-31 08:41:18,139 p=2840 u=ansible n=ansible | ok: [centos2]
2023-07-31 08:41:18,143 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ***********************************************************************************************
2023-07-31 08:41:18,525 p=2840 u=ansible n=ansible | changed: [centos2]
2023-07-31 08:41:18,529 p=2840 u=ansible n=ansible | TASK [install_sonarqube : debug] *****************************************************************************************************************
2023-07-31 08:41:18,542 p=2840 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-31 08:41:18,547 p=2840 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *********************************************************************************
2023-07-31 08:41:18,557 p=2840 u=ansible n=ansible | skipping: [centos2]
2023-07-31 08:41:18,573 p=2840 u=ansible n=ansible | PLAY RECAP ***************************************************************************************************************************************
2023-07-31 08:41:18,574 p=2840 u=ansible n=ansible | centos2                    : ok=29   changed=3    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-31 09:14:32,822 p=3469 u=ansible n=ansible | PLAY [SonarQube playbook] ************************************************************************************
2023-07-31 09:14:32,826 p=3469 u=ansible n=ansible | TASK [Gathering Facts] ***************************************************************************************
2023-07-31 09:14:34,725 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:34,732 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *********************************************
2023-07-31 09:14:34,766 p=3469 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 09:14:34,769 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ************************************************************************
2023-07-31 09:14:36,335 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:36,337 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ****************************************************************
2023-07-31 09:14:37,591 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:37,595 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *****************************************************
2023-07-31 09:14:37,924 p=3469 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:14:37,927 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *************************************************
2023-07-31 09:14:39,751 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:39,754 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ************************************************
2023-07-31 09:14:40,400 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:40,403 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ************************************************
2023-07-31 09:14:40,722 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:40,725 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *****************************************************
2023-07-31 09:14:40,732 p=3469 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:14:40,735 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] **************************************************
2023-07-31 09:14:41,229 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:41,233 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *******************************************
2023-07-31 09:14:41,536 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:41,539 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ***********************
2023-07-31 09:14:41,776 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:41,779 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ***********************
2023-07-31 09:14:42,046 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:42,049 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ******************************************************************
2023-07-31 09:14:42,696 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:42,699 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *******************************************************
2023-07-31 09:14:43,156 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:43,160 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **********************************
2023-07-31 09:14:43,517 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:43,520 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *****************************
2023-07-31 09:14:43,886 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:43,889 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *****************************************************
2023-07-31 09:14:44,190 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:44,194 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *****************************************
2023-07-31 09:14:44,485 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:14:44,489 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ****************************************************************
2023-07-31 09:18:35,696 p=3469 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:18:35,700 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ********************************
2023-07-31 09:18:36,016 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:18:36,020 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ********************************************************
2023-07-31 09:18:36,027 p=3469 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:18:36,032 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *******************************************
2023-07-31 09:18:36,039 p=3469 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:18:36,045 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] ***************************************************
2023-07-31 09:18:36,054 p=3469 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:18:36,057 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *************************************************************
2023-07-31 09:18:36,066 p=3469 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:18:36,070 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] *********************************************
2023-07-31 09:18:36,334 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:18:36,337 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] *********************************************
2023-07-31 09:18:36,593 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:18:36,597 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ********************************************************************
2023-07-31 09:18:36,982 p=3469 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2023-07-31 09:18:36,983 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:18:36,986 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] *******************************************
2023-07-31 09:18:37,415 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:18:37,417 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] *****************************************************
2023-07-31 09:18:37,673 p=3469 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:18:37,676 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] **************************************************
2023-07-31 09:18:38,121 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:18:38,124 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] *****************
2023-07-31 09:18:38,633 p=3469 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:18:38,637 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] **************************************************
2023-07-31 09:18:38,981 p=3469 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:18:38,984 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ***********************************************************
2023-07-31 09:18:39,358 p=3469 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:18:39,362 p=3469 u=ansible n=ansible | TASK [install_sonarqube : debug] *****************************************************************************
2023-07-31 09:18:39,373 p=3469 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-31 09:18:39,377 p=3469 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *********************************************
2023-07-31 09:18:39,385 p=3469 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:18:39,399 p=3469 u=ansible n=ansible | PLAY RECAP ***************************************************************************************************
2023-07-31 09:18:39,400 p=3469 u=ansible n=ansible | centos2                    : ok=30   changed=5    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-31 09:19:26,096 p=4075 u=ansible n=ansible | PLAY [SonarQube playbook] ************************************************************************************
2023-07-31 09:19:26,100 p=4075 u=ansible n=ansible | TASK [Gathering Facts] ***************************************************************************************
2023-07-31 09:19:27,388 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:27,395 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *********************************************
2023-07-31 09:19:27,432 p=4075 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 09:19:27,436 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ************************************************************************
2023-07-31 09:19:29,380 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:29,383 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ****************************************************************
2023-07-31 09:19:30,690 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:30,693 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *****************************************************
2023-07-31 09:19:31,019 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:31,022 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *************************************************
2023-07-31 09:19:32,930 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:32,933 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ************************************************
2023-07-31 09:19:33,920 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:33,924 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ************************************************
2023-07-31 09:19:34,342 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:34,346 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *****************************************************
2023-07-31 09:19:34,354 p=4075 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:19:34,358 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] **************************************************
2023-07-31 09:19:34,860 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:34,864 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *******************************************
2023-07-31 09:19:35,192 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:35,195 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ***********************
2023-07-31 09:19:35,506 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:35,510 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ***********************
2023-07-31 09:19:35,802 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:35,807 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ******************************************************************
2023-07-31 09:19:36,812 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:36,816 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *******************************************************
2023-07-31 09:19:37,280 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:37,284 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **********************************
2023-07-31 09:19:37,661 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:37,664 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *****************************
2023-07-31 09:19:38,045 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:38,049 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *****************************************************
2023-07-31 09:19:38,416 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:38,421 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *****************************************
2023-07-31 09:19:39,264 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:39,267 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ****************************************************************
2023-07-31 09:19:39,302 p=4075 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:19:39,307 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ********************************
2023-07-31 09:19:39,579 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:39,583 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ********************************************************
2023-07-31 09:19:43,288 p=4075 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:19:43,291 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *******************************************
2023-07-31 09:19:43,694 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:43,704 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] ***************************************************
2023-07-31 09:19:43,757 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:43,761 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *************************************************************
2023-07-31 09:19:44,172 p=4075 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:19:44,176 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] *********************************************
2023-07-31 09:19:44,440 p=4075 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:19:44,444 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] *********************************************
2023-07-31 09:19:44,804 p=4075 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:19:44,808 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ********************************************************************
2023-07-31 09:19:45,311 p=4075 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2023-07-31 09:19:45,311 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:45,314 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] *******************************************
2023-07-31 09:19:45,935 p=4075 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:19:45,940 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] *****************************************************
2023-07-31 09:19:46,218 p=4075 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:19:46,222 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] **************************************************
2023-07-31 09:19:46,664 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:46,668 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] *****************
2023-07-31 09:19:47,092 p=4075 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:19:47,095 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] **************************************************
2023-07-31 09:19:47,435 p=4075 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:19:47,438 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ***********************************************************
2023-07-31 09:19:47,806 p=4075 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:19:47,811 p=4075 u=ansible n=ansible | TASK [install_sonarqube : debug] *****************************************************************************
2023-07-31 09:19:47,821 p=4075 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-31 09:19:47,824 p=4075 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *********************************************
2023-07-31 09:19:47,832 p=4075 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:19:47,845 p=4075 u=ansible n=ansible | PLAY RECAP ***************************************************************************************************
2023-07-31 09:19:47,845 p=4075 u=ansible n=ansible | centos2                    : ok=33   changed=8    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2023-07-31 09:22:05,231 p=4732 u=ansible n=ansible | PLAY [SonarQube playbook] ************************************************************************************
2023-07-31 09:22:05,235 p=4732 u=ansible n=ansible | TASK [Gathering Facts] ***************************************************************************************
2023-07-31 09:22:07,608 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:07,620 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *********************************************
2023-07-31 09:22:07,674 p=4732 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 09:22:07,680 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ************************************************************************
2023-07-31 09:22:09,797 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:09,802 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ****************************************************************
2023-07-31 09:22:11,863 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:11,868 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *****************************************************
2023-07-31 09:22:12,229 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:12,232 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *************************************************
2023-07-31 09:22:14,298 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:14,302 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ************************************************
2023-07-31 09:22:15,063 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:15,067 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ************************************************
2023-07-31 09:22:15,411 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:15,415 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] *****************************************************
2023-07-31 09:22:15,422 p=4732 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:22:15,426 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] **************************************************
2023-07-31 09:22:15,972 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:15,975 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *******************************************
2023-07-31 09:22:16,309 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:16,312 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ***********************
2023-07-31 09:22:16,561 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:16,565 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ***********************
2023-07-31 09:22:16,814 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:16,817 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ******************************************************************
2023-07-31 09:22:17,466 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:17,469 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *******************************************************
2023-07-31 09:22:17,876 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:17,879 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **********************************
2023-07-31 09:22:18,246 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:18,250 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *****************************
2023-07-31 09:22:18,625 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:18,628 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *****************************************************
2023-07-31 09:22:18,958 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:18,961 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *****************************************
2023-07-31 09:22:19,520 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:19,524 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ****************************************************************
2023-07-31 09:22:19,532 p=4732 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:22:19,536 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ********************************
2023-07-31 09:22:19,798 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:19,801 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ********************************************************
2023-07-31 09:22:19,809 p=4732 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:22:19,813 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *******************************************
2023-07-31 09:22:19,821 p=4732 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:22:19,825 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] ***************************************************
2023-07-31 09:22:19,833 p=4732 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:22:19,836 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *************************************************************
2023-07-31 09:22:19,844 p=4732 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:22:19,848 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] *********************************************
2023-07-31 09:22:20,099 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:20,103 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] *********************************************
2023-07-31 09:22:20,367 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:20,371 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ********************************************************************
2023-07-31 09:22:20,748 p=4732 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for
this module to work properly.

2023-07-31 09:22:20,748 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:20,751 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] *******************************************
2023-07-31 09:22:21,341 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:21,344 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] *****************************************************
2023-07-31 09:22:21,595 p=4732 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:22:21,598 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] **************************************************
2023-07-31 09:22:22,039 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:22,043 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] *****************
2023-07-31 09:22:22,580 p=4732 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:22:22,584 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] **************************************************
2023-07-31 09:22:22,924 p=4732 u=ansible n=ansible | ok: [centos2]
2023-07-31 09:22:22,927 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ***********************************************************
2023-07-31 09:22:23,301 p=4732 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:22:23,305 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Reboot the host if SonarQube is inactive] ******************************************
2023-07-31 09:22:54,948 p=4732 u=ansible n=ansible | changed: [centos2]
2023-07-31 09:22:54,953 p=4732 u=ansible n=ansible | TASK [install_sonarqube : debug] *****************************************************************************
2023-07-31 09:22:54,965 p=4732 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-31 09:22:54,969 p=4732 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *********************************************
2023-07-31 09:22:54,986 p=4732 u=ansible n=ansible | skipping: [centos2]
2023-07-31 09:22:55,007 p=4732 u=ansible n=ansible | PLAY RECAP ***************************************************************************************************
2023-07-31 09:22:55,008 p=4732 u=ansible n=ansible | centos2                    : ok=30   changed=4    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-31 10:56:08,251 p=5518 u=ansible n=ansible | PLAY [SonarQube playbook] ******************************************************************************************************************************************************
2023-07-31 10:56:08,255 p=5518 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************
2023-07-31 10:56:09,941 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:09,948 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***************************************************************************************************************
2023-07-31 10:56:09,984 p=5518 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 10:56:09,988 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ******************************************************************************************************************************************
2023-07-31 10:56:11,913 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:11,916 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **********************************************************************************************************************************
2023-07-31 10:56:12,526 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:12,529 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***********************************************************************************************************************
2023-07-31 10:56:12,827 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:12,830 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *******************************************************************************************************************
2023-07-31 10:56:14,405 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:14,408 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ******************************************************************************************************************
2023-07-31 10:56:14,985 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:14,988 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ******************************************************************************************************************
2023-07-31 10:56:15,285 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:15,289 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***********************************************************************************************************************
2023-07-31 10:56:15,296 p=5518 u=ansible n=ansible | skipping: [centos2]
2023-07-31 10:56:15,300 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ********************************************************************************************************************
2023-07-31 10:56:15,754 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:15,758 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *************************************************************************************************************
2023-07-31 10:56:16,064 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:16,067 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *****************************************************************************************
2023-07-31 10:56:16,303 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:16,306 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *****************************************************************************************
2023-07-31 10:56:16,539 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:16,542 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ************************************************************************************************************************************
2023-07-31 10:56:17,111 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:17,115 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *************************************************************************************************************************
2023-07-31 10:56:17,496 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:17,500 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ****************************************************************************************************
2023-07-31 10:56:17,846 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:17,849 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ***********************************************************************************************
2023-07-31 10:56:18,208 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:18,211 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ***********************************************************************************************************************
2023-07-31 10:56:18,508 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 10:56:18,511 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ***********************************************************************************************************
2023-07-31 10:56:18,742 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 10:56:18,745 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] **********************************************************************************************************************************
2023-07-31 11:00:26,785 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:26,793 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **************************************************************************************************
2023-07-31 11:00:27,109 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:00:27,113 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **************************************************************************************************************************
2023-07-31 11:00:29,932 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:29,936 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *************************************************************************************************************
2023-07-31 11:00:30,254 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:00:30,273 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] *********************************************************************************************************************
2023-07-31 11:00:30,301 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:00:30,304 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *******************************************************************************************************************************
2023-07-31 11:00:30,591 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:30,594 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ***************************************************************************************************************
2023-07-31 11:00:30,827 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:30,830 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ***************************************************************************************************************
2023-07-31 11:00:31,073 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:31,076 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] **************************************************************************************************************************************
2023-07-31 11:00:31,444 p=5518 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 11:00:31,444 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:00:31,447 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] *************************************************************************************************************
2023-07-31 11:00:31,718 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:31,721 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ***********************************************************************************************************************
2023-07-31 11:00:31,956 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:31,959 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] ********************************************************************************************************************
2023-07-31 11:00:32,373 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:00:32,376 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************************************
2023-07-31 11:00:32,813 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:32,816 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] ********************************************************************************************************************
2023-07-31 11:00:33,132 p=5518 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:00:33,135 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] *****************************************************************************************************************************
2023-07-31 11:00:33,479 p=5518 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:00:33,483 p=5518 u=ansible n=ansible | TASK [install_sonarqube : debug] ***********************************************************************************************************************************************
2023-07-31 11:00:33,493 p=5518 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "failed"
}
2023-07-31 11:00:33,497 p=5518 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***************************************************************************************************************
2023-07-31 11:00:33,505 p=5518 u=ansible n=ansible | skipping: [centos2]
2023-07-31 11:00:33,520 p=5518 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************
2023-07-31 11:00:33,520 p=5518 u=ansible n=ansible | centos2                    : ok=34   changed=10   unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-31 11:04:43,516 p=6219 u=ansible n=ansible | PLAY [SonarQube playbook] ******************************************************************************************************************************************************
2023-07-31 11:04:43,520 p=6219 u=ansible n=ansible | TASK [Gathering Facts] *********************************************************************************************************************************************************
2023-07-31 11:04:45,073 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:45,080 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ***************************************************************************************************************
2023-07-31 11:04:45,118 p=6219 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos2
2023-07-31 11:04:45,123 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ******************************************************************************************************************************************
2023-07-31 11:04:46,988 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:46,991 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **********************************************************************************************************************************
2023-07-31 11:04:48,444 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:48,447 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***********************************************************************************************************************
2023-07-31 11:04:48,807 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:48,811 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *******************************************************************************************************************
2023-07-31 11:04:51,224 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:51,227 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] ******************************************************************************************************************
2023-07-31 11:04:52,573 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:52,576 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] ******************************************************************************************************************
2023-07-31 11:04:52,945 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:52,949 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***********************************************************************************************************************
2023-07-31 11:04:52,958 p=6219 u=ansible n=ansible | skipping: [centos2]
2023-07-31 11:04:52,962 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ********************************************************************************************************************
2023-07-31 11:04:53,447 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:53,450 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *************************************************************************************************************
2023-07-31 11:04:53,766 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:53,769 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *****************************************************************************************
2023-07-31 11:04:54,018 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:54,021 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *****************************************************************************************
2023-07-31 11:04:54,265 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:54,268 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ************************************************************************************************************************************
2023-07-31 11:04:55,709 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:55,713 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqubedb database] *************************************************************************************************************************
2023-07-31 11:04:56,124 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:56,128 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ****************************************************************************************************
2023-07-31 11:04:56,495 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:56,498 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ***********************************************************************************************
2023-07-31 11:04:56,856 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:56,859 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ***********************************************************************************************************************
2023-07-31 11:04:57,165 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:57,168 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ***********************************************************************************************************
2023-07-31 11:04:57,821 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:57,824 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] **********************************************************************************************************************************
2023-07-31 11:04:57,832 p=6219 u=ansible n=ansible | skipping: [centos2]
2023-07-31 11:04:57,836 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] **************************************************************************************************
2023-07-31 11:04:58,082 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:58,085 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] **************************************************************************************************************************
2023-07-31 11:04:58,093 p=6219 u=ansible n=ansible | skipping: [centos2]
2023-07-31 11:04:58,098 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *************************************************************************************************************
2023-07-31 11:04:58,106 p=6219 u=ansible n=ansible | skipping: [centos2]
2023-07-31 11:04:58,110 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] *********************************************************************************************************************
2023-07-31 11:04:58,118 p=6219 u=ansible n=ansible | skipping: [centos2]
2023-07-31 11:04:58,122 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *******************************************************************************************************************************
2023-07-31 11:04:58,131 p=6219 u=ansible n=ansible | skipping: [centos2]
2023-07-31 11:04:58,135 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ***************************************************************************************************************
2023-07-31 11:04:58,393 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:58,397 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ***************************************************************************************************************
2023-07-31 11:04:58,645 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:58,648 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] **************************************************************************************************************************************
2023-07-31 11:04:59,014 p=6219 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 11:04:59,014 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:59,017 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] *************************************************************************************************************
2023-07-31 11:04:59,440 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:04:59,443 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ***********************************************************************************************************************
2023-07-31 11:04:59,686 p=6219 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:04:59,689 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] ********************************************************************************************************************
2023-07-31 11:05:00,120 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:05:00,123 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ***********************************************************************************
2023-07-31 11:05:00,639 p=6219 u=ansible n=ansible | changed: [centos2]
2023-07-31 11:05:00,642 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] ********************************************************************************************************************
2023-07-31 11:05:00,966 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:05:00,969 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] *****************************************************************************************************************************
2023-07-31 11:05:01,285 p=6219 u=ansible n=ansible | ok: [centos2]
2023-07-31 11:05:01,288 p=6219 u=ansible n=ansible | TASK [install_sonarqube : debug] ***********************************************************************************************************************************************
2023-07-31 11:05:01,297 p=6219 u=ansible n=ansible | ok: [centos2] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-07-31 11:05:01,301 p=6219 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ***************************************************************************************************************
2023-07-31 11:05:01,308 p=6219 u=ansible n=ansible | skipping: [centos2]
2023-07-31 11:05:01,337 p=6219 u=ansible n=ansible | PLAY RECAP *********************************************************************************************************************************************************************
2023-07-31 11:05:01,337 p=6219 u=ansible n=ansible | centos2                    : ok=29   changed=2    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-31 13:03:29,870 p=7008 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 13:03:29,874 p=7008 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 13:03:31,126 p=7008 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 13:03:31,139 p=7008 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 13:03:31,148 p=7008 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 13:03:31,152 p=7008 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *******************************************************************************************************************
2023-07-31 13:03:31,189 p=7008 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 13:03:31,193 p=7008 u=ansible n=ansible | TASK [install_sonarqube : Update apt] **********************************************************************************************************************************************
2023-07-31 13:03:36,277 p=7008 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 13:03:36,281 p=7008 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 13:03:36,694 p=7008 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "No package matching 'java-11-openjdk' is available"}
2023-07-31 13:03:36,694 p=7008 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 13:03:36,695 p=7008 u=ansible n=ansible | ubuntu2                    : ok=3    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 13:09:01,538 p=7206 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 13:09:01,542 p=7206 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 13:09:02,824 p=7206 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 13:09:02,832 p=7206 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 13:09:02,840 p=7206 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 13:09:02,843 p=7206 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *******************************************************************************************************************
2023-07-31 13:09:02,878 p=7206 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 13:09:02,882 p=7206 u=ansible n=ansible | TASK [install_sonarqube : Update apt] **********************************************************************************************************************************************
2023-07-31 13:09:03,828 p=7206 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 13:09:03,832 p=7206 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 13:11:39,898 p=7206 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 13:11:39,902 p=7206 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***************************************************************************************************************************
2023-07-31 13:11:40,132 p=7206 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Specified path /usr/lib/jvm/openjdk-11-jdk/bin/java does not exist"}
2023-07-31 13:11:40,133 p=7206 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 13:11:40,133 p=7206 u=ansible n=ansible | ubuntu2                    : ok=4    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 13:13:27,323 p=7382 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 13:13:27,328 p=7382 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 13:13:28,746 p=7382 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 13:13:28,754 p=7382 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 13:13:28,762 p=7382 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 13:13:28,765 p=7382 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *******************************************************************************************************************
2023-07-31 13:13:28,801 p=7382 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 13:13:28,805 p=7382 u=ansible n=ansible | TASK [install_sonarqube : Update apt] **********************************************************************************************************************************************
2023-07-31 13:13:29,584 p=7382 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 13:13:29,587 p=7382 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 13:13:30,110 p=7382 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 13:13:30,113 p=7382 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***************************************************************************************************************************
2023-07-31 13:13:30,319 p=7382 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 13:13:30,323 p=7382 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***********************************************************************************************************************
2023-07-31 13:13:30,698 p=7382 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "No package matching 'https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm' is available"}
2023-07-31 13:13:30,699 p=7382 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 13:13:30,699 p=7382 u=ansible n=ansible | ubuntu2                    : ok=5    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 13:54:27,096 p=7730 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 13:54:27,100 p=7730 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 13:54:28,578 p=7730 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:54:28,588 p=7730 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 13:54:28,626 p=7730 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 13:54:28,630 p=7730 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 13:54:32,214 p=7730 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:54:32,217 p=7730 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 13:54:32,997 p=7730 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:54:33,002 p=7730 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 13:54:33,362 p=7730 u=ansible n=ansible | changed: [centos3]
2023-07-31 13:54:33,365 p=7730 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************************************
2023-07-31 13:54:35,578 p=7730 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarch_nbd7myu.rpm is not installed"}
2023-07-31 13:54:35,579 p=7730 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 13:54:35,579 p=7730 u=ansible n=ansible | centos3                    : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 13:55:58,156 p=7929 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 13:55:58,160 p=7929 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 13:55:59,473 p=7929 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:55:59,480 p=7929 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 13:55:59,515 p=7929 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 13:55:59,518 p=7929 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 13:56:00,168 p=7929 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:56:00,172 p=7929 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 13:56:00,729 p=7929 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:56:00,732 p=7929 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 13:56:01,006 p=7929 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:56:01,009 p=7929 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************************************
2023-07-31 13:56:02,757 p=7929 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchrgvqns6g.rpm is not installed"}
2023-07-31 13:56:02,758 p=7929 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 13:56:02,758 p=7929 u=ansible n=ansible | centos3                    : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 13:57:50,368 p=8083 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 13:57:50,372 p=8083 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 13:57:51,629 p=8083 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:57:51,640 p=8083 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 13:57:51,688 p=8083 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 13:57:51,693 p=8083 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 13:57:52,497 p=8083 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:57:52,500 p=8083 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 13:57:53,100 p=8083 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:57:53,103 p=8083 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 13:57:53,409 p=8083 u=ansible n=ansible | ok: [centos3]
2023-07-31 13:57:53,413 p=8083 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] **********************************************************************************************
2023-07-31 13:57:55,845 p=8083 u=ansible n=ansible | changed: [centos3]
2023-07-31 13:57:55,849 p=8083 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************************************
2023-07-31 13:57:57,813 p=8083 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchg9blsw46.rpm is not installed"}
2023-07-31 13:57:57,814 p=8083 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 13:57:57,814 p=8083 u=ansible n=ansible | centos3                    : ok=6    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 14:07:57,871 p=8283 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:07:57,875 p=8283 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:07:59,403 p=8283 u=ansible n=ansible | ok: [centos3]
2023-07-31 14:07:59,410 p=8283 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:07:59,444 p=8283 u=ansible n=ansible | ERROR! couldn't resolve module/action 'yum_key'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 17, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Import GPG key for PostgreSQL repository
  ^ here

2023-07-31 14:09:56,656 p=8351 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:09:56,660 p=8351 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:09:58,045 p=8351 u=ansible n=ansible | ok: [centos3]
2023-07-31 14:09:58,053 p=8351 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:09:58,087 p=8351 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 14:09:58,091 p=8351 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 14:09:58,894 p=8351 u=ansible n=ansible | ok: [centos3]
2023-07-31 14:09:58,897 p=8351 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 14:09:59,511 p=8351 u=ansible n=ansible | ok: [centos3]
2023-07-31 14:09:59,513 p=8351 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 14:09:59,870 p=8351 u=ansible n=ansible | ok: [centos3]
2023-07-31 14:09:59,875 p=8351 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] **********************************************************************************************
2023-07-31 14:10:01,272 p=8351 u=ansible n=ansible | ok: [centos3]
2023-07-31 14:10:01,275 p=8351 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************************************
2023-07-31 14:10:03,131 p=8351 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchyr8xrgka.rpm is not installed"}
2023-07-31 14:10:03,132 p=8351 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 14:10:03,132 p=8351 u=ansible n=ansible | centos3                    : ok=6    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 14:20:24,034 p=8559 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:20:24,038 p=8559 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:20:25,415 p=8559 u=ansible n=ansible | ok: [centos3]
2023-07-31 14:20:25,422 p=8559 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:20:25,459 p=8559 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 14:20:25,462 p=8559 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 14:26:52,822 p=8559 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 14:34:08,929 p=8795 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:34:08,933 p=8795 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:34:10,639 p=8795 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:34:10,650 p=8795 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:34:10,660 p=8795 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 14:34:10,665 p=8795 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 14:34:10,703 p=8795 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 14:34:10,708 p=8795 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 14:34:12,009 p=8795 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:34:12,012 p=8795 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 14:34:12,706 p=8795 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:34:12,714 p=8795 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 14:34:13,135 p=8795 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:34:13,140 p=8795 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL 13] *********************************************************************************************************
2023-07-31 14:34:16,174 p=8795 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 14:34:16,179 p=8795 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL 13 repository] **********************************************************************************************************
2023-07-31 14:35:05,808 p=8795 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:http://apt.postgresql.org/pub/repos/apt/dists/focal-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-31 14:35:05,810 p=8795 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 14:35:05,811 p=8795 u=ansible n=ansible | ubuntu2                    : ok=6    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 14:37:30,563 p=9053 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:37:30,567 p=9053 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:37:32,611 p=9053 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:37:32,621 p=9053 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:37:32,631 p=9053 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 14:37:32,635 p=9053 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 14:37:32,676 p=9053 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 14:37:32,681 p=9053 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 14:37:34,203 p=9053 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:37:34,207 p=9053 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 14:37:34,817 p=9053 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:37:34,820 p=9053 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 14:37:35,099 p=9053 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:37:35,102 p=9053 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL 13] *********************************************************************************************************
2023-07-31 14:37:39,187 p=9053 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:37:39,191 p=9053 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL 13 repository to sources.list.d] ****************************************************************************************
2023-07-31 14:37:39,430 p=9053 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 14:37:39,433 p=9053 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 14:39:00,797 p=9053 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/focal-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details., W:GPG error: https://download.docker.com/linux/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8, E:The repository 'https://download.docker.com/linux/ubuntu jammy InRelease' is not signed."}
2023-07-31 14:39:00,798 p=9053 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 14:39:00,798 p=9053 u=ansible n=ansible | ubuntu2                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 14:43:03,447 p=9289 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:43:03,452 p=9289 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:43:04,964 p=9289 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:43:04,973 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:43:04,982 p=9289 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 14:43:04,986 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 14:43:05,021 p=9289 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 14:43:05,025 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 14:43:06,674 p=9289 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:43:06,678 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 14:43:07,302 p=9289 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:43:07,306 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 14:43:07,561 p=9289 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:43:07,566 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL 13] *********************************************************************************************************
2023-07-31 14:43:08,853 p=9289 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:43:08,856 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL 13 repository to sources.list.d] ****************************************************************************************
2023-07-31 14:43:09,080 p=9289 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:43:09,084 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 14:43:13,229 p=9289 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 14:43:13,233 p=9289 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 13] *****************************************************************************************************************
2023-07-31 14:43:13,675 p=9289 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "No package matching 'postgresql-13' is available"}
2023-07-31 14:43:13,675 p=9289 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 14:43:13,675 p=9289 u=ansible n=ansible | ubuntu2                    : ok=8    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 14:44:19,839 p=9518 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:44:19,843 p=9518 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:44:21,186 p=9518 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:44:21,195 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:44:21,204 p=9518 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 14:44:21,208 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 14:44:21,246 p=9518 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 14:44:21,250 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 14:44:22,057 p=9518 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:44:22,060 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 14:44:22,635 p=9518 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:44:22,639 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 14:44:22,857 p=9518 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:44:22,860 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 14:44:25,051 p=9518 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:44:25,055 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 14:44:25,361 p=9518 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:44:25,366 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 14:44:28,805 p=9518 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 14:44:28,809 p=9518 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL] ********************************************************************************************************************
2023-07-31 14:44:29,771 p=9518 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"cache_update_time": 1690789468, "cache_updated": false, "changed": false, "msg": "'/usr/bin/apt-get -y -o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"       install 'postgresql=15+250.pgdg20.04+1'' failed: E: Unable to correct problems, you have held broken packages.\n", "rc": 100, "stderr": "E: Unable to correct problems, you have held broken packages.\n", "stderr_lines": ["E: Unable to correct problems, you have held broken packages."], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nSome packages could not be installed. This may mean that you have\nrequested an impossible situation or if you are using the unstable\ndistribution that some required packages have not yet been created\nor been moved out of Incoming.\nThe following information may help to resolve the situation:\n\nThe following packages have unmet dependencies:\n postgresql : Depends: postgresql-15 but it is not installable\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "Some packages could not be installed. This may mean that you have", "requested an impossible situation or if you are using the unstable", "distribution that some required packages have not yet been created", "or been moved out of Incoming.", "The following information may help to resolve the situation:", "", "The following packages have unmet dependencies:", " postgresql : Depends: postgresql-15 but it is not installable"]}
2023-07-31 14:44:29,772 p=9518 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 14:44:29,772 p=9518 u=ansible n=ansible | ubuntu2                    : ok=8    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 14:48:47,186 p=9742 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:48:47,190 p=9742 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:48:48,838 p=9742 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:48:48,847 p=9742 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:48:48,856 p=9742 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 14:48:48,859 p=9742 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 14:48:48,899 p=9742 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 14:48:48,903 p=9742 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 14:48:49,771 p=9742 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:48:49,774 p=9742 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 14:48:50,504 p=9742 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:48:50,508 p=9742 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 14:48:50,722 p=9742 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:48:50,725 p=9742 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 14:48:52,711 p=9742 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:48:52,715 p=9742 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 14:48:52,951 p=9742 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 14:48:52,954 p=9742 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 14:49:31,557 p=9742 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/focal-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details., E:The repository 'http://apt.postgresql.org/pub/repos/apt `lsb_release Release' does not have a Release file."}
2023-07-31 14:49:31,560 p=9742 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 14:49:31,561 p=9742 u=ansible n=ansible | ubuntu2                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 14:54:52,462 p=10010 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:54:52,466 p=10010 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:54:53,914 p=10010 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:54:53,924 p=10010 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:54:53,933 p=10010 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 14:54:53,937 p=10010 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 14:54:53,972 p=10010 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 14:54:53,975 p=10010 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 14:54:55,688 p=10010 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:54:55,691 p=10010 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 14:54:56,381 p=10010 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:54:56,385 p=10010 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 14:54:56,603 p=10010 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:54:56,606 p=10010 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 14:54:57,934 p=10010 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:54:57,938 p=10010 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 14:54:58,158 p=10010 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "argument 'backup' is of type <class 'str'> and we were unable to convert to bool: The value 'yesß' is not a valid boolean.  Valid booleans include: 0, 1, 'false', '0', 'yes', 'n', 'no', 't', 'y', 'f', '1', 'true', 'on', 'off'"}
2023-07-31 14:54:58,158 p=10010 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 14:54:58,158 p=10010 u=ansible n=ansible | ubuntu2                    : ok=6    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 14:55:16,598 p=10174 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 14:55:16,602 p=10174 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 14:55:17,515 p=10174 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:55:17,524 p=10174 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 14:55:17,531 p=10174 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 14:55:17,535 p=10174 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 14:55:17,571 p=10174 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 14:55:17,575 p=10174 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 14:55:18,321 p=10174 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:55:18,324 p=10174 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 14:55:18,840 p=10174 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:55:18,843 p=10174 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 14:55:19,063 p=10174 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:55:19,066 p=10174 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 14:55:20,814 p=10174 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 14:55:20,819 p=10174 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 14:55:21,095 p=10174 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 14:55:21,099 p=10174 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 14:56:21,037 p=10174 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., E:The repository 'http://apt.postgresql.org/pub/repos/apt `lsb_release Release' does not have a Release file."}
2023-07-31 14:56:21,039 p=10174 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 14:56:21,039 p=10174 u=ansible n=ansible | ubuntu2                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 15:02:40,761 p=10410 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:02:40,767 p=10410 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:02:42,237 p=10410 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:02:42,249 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:02:42,260 p=10410 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:02:42,264 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 15:02:42,303 p=10410 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:02:42,307 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 15:02:43,794 p=10410 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:02:43,798 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:02:44,377 p=10410 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:02:44,380 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:02:44,593 p=10410 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:02:44,596 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 15:02:45,815 p=10410 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:02:45,821 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 15:02:46,059 p=10410 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:02:46,062 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 15:02:53,473 p=10410 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:02:53,478 p=10410 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL] ********************************************************************************************************************
2023-07-31 15:02:54,550 p=10410 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"cache_update_time": 1690790572, "cache_updated": false, "changed": false, "msg": "'/usr/bin/apt-get -y -o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"       install 'postgresql=15+250.pgdg22.04+1' 'postgresql-contrib=15+250.pgdg22.04+1'' failed: E: Unable to correct problems, you have held broken packages.\n", "rc": 100, "stderr": "E: Unable to correct problems, you have held broken packages.\n", "stderr_lines": ["E: Unable to correct problems, you have held broken packages."], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nSome packages could not be installed. This may mean that you have\nrequested an impossible situation or if you are using the unstable\ndistribution that some required packages have not yet been created\nor been moved out of Incoming.\nThe following information may help to resolve the situation:\n\nThe following packages have unmet dependencies:\n postgresql : Depends: postgresql-15 but it is not installable\n postgresql-contrib : Depends: postgresql-contrib-15 but it is not installable\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "Some packages could not be installed. This may mean that you have", "requested an impossible situation or if you are using the unstable", "distribution that some required packages have not yet been created", "or been moved out of Incoming.", "The following information may help to resolve the situation:", "", "The following packages have unmet dependencies:", " postgresql : Depends: postgresql-15 but it is not installable", " postgresql-contrib : Depends: postgresql-contrib-15 but it is not installable"]}
2023-07-31 15:02:54,551 p=10410 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:02:54,551 p=10410 u=ansible n=ansible | ubuntu2                    : ok=8    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 15:04:07,360 p=10666 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:04:07,364 p=10666 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:04:08,973 p=10666 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:04:08,986 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:04:08,998 p=10666 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:04:09,004 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 15:04:09,051 p=10666 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:04:09,058 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 15:04:09,928 p=10666 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:04:09,931 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:04:10,493 p=10666 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:04:10,496 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:04:10,721 p=10666 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:04:10,725 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 15:04:12,224 p=10666 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:04:12,227 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 15:04:12,464 p=10666 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:04:12,468 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 15:04:14,163 p=10666 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:04:14,167 p=10666 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL] ********************************************************************************************************************
2023-07-31 15:04:14,585 p=10666 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "No package matching 'postgresql-13' is available"}
2023-07-31 15:04:14,585 p=10666 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:04:14,585 p=10666 u=ansible n=ansible | ubuntu2                    : ok=8    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 15:10:02,860 p=10885 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:10:02,864 p=10885 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:10:04,207 p=10885 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:10:04,216 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:10:04,224 p=10885 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:10:04,228 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 15:10:04,263 p=10885 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:10:04,266 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 15:10:05,029 p=10885 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:10:05,033 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:10:05,700 p=10885 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:10:05,704 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:10:05,913 p=10885 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:10:05,916 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 15:10:07,459 p=10885 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:10:07,465 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 15:10:07,714 p=10885 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:10:07,719 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 15:10:12,415 p=10885 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:10:12,420 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] *****************************************************************************************************************
2023-07-31 15:11:01,662 p=10885 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:11:01,666 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ******************************************************************************************************
2023-07-31 15:11:02,064 p=10885 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:11:02,068 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] *********************************************************************************************************************
2023-07-31 15:11:02,341 p=10885 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 15:11:02,341 p=10885 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:11:02,344 p=10885 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] **********************************************************************************************************
2023-07-31 15:11:02,622 p=10885 u=ansible n=ansible | [WARNING]: Module remote_tmp /var/lib/postgresql/.ansible/tmp did not exist and was created with a mode of 0700, this may cause issues when running as another
user. To avoid this, create the remote_tmp dir with the correct permissions manually

2023-07-31 15:11:02,623 p=10885 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (psycopg2) on ubuntu's Python /usr/bin/python3. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 15:11:02,623 p=10885 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:11:02,623 p=10885 u=ansible n=ansible | ubuntu2                    : ok=11   changed=3    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 15:12:44,827 p=11208 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:12:44,831 p=11208 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:12:46,271 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:46,279 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:12:46,287 p=11208 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:12:46,290 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 15:12:46,326 p=11208 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:12:46,330 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 15:12:47,429 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:47,432 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:12:48,034 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:48,038 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:12:48,248 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:48,251 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 15:12:49,513 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:49,516 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 15:12:49,749 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:49,753 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 15:12:51,538 p=11208 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:12:51,541 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] *****************************************************************************************************************
2023-07-31 15:12:52,067 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:52,071 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ******************************************************************************************************
2023-07-31 15:12:52,434 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:52,437 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] **********************************************************************************************************************
2023-07-31 15:12:57,209 p=11208 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:12:57,216 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] *********************************************************************************************************************
2023-07-31 15:12:57,542 p=11208 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 15:12:57,542 p=11208 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:12:57,546 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] **********************************************************************************************************
2023-07-31 15:12:57,993 p=11208 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:12:57,996 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **************************************************************************************
2023-07-31 15:12:58,313 p=11208 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:12:58,318 p=11208 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] *********************************************************************************
2023-07-31 15:12:58,594 p=11208 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: psycopg2.OperationalError: connection to server on socket "/var/run/postgresql/.s.PGSQL.5432" failed: FATAL:  database "sonarqubedb" does not exist
2023-07-31 15:12:58,595 p=11208 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Could not connect to database: connection to server on socket \"/var/run/postgresql/.s.PGSQL.5432\" failed: FATAL:  database \"sonarqubedb\" does not exist\n"}
2023-07-31 15:12:58,595 p=11208 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:12:58,595 p=11208 u=ansible n=ansible | ubuntu2                    : ok=14   changed=4    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 15:19:28,437 p=11617 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:19:28,441 p=11617 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:19:29,965 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:29,973 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:19:29,980 p=11617 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:19:29,984 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 15:19:30,020 p=11617 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:19:30,023 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 15:19:30,769 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:30,773 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:19:31,297 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:31,300 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:19:31,505 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:31,509 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 15:19:32,748 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:32,752 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 15:19:32,972 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:32,976 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 15:19:35,412 p=11617 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:19:35,416 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] *****************************************************************************************************************
2023-07-31 15:19:35,932 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:35,935 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ******************************************************************************************************
2023-07-31 15:19:36,301 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:36,305 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] **********************************************************************************************************************
2023-07-31 15:19:36,825 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:36,828 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] *********************************************************************************************************************
2023-07-31 15:19:37,083 p=11617 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 15:19:37,083 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:37,087 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] **********************************************************************************************************
2023-07-31 15:19:37,355 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:37,358 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **************************************************************************************
2023-07-31 15:19:37,638 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:37,642 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ********************************************************************************
2023-07-31 15:19:37,916 p=11617 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:19:37,919 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *********************************************************************************************************
2023-07-31 15:19:38,141 p=11617 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:19:38,144 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *********************************************************************************************
2023-07-31 15:19:38,358 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:19:38,361 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ********************************************************************************************************************
2023-07-31 15:23:49,992 p=11617 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:23:50,012 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ************************************************************************************
2023-07-31 15:23:50,224 p=11617 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:23:50,228 p=11617 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ************************************************************************************************************
2023-07-31 15:23:50,915 p=11617 u=ansible n=ansible | fatal: [ubuntu2]: FAILED! => {"changed": false, "msg": "Failed to find handler for \"/opt/sonarqube_dir/sonarqube-9.8.0.63668.zip\". Make sure the required command to extract the file is installed.\nCommand \"/usr/bin/tar\" could not handle archive: Unable to list files in the archive: /usr/bin/tar: This does not look like a tar archive\n/usr/bin/tar: Skipping to next header\n/usr/bin/tar: Exiting with failure status due to previous errors\n\nCommand \"/usr/bin/tar\" could not handle archive: Unable to list files in the archive: gzip: stdin has more than one entry--rest ignored\n/usr/bin/tar: Child returned status 2\n/usr/bin/tar: Error is not recoverable: exiting now\n\nCommand \"/usr/bin/tar\" could not handle archive: Unable to list files in the archive: xz: (stdin): File format not recognized\n/usr/bin/tar: Child returned status 1\n/usr/bin/tar: Error is not recoverable: exiting now\n\nCommand \"/usr/bin/tar\" could not handle archive: Unable to list files in the archive: tar (child): bzip2: Cannot exec: No such file or directory\ntar (child): Error is not recoverable: exiting now\n/usr/bin/tar: Child returned status 2\n/usr/bin/tar: Error is not recoverable: exiting now\n\nCommand \"/usr/bin/tar\" could not handle archive: Unable to list files in the archive: zstd: /*stdin*\\: unsupported format \n/usr/bin/tar: Child returned status 1\n/usr/bin/tar: Error is not recoverable: exiting now\n\nUnable to find required 'unzip' or 'zipinfo' binary in the path.\nUnable to find required 'unzip' or 'unzip' binary in the path."}
2023-07-31 15:23:50,916 p=11617 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:23:50,916 p=11617 u=ansible n=ansible | ubuntu2                    : ok=19   changed=4    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 15:34:19,747 p=12076 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:34:19,752 p=12076 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:34:21,125 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:21,133 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:34:21,141 p=12076 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:34:21,145 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 15:34:21,190 p=12076 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:34:21,194 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 15:34:21,935 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:21,939 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:34:22,456 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:22,459 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:34:22,666 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:22,669 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 15:34:24,656 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:24,660 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 15:34:24,880 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:24,884 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 15:34:26,916 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:26,919 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] *****************************************************************************************************************
2023-07-31 15:34:27,443 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:27,446 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ******************************************************************************************************
2023-07-31 15:34:27,819 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:27,823 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] **********************************************************************************************************************
2023-07-31 15:34:28,338 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:28,341 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] *********************************************************************************************************************
2023-07-31 15:34:28,597 p=12076 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 15:34:28,597 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:28,600 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] **********************************************************************************************************
2023-07-31 15:34:28,873 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:28,876 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **************************************************************************************
2023-07-31 15:34:29,160 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:29,164 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ********************************************************************************
2023-07-31 15:34:29,434 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:29,439 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *********************************************************************************************************
2023-07-31 15:34:29,680 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:29,683 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *********************************************************************************************
2023-07-31 15:34:30,147 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:30,151 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ********************************************************************************************************************
2023-07-31 15:34:30,158 p=12076 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:34:30,163 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ************************************************************************************
2023-07-31 15:34:30,321 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:30,326 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Install unzip package denpendency] *****************************************************************************************************
2023-07-31 15:34:35,018 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:35,022 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ************************************************************************************************************
2023-07-31 15:34:37,636 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:37,640 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] ***********************************************************************************************
2023-07-31 15:34:37,879 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:37,883 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] *******************************************************************************************************
2023-07-31 15:34:37,913 p=12076 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:34:37,917 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *****************************************************************************************************************
2023-07-31 15:34:38,139 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:38,142 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] *************************************************************************************************
2023-07-31 15:34:38,303 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:38,306 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] *************************************************************************************************
2023-07-31 15:34:38,478 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:38,481 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ************************************************************************************************************************
2023-07-31 15:34:38,780 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:38,784 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] ***********************************************************************************************
2023-07-31 15:34:38,953 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:38,956 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] *********************************************************************************************************
2023-07-31 15:34:39,125 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:39,128 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] ******************************************************************************************************
2023-07-31 15:34:39,508 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:39,512 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] *********************************************************************
2023-07-31 15:34:39,839 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:39,843 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] ******************************************************************************************************
2023-07-31 15:34:40,226 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:40,230 p=12076 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ***************************************************************************************************************
2023-07-31 15:34:40,515 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:40,519 p=12076 u=ansible n=ansible | TASK [install_sonarqube : debug] *********************************************************************************************************************************
2023-07-31 15:34:40,531 p=12076 u=ansible n=ansible | ok: [ubuntu2] => {
    "sonarqube_service.status.ActiveState": "inactive"
}
2023-07-31 15:34:40,544 p=12076 u=ansible n=ansible | RUNNING HANDLER [Reload SonarQube systemd service] ***************************************************************************************************************
2023-07-31 15:34:41,930 p=12076 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:34:41,936 p=12076 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:34:41,936 p=12076 u=ansible n=ansible | ubuntu2                    : ok=34   changed=14   unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-31 15:41:03,933 p=12841 u=ansible n=ansible | PLAY [Nexus playbook] ********************************************************************************************************************************************
2023-07-31 15:41:03,937 p=12841 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:41:05,552 p=12841 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:41:05,575 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:41:05,588 p=12841 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] *********************************************************************************************************
2023-07-31 15:41:05,597 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:41:05,607 p=12841 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos3
2023-07-31 15:41:05,614 p=12841 u=ansible n=ansible | TASK [install_nexus : Update yum] ********************************************************************************************************************************
2023-07-31 15:41:06,668 p=12841 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:41:06,675 p=12841 u=ansible n=ansible | TASK [install_nexus : Install Java] ******************************************************************************************************************************
2023-07-31 15:43:42,034 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:43:42,043 p=12841 u=ansible n=ansible | TASK [install_nexus : Create folder before download] *************************************************************************************************************
2023-07-31 15:43:42,411 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:43:42,416 p=12841 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] *****************************************************************************************************
2023-07-31 15:43:42,713 p=12841 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:43:42,719 p=12841 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ***********************************************************************************************************************
2023-07-31 15:48:48,105 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:48,117 p=12841 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ********************************************************************************************
2023-07-31 15:48:48,452 p=12841 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:48:48,459 p=12841 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ********************************************************************************************************************
2023-07-31 15:48:53,736 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:53,742 p=12841 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ***************************************************************************************************
2023-07-31 15:48:54,072 p=12841 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:48:54,078 p=12841 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ***********************************************************************************************************
2023-07-31 15:48:54,106 p=12841 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:48:54,112 p=12841 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] *************************************************************************************************************************
2023-07-31 15:48:54,413 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:54,418 p=12841 u=ansible n=ansible | TASK [install_nexus : Add user nexus] ****************************************************************************************************************************
2023-07-31 15:48:54,831 p=12841 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 15:48:54,831 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:54,836 p=12841 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *******************************************************************************************************
2023-07-31 15:48:55,384 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:55,389 p=12841 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] ***********************************************************************************************
2023-07-31 15:48:55,629 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:55,635 p=12841 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ***************************************************************************************************
2023-07-31 15:48:55,934 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:55,940 p=12841 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] **************************************************************************************************************
2023-07-31 15:48:56,454 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:56,459 p=12841 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] *************************************************************************
2023-07-31 15:48:56,872 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:56,878 p=12841 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] **************************************************************************************************************
2023-07-31 15:48:57,483 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:57,488 p=12841 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] ***********************************************************************************************************************
2023-07-31 15:48:57,976 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:48:57,982 p=12841 u=ansible n=ansible | TASK [install_nexus : debug] *************************************************************************************************************************************
2023-07-31 15:48:57,993 p=12841 u=ansible n=ansible | ok: [centos3] => {
    "nexus_service_status.status.ActiveState": "inactive"
}
2023-07-31 15:48:57,997 p=12841 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] *********************************************************************************************************
2023-07-31 15:48:58,012 p=12841 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:48:58,020 p=12841 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:48:58,024 p=12841 u=ansible n=ansible | TASK [install_nexus : Update apt] ********************************************************************************************************************************
2023-07-31 15:48:59,672 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:48:59,676 p=12841 u=ansible n=ansible | TASK [install_nexus : Install Java] ******************************************************************************************************************************
2023-07-31 15:49:00,379 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:00,382 p=12841 u=ansible n=ansible | TASK [install_nexus : Create folder before download] *************************************************************************************************************
2023-07-31 15:49:00,586 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:00,589 p=12841 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] *****************************************************************************************************
2023-07-31 15:49:01,473 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:01,478 p=12841 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ***********************************************************************************************************************
2023-07-31 15:49:01,493 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:49:01,498 p=12841 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ********************************************************************************************
2023-07-31 15:49:01,734 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:01,738 p=12841 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ********************************************************************************************************************
2023-07-31 15:49:01,748 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:49:01,752 p=12841 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ***************************************************************************************************
2023-07-31 15:49:01,762 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:49:01,767 p=12841 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ***********************************************************************************************************
2023-07-31 15:49:01,780 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:49:01,785 p=12841 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] *************************************************************************************************************************
2023-07-31 15:49:01,795 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:49:01,799 p=12841 u=ansible n=ansible | TASK [install_nexus : Add user nexus] ****************************************************************************************************************************
2023-07-31 15:49:02,092 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:02,095 p=12841 u=ansible n=ansible | TASK [install_nexus : Add line no password to sudoers file] ******************************************************************************************************
2023-07-31 15:49:02,272 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:02,276 p=12841 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *******************************************************************************************************
2023-07-31 15:49:02,784 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:02,787 p=12841 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] ***********************************************************************************************
2023-07-31 15:49:03,405 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:03,409 p=12841 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ***************************************************************************************************
2023-07-31 15:49:03,620 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:03,624 p=12841 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] **************************************************************************************************************
2023-07-31 15:49:04,014 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:04,017 p=12841 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] *************************************************************************
2023-07-31 15:49:04,659 p=12841 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:49:04,663 p=12841 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] **************************************************************************************************************
2023-07-31 15:49:05,024 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:05,027 p=12841 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] ***********************************************************************************************************************
2023-07-31 15:49:05,345 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:05,349 p=12841 u=ansible n=ansible | TASK [install_nexus : debug] *************************************************************************************************************************************
2023-07-31 15:49:05,360 p=12841 u=ansible n=ansible | ok: [ubuntu2] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-31 15:49:05,387 p=12841 u=ansible n=ansible | RUNNING HANDLER [Reload Nexus systemd service] *******************************************************************************************************************
2023-07-31 15:49:07,672 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:49:07,679 p=12841 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:49:07,684 p=12841 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:49:08,564 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:49:08,865 p=12841 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:49:08,878 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:49:08,888 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:49:08,927 p=12841 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 15:49:08,933 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 15:49:10,395 p=12841 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:49:10,403 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:51:02,651 p=12841 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:51:02,663 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:51:03,086 p=12841 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Specified path /usr/lib/jvm/java-11-openjdk/bin/java does not exist"}
2023-07-31 15:51:03,090 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 15:51:03,109 p=12841 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:51:03,114 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 15:51:04,419 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:04,423 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:51:04,993 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:04,996 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:51:05,163 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:05,167 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 15:51:06,834 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:06,840 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 15:51:07,053 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:07,057 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 15:51:12,243 p=12841 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:51:12,247 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] *****************************************************************************************************************
2023-07-31 15:51:12,826 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:12,830 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ******************************************************************************************************
2023-07-31 15:51:13,105 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:13,109 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] **********************************************************************************************************************
2023-07-31 15:51:13,742 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:13,746 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] *********************************************************************************************************************
2023-07-31 15:51:13,949 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:13,953 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] **********************************************************************************************************
2023-07-31 15:51:14,256 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:14,261 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **************************************************************************************
2023-07-31 15:51:14,584 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:14,589 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ********************************************************************************
2023-07-31 15:51:14,959 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:14,963 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *********************************************************************************************************
2023-07-31 15:51:15,129 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:15,132 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *********************************************************************************************
2023-07-31 15:51:15,778 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:15,782 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ********************************************************************************************************************
2023-07-31 15:51:15,791 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:51:15,795 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ************************************************************************************
2023-07-31 15:51:15,971 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:15,975 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Install unzip package denpendency] *****************************************************************************************************
2023-07-31 15:51:16,592 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:16,595 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ************************************************************************************************************
2023-07-31 15:51:16,605 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:51:16,609 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] ***********************************************************************************************
2023-07-31 15:51:16,618 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:51:16,623 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] *******************************************************************************************************
2023-07-31 15:51:16,632 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:51:16,637 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *****************************************************************************************************************
2023-07-31 15:51:16,646 p=12841 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:51:16,650 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] *************************************************************************************************
2023-07-31 15:51:16,819 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:16,822 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] *************************************************************************************************
2023-07-31 15:51:16,995 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:16,999 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ************************************************************************************************************************
2023-07-31 15:51:17,226 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:17,230 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] ***********************************************************************************************
2023-07-31 15:51:17,436 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:17,440 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] *********************************************************************************************************
2023-07-31 15:51:17,604 p=12841 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:51:17,607 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] ******************************************************************************************************
2023-07-31 15:51:17,942 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:17,946 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] *********************************************************************
2023-07-31 15:51:18,290 p=12841 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:51:18,294 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] ******************************************************************************************************
2023-07-31 15:51:18,564 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:18,570 p=12841 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ***************************************************************************************************************
2023-07-31 15:51:18,827 p=12841 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:51:18,831 p=12841 u=ansible n=ansible | TASK [install_sonarqube : debug] *********************************************************************************************************************************
2023-07-31 15:51:18,841 p=12841 u=ansible n=ansible | ok: [ubuntu2] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-07-31 15:51:18,856 p=12841 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:51:18,856 p=12841 u=ansible n=ansible | centos3                    : ok=26   changed=15   unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 15:51:18,856 p=12841 u=ansible n=ansible | ubuntu2                    : ok=46   changed=4    unreachable=0    failed=0    skipped=12   rescued=0    ignored=0   
2023-07-31 15:57:02,410 p=14376 u=ansible n=ansible | PLAY [Nexus playbook] ********************************************************************************************************************************************
2023-07-31 15:57:02,415 p=14376 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:57:03,869 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:04,115 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:04,127 p=14376 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] *********************************************************************************************************
2023-07-31 15:57:04,135 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:04,146 p=14376 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos3
2023-07-31 15:57:04,152 p=14376 u=ansible n=ansible | TASK [install_nexus : Update yum] ********************************************************************************************************************************
2023-07-31 15:57:05,309 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:05,315 p=14376 u=ansible n=ansible | TASK [install_nexus : Install Java] ******************************************************************************************************************************
2023-07-31 15:57:05,914 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:05,920 p=14376 u=ansible n=ansible | TASK [install_nexus : Create folder before download] *************************************************************************************************************
2023-07-31 15:57:06,225 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:06,230 p=14376 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] *****************************************************************************************************
2023-07-31 15:57:06,928 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:06,934 p=14376 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ***********************************************************************************************************************
2023-07-31 15:57:06,941 p=14376 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:57:06,948 p=14376 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ********************************************************************************************
2023-07-31 15:57:07,229 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:07,238 p=14376 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ********************************************************************************************************************
2023-07-31 15:57:07,250 p=14376 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:57:07,258 p=14376 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ***************************************************************************************************
2023-07-31 15:57:07,267 p=14376 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:57:07,275 p=14376 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ***********************************************************************************************************
2023-07-31 15:57:07,283 p=14376 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:57:07,290 p=14376 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] *************************************************************************************************************************
2023-07-31 15:57:07,300 p=14376 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:57:07,307 p=14376 u=ansible n=ansible | TASK [install_nexus : Add user nexus] ****************************************************************************************************************************
2023-07-31 15:57:07,761 p=14376 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 15:57:07,761 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:07,770 p=14376 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *******************************************************************************************************
2023-07-31 15:57:08,565 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:08,571 p=14376 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] ***********************************************************************************************
2023-07-31 15:57:09,306 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:09,311 p=14376 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ***************************************************************************************************
2023-07-31 15:57:09,680 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:09,687 p=14376 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] **************************************************************************************************************
2023-07-31 15:57:10,252 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:10,259 p=14376 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] *************************************************************************
2023-07-31 15:57:10,867 p=14376 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:57:10,873 p=14376 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] **************************************************************************************************************
2023-07-31 15:57:11,340 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:11,346 p=14376 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] ***********************************************************************************************************************
2023-07-31 15:57:11,658 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:11,664 p=14376 u=ansible n=ansible | TASK [install_nexus : debug] *************************************************************************************************************************************
2023-07-31 15:57:11,672 p=14376 u=ansible n=ansible | ok: [centos3] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-31 15:57:11,676 p=14376 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] *********************************************************************************************************
2023-07-31 15:57:11,688 p=14376 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:57:11,696 p=14376 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:57:11,699 p=14376 u=ansible n=ansible | TASK [install_nexus : Update apt] ********************************************************************************************************************************
2023-07-31 15:57:12,475 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:12,478 p=14376 u=ansible n=ansible | TASK [install_nexus : Install Java] ******************************************************************************************************************************
2023-07-31 15:57:13,007 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:13,010 p=14376 u=ansible n=ansible | TASK [install_nexus : Create folder before download] *************************************************************************************************************
2023-07-31 15:57:13,171 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:13,174 p=14376 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] *****************************************************************************************************
2023-07-31 15:57:13,724 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:13,728 p=14376 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ***********************************************************************************************************************
2023-07-31 15:57:13,735 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:13,738 p=14376 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ********************************************************************************************
2023-07-31 15:57:13,910 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:13,913 p=14376 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ********************************************************************************************************************
2023-07-31 15:57:13,920 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:13,924 p=14376 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ***************************************************************************************************
2023-07-31 15:57:13,932 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:13,935 p=14376 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ***********************************************************************************************************
2023-07-31 15:57:13,942 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:13,945 p=14376 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] *************************************************************************************************************************
2023-07-31 15:57:13,953 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:13,956 p=14376 u=ansible n=ansible | TASK [install_nexus : Add user nexus] ****************************************************************************************************************************
2023-07-31 15:57:14,155 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:14,158 p=14376 u=ansible n=ansible | TASK [install_nexus : Add line no password to sudoers file] ******************************************************************************************************
2023-07-31 15:57:14,313 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:14,316 p=14376 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *******************************************************************************************************
2023-07-31 15:57:14,515 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:14,518 p=14376 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] ***********************************************************************************************
2023-07-31 15:57:14,731 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:14,734 p=14376 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ***************************************************************************************************
2023-07-31 15:57:14,902 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:14,906 p=14376 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] **************************************************************************************************************
2023-07-31 15:57:15,208 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:15,211 p=14376 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] *************************************************************************
2023-07-31 15:57:15,528 p=14376 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:57:15,531 p=14376 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] **************************************************************************************************************
2023-07-31 15:57:15,777 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:15,780 p=14376 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] ***********************************************************************************************************************
2023-07-31 15:57:16,013 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:16,016 p=14376 u=ansible n=ansible | TASK [install_nexus : debug] *************************************************************************************************************************************
2023-07-31 15:57:16,024 p=14376 u=ansible n=ansible | ok: [ubuntu2] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-31 15:57:16,049 p=14376 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:57:16,054 p=14376 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:57:16,875 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:17,055 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:17,067 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:57:17,077 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:17,123 p=14376 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 15:57:17,128 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 15:57:17,892 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:17,897 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:57:18,468 p=14376 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:57:18,473 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:57:18,790 p=14376 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:57:18,795 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] **********************************************************************************************
2023-07-31 15:57:20,960 p=14376 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:57:20,966 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************************************
2023-07-31 15:57:22,935 p=14376 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchepy7lw56.rpm is not installed"}
2023-07-31 15:57:22,939 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************************************
2023-07-31 15:57:22,955 p=14376 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:57:22,959 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************************************
2023-07-31 15:57:23,672 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:23,675 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:57:24,213 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:24,217 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:57:24,382 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:24,385 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************************************
2023-07-31 15:57:26,448 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:26,452 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************************************
2023-07-31 15:57:26,609 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:26,613 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************************************
2023-07-31 15:57:28,767 p=14376 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:57:28,772 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] *****************************************************************************************************************
2023-07-31 15:57:29,469 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:29,473 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ******************************************************************************************************
2023-07-31 15:57:29,716 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:29,720 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] **********************************************************************************************************************
2023-07-31 15:57:30,288 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:30,292 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] *********************************************************************************************************************
2023-07-31 15:57:30,485 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:30,489 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] **********************************************************************************************************
2023-07-31 15:57:30,824 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:30,829 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] **************************************************************************************
2023-07-31 15:57:31,133 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:31,137 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ********************************************************************************
2023-07-31 15:57:31,415 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:31,418 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] *********************************************************************************************************
2023-07-31 15:57:31,577 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:31,581 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] *********************************************************************************************
2023-07-31 15:57:32,200 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:32,204 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ********************************************************************************************************************
2023-07-31 15:57:32,211 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:32,215 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ************************************************************************************
2023-07-31 15:57:32,382 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:32,385 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Install unzip package denpendency] *****************************************************************************************************
2023-07-31 15:57:32,939 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:32,943 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ************************************************************************************************************
2023-07-31 15:57:32,950 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:32,954 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] ***********************************************************************************************
2023-07-31 15:57:32,961 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:32,965 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] *******************************************************************************************************
2023-07-31 15:57:32,973 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:32,977 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] *****************************************************************************************************************
2023-07-31 15:57:32,986 p=14376 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:57:32,990 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] *************************************************************************************************
2023-07-31 15:57:33,151 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:33,154 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] *************************************************************************************************
2023-07-31 15:57:33,322 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:33,326 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ************************************************************************************************************************
2023-07-31 15:57:33,516 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:33,519 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] ***********************************************************************************************
2023-07-31 15:57:33,701 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:33,704 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] *********************************************************************************************************
2023-07-31 15:57:33,865 p=14376 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:57:33,868 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] ******************************************************************************************************
2023-07-31 15:57:34,163 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:34,166 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] *********************************************************************
2023-07-31 15:57:34,504 p=14376 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:57:34,508 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] ******************************************************************************************************
2023-07-31 15:57:34,755 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:34,759 p=14376 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ***************************************************************************************************************
2023-07-31 15:57:34,994 p=14376 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:57:34,998 p=14376 u=ansible n=ansible | TASK [install_sonarqube : debug] *********************************************************************************************************************************
2023-07-31 15:57:35,006 p=14376 u=ansible n=ansible | ok: [ubuntu2] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-07-31 15:57:35,020 p=14376 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:57:35,020 p=14376 u=ansible n=ansible | centos3                    : ok=22   changed=3    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   
2023-07-31 15:57:35,020 p=14376 u=ansible n=ansible | ubuntu2                    : ok=46   changed=4    unreachable=0    failed=0    skipped=12   rescued=0    ignored=0   
2023-07-31 15:59:15,566 p=15671 u=ansible n=ansible | PLAY [Nexus playbook] ********************************************************************************************************************************************
2023-07-31 15:59:15,571 p=15671 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:59:17,042 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:17,063 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:17,076 p=15671 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] *********************************************************************************************************
2023-07-31 15:59:17,086 p=15671 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:59:17,097 p=15671 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos3
2023-07-31 15:59:17,102 p=15671 u=ansible n=ansible | TASK [install_nexus : Update yum] ********************************************************************************************************************************
2023-07-31 15:59:18,280 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:18,288 p=15671 u=ansible n=ansible | TASK [install_nexus : Install Java] ******************************************************************************************************************************
2023-07-31 15:59:18,978 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:18,984 p=15671 u=ansible n=ansible | TASK [install_nexus : Create folder before download] *************************************************************************************************************
2023-07-31 15:59:19,346 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:19,352 p=15671 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] *****************************************************************************************************
2023-07-31 15:59:20,153 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:20,160 p=15671 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ***********************************************************************************************************************
2023-07-31 15:59:20,169 p=15671 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:59:20,175 p=15671 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ********************************************************************************************
2023-07-31 15:59:20,530 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:20,537 p=15671 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ********************************************************************************************************************
2023-07-31 15:59:20,545 p=15671 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:59:20,552 p=15671 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ***************************************************************************************************
2023-07-31 15:59:20,563 p=15671 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:59:20,571 p=15671 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ***********************************************************************************************************
2023-07-31 15:59:20,581 p=15671 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:59:20,590 p=15671 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] *************************************************************************************************************************
2023-07-31 15:59:20,601 p=15671 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:59:20,609 p=15671 u=ansible n=ansible | TASK [install_nexus : Add user nexus] ****************************************************************************************************************************
2023-07-31 15:59:20,983 p=15671 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 15:59:20,984 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:20,989 p=15671 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *******************************************************************************************************
2023-07-31 15:59:21,589 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:21,595 p=15671 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] ***********************************************************************************************
2023-07-31 15:59:22,339 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:22,346 p=15671 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ***************************************************************************************************
2023-07-31 15:59:22,685 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:22,692 p=15671 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] **************************************************************************************************************
2023-07-31 15:59:23,175 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:23,182 p=15671 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] *************************************************************************
2023-07-31 15:59:23,659 p=15671 u=ansible n=ansible | changed: [centos3]
2023-07-31 15:59:23,665 p=15671 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] **************************************************************************************************************
2023-07-31 15:59:24,150 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:24,155 p=15671 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] ***********************************************************************************************************************
2023-07-31 15:59:24,485 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:24,490 p=15671 u=ansible n=ansible | TASK [install_nexus : debug] *************************************************************************************************************************************
2023-07-31 15:59:24,499 p=15671 u=ansible n=ansible | ok: [centos3] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-31 15:59:24,503 p=15671 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] *********************************************************************************************************
2023-07-31 15:59:24,515 p=15671 u=ansible n=ansible | skipping: [centos3]
2023-07-31 15:59:24,524 p=15671 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu2
2023-07-31 15:59:24,530 p=15671 u=ansible n=ansible | TASK [install_nexus : Update apt] ********************************************************************************************************************************
2023-07-31 15:59:25,413 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:25,417 p=15671 u=ansible n=ansible | TASK [install_nexus : Install Java] ******************************************************************************************************************************
2023-07-31 15:59:26,021 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:26,025 p=15671 u=ansible n=ansible | TASK [install_nexus : Create folder before download] *************************************************************************************************************
2023-07-31 15:59:26,211 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:26,214 p=15671 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] *****************************************************************************************************
2023-07-31 15:59:26,798 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:26,803 p=15671 u=ansible n=ansible | TASK [install_nexus : Download nexus file] ***********************************************************************************************************************
2023-07-31 15:59:26,812 p=15671 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:59:26,815 p=15671 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ********************************************************************************************
2023-07-31 15:59:26,999 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:27,002 p=15671 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ********************************************************************************************************************
2023-07-31 15:59:27,010 p=15671 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:59:27,013 p=15671 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ***************************************************************************************************
2023-07-31 15:59:27,021 p=15671 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:59:27,024 p=15671 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] ***********************************************************************************************************
2023-07-31 15:59:27,032 p=15671 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:59:27,035 p=15671 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] *************************************************************************************************************************
2023-07-31 15:59:27,043 p=15671 u=ansible n=ansible | skipping: [ubuntu2]
2023-07-31 15:59:27,046 p=15671 u=ansible n=ansible | TASK [install_nexus : Add user nexus] ****************************************************************************************************************************
2023-07-31 15:59:27,283 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:27,286 p=15671 u=ansible n=ansible | TASK [install_nexus : Add line no password to sudoers file] ******************************************************************************************************
2023-07-31 15:59:27,463 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:27,467 p=15671 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] *******************************************************************************************************
2023-07-31 15:59:27,810 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:27,814 p=15671 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] ***********************************************************************************************
2023-07-31 15:59:28,146 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:28,149 p=15671 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ***************************************************************************************************
2023-07-31 15:59:28,325 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:28,328 p=15671 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] **************************************************************************************************************
2023-07-31 15:59:28,658 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:28,662 p=15671 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] *************************************************************************
2023-07-31 15:59:29,044 p=15671 u=ansible n=ansible | changed: [ubuntu2]
2023-07-31 15:59:29,047 p=15671 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] **************************************************************************************************************
2023-07-31 15:59:29,312 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:29,315 p=15671 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] ***********************************************************************************************************************
2023-07-31 15:59:29,575 p=15671 u=ansible n=ansible | ok: [ubuntu2]
2023-07-31 15:59:29,578 p=15671 u=ansible n=ansible | TASK [install_nexus : debug] *************************************************************************************************************************************
2023-07-31 15:59:29,587 p=15671 u=ansible n=ansible | ok: [ubuntu2] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-31 15:59:29,616 p=15671 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 15:59:29,620 p=15671 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 15:59:30,585 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:30,592 p=15671 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 15:59:30,642 p=15671 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 15:59:30,645 p=15671 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 15:59:31,423 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:31,427 p=15671 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 15:59:32,093 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:32,096 p=15671 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 15:59:32,436 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:32,442 p=15671 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] **********************************************************************************************
2023-07-31 15:59:33,800 p=15671 u=ansible n=ansible | ok: [centos3]
2023-07-31 15:59:33,804 p=15671 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************************************
2023-07-31 15:59:35,848 p=15671 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchzcjf_z9v.rpm is not installed"}
2023-07-31 15:59:35,848 p=15671 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 15:59:35,848 p=15671 u=ansible n=ansible | centos3                    : ok=22   changed=1    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   
2023-07-31 15:59:35,848 p=15671 u=ansible n=ansible | ubuntu2                    : ok=17   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-31 16:00:10,360 p=16477 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 16:00:10,364 p=16477 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 16:00:11,565 p=16477 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:00:11,572 p=16477 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 16:00:11,614 p=16477 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:00:11,621 p=16477 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 16:00:12,492 p=16477 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:00:12,495 p=16477 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 16:00:13,160 p=16477 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:00:13,163 p=16477 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 16:00:13,447 p=16477 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:00:13,450 p=16477 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] **********************************************************************************************
2023-07-31 16:00:14,745 p=16477 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:00:14,748 p=16477 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************************************
2023-07-31 16:00:17,214 p=16477 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchx1569m30.rpm is not installed"}
2023-07-31 16:00:17,214 p=16477 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 16:00:17,214 p=16477 u=ansible n=ansible | centos3                    : ok=6    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 16:04:20,137 p=16666 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 16:04:20,140 p=16666 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 16:04:21,420 p=16666 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:04:21,428 p=16666 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 16:04:21,467 p=16666 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:04:21,471 p=16666 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 16:04:22,195 p=16666 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:04:22,198 p=16666 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************************************
2023-07-31 16:04:22,755 p=16666 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:04:22,757 p=16666 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************************************
2023-07-31 16:04:23,037 p=16666 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:04:23,040 p=16666 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] **********************************************************************************************
2023-07-31 16:04:25,287 p=16666 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:04:25,291 p=16666 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************************************
2023-07-31 16:04:27,245 p=16666 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarch_yz8rjxd.rpm is not installed"}
2023-07-31 16:04:27,246 p=16666 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 16:04:27,246 p=16666 u=ansible n=ansible | centos3                    : ok=6    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 16:04:40,494 p=16848 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 16:04:40,498 p=16848 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 16:04:41,563 p=16848 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:04:41,570 p=16848 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 16:04:41,604 p=16848 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:04:41,608 p=16848 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 16:04:47,909 p=16848 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-07-31 16:04:47,909 p=16848 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 16:04:47,909 p=16848 u=ansible n=ansible | centos3                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 16:05:24,671 p=16964 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************************************
2023-07-31 16:05:24,675 p=16964 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************************
2023-07-31 16:05:25,761 p=16964 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:05:25,769 p=16964 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************************************
2023-07-31 16:05:25,805 p=16964 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:05:25,808 p=16964 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************************************
2023-07-31 16:05:32,247 p=16964 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-07-31 16:05:32,248 p=16964 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************************************
2023-07-31 16:05:32,248 p=16964 u=ansible n=ansible | centos3                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 16:16:00,143 p=17207 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 16:16:00,147 p=17207 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 16:16:01,405 p=17207 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:16:01,412 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 16:16:01,448 p=17207 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:16:01,452 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **********************************************************************************************************************************************
2023-07-31 16:16:02,567 p=17207 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:16:02,570 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 16:16:03,208 p=17207 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:16:03,211 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***************************************************************************************************************************
2023-07-31 16:16:03,538 p=17207 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:16:03,543 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] ****************************************************************************************************************
2023-07-31 16:16:05,492 p=17207 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:16:05,495 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***********************************************************************************************************************
2023-07-31 16:16:07,730 p=17207 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:16:07,734 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **********************************************************************************************************************
2023-07-31 16:16:33,779 p=17207 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:16:33,783 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **********************************************************************************************************************
2023-07-31 16:16:34,095 p=17207 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:16:34,098 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***************************************************************************************************************************
2023-07-31 16:16:34,105 p=17207 u=ansible n=ansible | skipping: [centos3]
2023-07-31 16:16:34,109 p=17207 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ************************************************************************************************************************
2023-07-31 16:16:34,703 p=17207 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Unable to start service postgresql: Job for postgresql.service failed because the control process exited with error code.\nSee \"systemctl status postgresql.service\" and \"journalctl -xeu postgresql.service\" for details.\n"}
2023-07-31 16:16:34,704 p=17207 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 16:16:34,704 p=17207 u=ansible n=ansible | centos3                    : ok=9    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 16:30:42,228 p=17570 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 16:30:42,232 p=17570 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 16:30:44,005 p=17570 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:30:44,014 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 16:30:44,054 p=17570 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:30:44,058 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **********************************************************************************************************************************************
2023-07-31 16:30:45,216 p=17570 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:30:45,218 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 16:30:46,016 p=17570 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:30:46,021 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***************************************************************************************************************************
2023-07-31 16:30:46,353 p=17570 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:30:46,356 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] ****************************************************************************************************************
2023-07-31 16:30:47,787 p=17570 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:30:47,791 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***********************************************************************************************************************
2023-07-31 16:30:49,571 p=17570 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:30:49,574 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **********************************************************************************************************************
2023-07-31 16:30:50,140 p=17570 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:30:50,143 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **********************************************************************************************************************
2023-07-31 16:30:50,449 p=17570 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:30:50,453 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***************************************************************************************************************************
2023-07-31 16:30:50,460 p=17570 u=ansible n=ansible | skipping: [centos3]
2023-07-31 16:30:50,464 p=17570 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ************************************************************************************************************************
2023-07-31 16:30:50,966 p=17570 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Unable to start service postgresql: Job for postgresql.service failed because the control process exited with error code.\nSee \"systemctl status postgresql.service\" and \"journalctl -xeu postgresql.service\" for details.\n"}
2023-07-31 16:30:50,967 p=17570 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 16:30:50,967 p=17570 u=ansible n=ansible | centos3                    : ok=9    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 16:32:09,555 p=17799 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 16:32:09,559 p=17799 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 16:32:11,019 p=17799 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:32:11,030 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 16:32:11,080 p=17799 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:32:11,086 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **********************************************************************************************************************************************
2023-07-31 16:32:11,925 p=17799 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:32:11,929 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 16:32:12,659 p=17799 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:32:12,662 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***************************************************************************************************************************
2023-07-31 16:32:12,947 p=17799 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:32:12,950 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] ****************************************************************************************************************
2023-07-31 16:32:14,234 p=17799 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:32:14,239 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***********************************************************************************************************************
2023-07-31 16:32:16,217 p=17799 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:32:16,221 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **********************************************************************************************************************
2023-07-31 16:32:16,819 p=17799 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:32:16,822 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **********************************************************************************************************************
2023-07-31 16:32:17,137 p=17799 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:32:17,140 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***************************************************************************************************************************
2023-07-31 16:32:17,147 p=17799 u=ansible n=ansible | skipping: [centos3]
2023-07-31 16:32:17,151 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ****************************************************************************************************************************************
2023-07-31 16:32:21,853 p=17799 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:32:21,857 p=17799 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ************************************************************************************************************************
2023-07-31 16:32:22,421 p=17799 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Unable to start service postgresql: Job for postgresql.service failed because the control process exited with error code.\nSee \"systemctl status postgresql.service\" and \"journalctl -xeu postgresql.service\" for details.\n"}
2023-07-31 16:32:22,422 p=17799 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 16:32:22,422 p=17799 u=ansible n=ansible | centos3                    : ok=10   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 16:33:16,500 p=18072 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 16:33:16,505 p=18072 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 16:33:17,614 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:17,621 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 16:33:17,657 p=18072 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:33:17,660 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **********************************************************************************************************************************************
2023-07-31 16:33:18,326 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:18,329 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 16:33:18,901 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:18,904 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***************************************************************************************************************************
2023-07-31 16:33:19,203 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:19,206 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] ****************************************************************************************************************
2023-07-31 16:33:21,033 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:21,037 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***********************************************************************************************************************
2023-07-31 16:33:22,969 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:22,973 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **********************************************************************************************************************
2023-07-31 16:33:23,536 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:23,538 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **********************************************************************************************************************************************
2023-07-31 16:33:24,123 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:24,126 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **********************************************************************************************************************
2023-07-31 16:33:24,427 p=18072 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:33:24,431 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***************************************************************************************************************************
2023-07-31 16:33:24,438 p=18072 u=ansible n=ansible | skipping: [centos3]
2023-07-31 16:33:24,442 p=18072 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ************************************************************************************************************************
2023-07-31 16:33:24,908 p=18072 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Unable to start service postgresql: Job for postgresql.service failed because the control process exited with error code.\nSee \"systemctl status postgresql.service\" and \"journalctl -xeu postgresql.service\" for details.\n"}
2023-07-31 16:33:24,909 p=18072 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 16:33:24,909 p=18072 u=ansible n=ansible | centos3                    : ok=10   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 16:45:18,970 p=18343 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 16:45:18,975 p=18343 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 16:45:20,718 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:20,729 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 16:45:20,818 p=18343 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:45:20,832 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **********************************************************************************************************************************************
2023-07-31 16:45:22,068 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:22,071 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 16:45:23,002 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:23,006 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***************************************************************************************************************************
2023-07-31 16:45:23,396 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:23,400 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] ****************************************************************************************************************
2023-07-31 16:45:25,776 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:25,782 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***********************************************************************************************************************
2023-07-31 16:45:27,805 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:27,809 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **********************************************************************************************************************
2023-07-31 16:45:28,629 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:28,634 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **********************************************************************************************************************
2023-07-31 16:45:29,075 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:29,080 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***************************************************************************************************************************
2023-07-31 16:45:31,015 p=18343 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:45:31,022 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ************************************************************************************************************************
2023-07-31 16:45:31,935 p=18343 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:45:31,939 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *****************************************************************************************************************
2023-07-31 16:45:32,358 p=18343 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:45:32,363 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *********************************************************************************************
2023-07-31 16:45:32,684 p=18343 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:45:32,687 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *********************************************************************************************
2023-07-31 16:45:33,005 p=18343 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:45:33,009 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ****************************************************************************************************************************************
2023-07-31 16:45:33,840 p=18343 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:45:33,843 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ***************************************************************************************************************************************
2023-07-31 16:45:34,373 p=18343 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 16:45:34,373 p=18343 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:45:34,377 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] ****************************************************************************************************************************
2023-07-31 16:45:34,950 p=18343 u=ansible n=ansible | [WARNING]: Module remote_tmp /var/lib/pgsql/.ansible/tmp did not exist and was created with a mode of 0700, this may cause issues when running as another user. To avoid this,
create the remote_tmp dir with the correct permissions manually

2023-07-31 16:45:34,950 p=18343 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:45:34,955 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ********************************************************************************************************
2023-07-31 16:45:35,408 p=18343 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:45:35,412 p=18343 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqubedb] ***************************************************************************************************
2023-07-31 16:45:35,852 p=18343 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: psycopg2.OperationalError: FATAL:  database "sonarqubedb" does not exist
2023-07-31 16:45:35,853 p=18343 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Could not connect to database: FATAL:  database \"sonarqubedb\" does not exist\n"}
2023-07-31 16:45:35,854 p=18343 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 16:45:35,854 p=18343 u=ansible n=ansible | centos3                    : ok=18   changed=8    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 16:46:29,728 p=18742 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 16:46:29,733 p=18742 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 16:46:31,087 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:31,098 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 16:46:31,143 p=18742 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 16:46:31,147 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **********************************************************************************************************************************************
2023-07-31 16:46:32,168 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:32,173 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] **************************************************************************************************************************************
2023-07-31 16:46:33,120 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:33,124 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ***************************************************************************************************************************
2023-07-31 16:46:33,505 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:33,508 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] ****************************************************************************************************************
2023-07-31 16:46:35,035 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:35,039 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ***********************************************************************************************************************
2023-07-31 16:46:37,382 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:37,386 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] **********************************************************************************************************************
2023-07-31 16:46:38,123 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:38,127 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] **********************************************************************************************************************
2023-07-31 16:46:38,552 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:38,557 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ***************************************************************************************************************************
2023-07-31 16:46:38,566 p=18742 u=ansible n=ansible | skipping: [centos3]
2023-07-31 16:46:38,571 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] ************************************************************************************************************************
2023-07-31 16:46:39,176 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:39,179 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] *****************************************************************************************************************
2023-07-31 16:46:39,579 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:39,583 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] *********************************************************************************************
2023-07-31 16:46:39,906 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:39,910 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] *********************************************************************************************
2023-07-31 16:46:40,222 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:40,226 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] ****************************************************************************************************************************************
2023-07-31 16:46:40,967 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:40,972 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ***************************************************************************************************************************************
2023-07-31 16:46:41,520 p=18742 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 16:46:41,520 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:41,526 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] ****************************************************************************************************************************
2023-07-31 16:46:42,043 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:42,048 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] ********************************************************************************************************
2023-07-31 16:46:42,504 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:42,508 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] **************************************************************************************************
2023-07-31 16:46:42,967 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:46:42,971 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ***************************************************************************************************************************
2023-07-31 16:46:43,370 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:46:43,374 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ***************************************************************************************************************
2023-07-31 16:46:43,695 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:46:43,699 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] **************************************************************************************************************************************
2023-07-31 16:50:49,686 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:49,692 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ******************************************************************************************************
2023-07-31 16:50:50,075 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:50:50,106 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ******************************************************************************************************************************
2023-07-31 16:50:53,681 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:53,687 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] *****************************************************************************************************************
2023-07-31 16:50:54,156 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:50:54,160 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] *************************************************************************************************************************
2023-07-31 16:50:54,220 p=18742 u=ansible n=ansible | ok: [centos3]
2023-07-31 16:50:54,225 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ***********************************************************************************************************************************
2023-07-31 16:50:54,639 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:54,643 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] *******************************************************************************************************************
2023-07-31 16:50:54,958 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:54,962 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] *******************************************************************************************************************
2023-07-31 16:50:55,306 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:55,310 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] **************************************************************************************************************************************
2023-07-31 16:50:55,819 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:55,823 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] *****************************************************************************************************************
2023-07-31 16:50:56,214 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:56,217 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ***************************************************************************************************************************
2023-07-31 16:50:56,541 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:56,545 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] ************************************************************************************************************************
2023-07-31 16:50:57,238 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:57,242 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ***************************************************************************************
2023-07-31 16:50:57,873 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:57,877 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] ************************************************************************************************************************
2023-07-31 16:50:58,455 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:58,459 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] *********************************************************************************************************************************
2023-07-31 16:50:58,948 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:50:58,952 p=18742 u=ansible n=ansible | TASK [install_sonarqube : debug] ***************************************************************************************************************************************************
2023-07-31 16:50:58,965 p=18742 u=ansible n=ansible | ok: [centos3] => {
    "sonarqube_service.status.ActiveState": "inactive"
}
2023-07-31 16:50:58,969 p=18742 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *******************************************************************************************************************
2023-07-31 16:50:58,981 p=18742 u=ansible n=ansible | skipping: [centos3]
2023-07-31 16:50:58,995 p=18742 u=ansible n=ansible | RUNNING HANDLER [Reload SonarQube systemd service] *********************************************************************************************************************************
2023-07-31 16:51:00,574 p=18742 u=ansible n=ansible | changed: [centos3]
2023-07-31 16:51:00,582 p=18742 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-07-31 16:51:00,582 p=18742 u=ansible n=ansible | centos3                    : ok=37   changed=15   unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-07-31 17:24:17,354 p=19555 u=ansible n=ansible | PLAY [SonarQube playbook] **********************************************************************************************************************************************************
2023-07-31 17:24:17,358 p=19555 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-07-31 17:24:18,799 p=19555 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 17:24:19,156 p=19555 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:24:19,170 p=19555 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *******************************************************************************************************************
2023-07-31 17:24:19,184 p=19555 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 17:24:19,216 p=19555 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 17:24:19,219 p=19555 u=ansible n=ansible | TASK [install_sonarqube : Update yum] **********************************************************************************************************************************************
2023-07-31 17:33:48,558 p=19555 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 17:46:04,438 p=20094 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************
2023-07-31 17:46:04,443 p=20094 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************
2023-07-31 17:46:06,333 p=20094 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 17:46:06,393 p=20094 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:46:06,405 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************
2023-07-31 17:46:06,420 p=20094 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 17:46:06,450 p=20094 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 17:46:06,454 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************
2023-07-31 17:48:31,565 p=20094 u=ansible n=ansible | changed: [centos3]
2023-07-31 17:48:31,568 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************
2023-07-31 17:48:42,492 p=20094 u=ansible n=ansible | changed: [centos3]
2023-07-31 17:48:42,495 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************
2023-07-31 17:48:42,805 p=20094 u=ansible n=ansible | changed: [centos3]
2023-07-31 17:48:42,807 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] **********************************************************************
2023-07-31 17:48:46,097 p=20094 u=ansible n=ansible | changed: [centos3]
2023-07-31 17:48:46,100 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************
2023-07-31 17:48:48,110 p=20094 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchdfkub4ys.rpm is not installed"}
2023-07-31 17:48:48,113 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] *************************************************************************
2023-07-31 17:48:48,131 p=20094 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 17:48:48,135 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Update apt] ****************************************************************************************************
2023-07-31 17:50:16,438 p=20094 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 17:50:16,445 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************
2023-07-31 17:51:11,912 p=20094 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 17:51:11,916 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************
2023-07-31 17:51:12,095 p=20094 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 17:51:12,098 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ************************************************************************************
2023-07-31 17:51:13,661 p=20094 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 17:51:13,665 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] *******************************************************************
2023-07-31 17:51:13,903 p=20094 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 17:51:13,907 p=20094 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] **********************************************************************************************
2023-07-31 17:51:58,554 p=20094 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: E:The repository 'file:/cdrom jammy Release' no longer has a Release file., W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/jammy-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details."}
2023-07-31 17:51:58,555 p=20094 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************
2023-07-31 17:51:58,555 p=20094 u=ansible n=ansible | centos3                    : ok=6    changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 17:51:58,555 p=20094 u=ansible n=ansible | ubuntu3                    : ok=7    changed=4    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 17:56:35,278 p=20664 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 17:56:35,282 p=20664 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 17:56:36,853 p=20664 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:56:36,862 p=20664 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 17:56:36,903 p=20664 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 17:56:36,907 p=20664 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 17:56:37,914 p=20664 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:56:37,919 p=20664 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 17:56:38,696 p=20664 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:56:38,701 p=20664 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 17:56:39,075 p=20664 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:56:39,078 p=20664 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 17:56:41,712 p=20664 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:56:41,716 p=20664 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 17:56:43,816 p=20664 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarch3u6g1h7c.rpm is not installed"}
2023-07-31 17:56:43,817 p=20664 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 17:56:43,817 p=20664 u=ansible n=ansible | centos3                    : ok=6    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 17:57:11,365 p=20856 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 17:57:11,369 p=20856 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 17:57:12,688 p=20856 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:57:12,697 p=20856 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 17:57:12,735 p=20856 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 17:57:12,739 p=20856 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 17:57:13,448 p=20856 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:57:13,451 p=20856 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 17:57:14,146 p=20856 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:57:14,151 p=20856 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 17:57:14,494 p=20856 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:57:14,498 p=20856 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 17:57:16,329 p=20856 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:57:16,333 p=20856 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 17:57:16,997 p=20856 u=ansible n=ansible | ok: [centos3]
2023-07-31 17:57:17,001 p=20856 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 17:57:19,070 p=20856 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarch6_k6cf13.rpm is not installed"}
2023-07-31 17:57:19,071 p=20856 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 17:57:19,071 p=20856 u=ansible n=ansible | centos3                    : ok=7    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:20:12,491 p=2447 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************
2023-07-31 18:20:12,498 p=2447 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************
2023-07-31 18:20:13,958 p=2447 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:20:13,965 p=2447 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************
2023-07-31 18:20:14,008 p=2447 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 18:20:14,012 p=2447 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************
2023-07-31 18:20:14,740 p=2447 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:20:14,743 p=2447 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************
2023-07-31 18:20:15,355 p=2447 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:20:15,358 p=2447 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************
2023-07-31 18:20:15,649 p=2447 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:20:15,652 p=2447 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] **********************************************************************
2023-07-31 18:20:17,214 p=2447 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:20:17,217 p=2447 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************
2023-07-31 18:20:17,824 p=2447 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:20:17,827 p=2447 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************
2023-07-31 18:20:19,614 p=2447 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchcu7or9n_.rpm is not installed"}
2023-07-31 18:20:19,615 p=2447 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************
2023-07-31 18:20:19,615 p=2447 u=ansible n=ansible | centos3                    : ok=7    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:22:14,008 p=2665 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************
2023-07-31 18:22:14,012 p=2665 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************
2023-07-31 18:22:15,353 p=2665 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:22:15,361 p=2665 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************
2023-07-31 18:22:15,396 p=2665 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 18:22:15,400 p=2665 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************
2023-07-31 18:22:16,118 p=2665 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:22:16,121 p=2665 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************
2023-07-31 18:22:16,666 p=2665 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:22:16,669 p=2665 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************
2023-07-31 18:22:16,948 p=2665 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:22:16,951 p=2665 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************
2023-07-31 18:22:18,789 p=2665 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarch0f91bf4h.rpm is not installed"}
2023-07-31 18:22:18,790 p=2665 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************
2023-07-31 18:22:18,791 p=2665 u=ansible n=ansible | centos3                    : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:26:44,867 p=2825 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************
2023-07-31 18:26:44,872 p=2825 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************
2023-07-31 18:26:46,314 p=2825 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:26:46,323 p=2825 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************
2023-07-31 18:26:46,365 p=2825 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 18:26:46,370 p=2825 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************
2023-07-31 18:26:47,140 p=2825 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:26:47,143 p=2825 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************
2023-07-31 18:26:47,699 p=2825 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:26:47,702 p=2825 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************
2023-07-31 18:26:47,990 p=2825 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:26:47,994 p=2825 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************
2023-07-31 18:26:49,534 p=2825 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarcha4dtyg2_.rpm is not installed"}
2023-07-31 18:26:49,534 p=2825 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************
2023-07-31 18:26:49,534 p=2825 u=ansible n=ansible | centos3                    : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:29:13,056 p=2973 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************
2023-07-31 18:29:13,060 p=2973 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************
2023-07-31 18:29:14,323 p=2973 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:29:14,332 p=2973 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************
2023-07-31 18:29:14,373 p=2973 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 18:29:14,378 p=2973 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************
2023-07-31 18:29:15,064 p=2973 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:29:15,067 p=2973 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************
2023-07-31 18:29:15,632 p=2973 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:29:15,636 p=2973 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************
2023-07-31 18:29:15,917 p=2973 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:29:15,920 p=2973 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************
2023-07-31 18:29:17,546 p=2973 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchlxrgm15j.rpm is not installed"}
2023-07-31 18:29:17,547 p=2973 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************
2023-07-31 18:29:17,547 p=2973 u=ansible n=ansible | centos3                    : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:29:50,246 p=3124 u=ansible n=ansible | PLAY [SonarQube playbook] ****************************************************************************************************************
2023-07-31 18:29:50,250 p=3124 u=ansible n=ansible | TASK [Gathering Facts] *******************************************************************************************************************
2023-07-31 18:29:51,301 p=3124 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:29:51,309 p=3124 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] *************************************************************************
2023-07-31 18:29:51,347 p=3124 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 18:29:51,350 p=3124 u=ansible n=ansible | TASK [install_sonarqube : Update yum] ****************************************************************************************************
2023-07-31 18:29:52,014 p=3124 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:29:52,018 p=3124 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ********************************************************************************************
2023-07-31 18:29:52,569 p=3124 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:29:52,572 p=3124 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] *********************************************************************************
2023-07-31 18:29:52,867 p=3124 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:29:52,870 p=3124 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] *****************************************************************************
2023-07-31 18:29:55,086 p=3124 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchp_576pa5.rpm is not installed"}
2023-07-31 18:29:55,086 p=3124 u=ansible n=ansible | PLAY RECAP *******************************************************************************************************************************
2023-07-31 18:29:55,087 p=3124 u=ansible n=ansible | centos3                    : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:31:43,865 p=3318 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:31:43,869 p=3318 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:31:45,254 p=3318 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:31:45,264 p=3318 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:31:45,302 p=3318 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 18:31:45,307 p=3318 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 18:31:49,893 p=3318 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-07-31 18:31:49,894 p=3318 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:31:49,894 p=3318 u=ansible n=ansible | centos3                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:32:48,199 p=3455 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:32:48,203 p=3455 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:32:49,393 p=3455 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:32:49,402 p=3455 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:32:49,444 p=3455 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 18:32:49,448 p=3455 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 18:32:53,999 p=3455 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-07-31 18:32:54,000 p=3455 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:32:54,000 p=3455 u=ansible n=ansible | centos3                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:33:08,547 p=3554 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:33:08,551 p=3554 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:33:09,643 p=3554 u=ansible n=ansible | ok: [centos3]
2023-07-31 18:33:09,650 p=3554 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:33:09,686 p=3554 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 18:33:09,690 p=3554 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 18:33:14,405 p=3554 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-07-31 18:33:14,406 p=3554 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:33:14,406 p=3554 u=ansible n=ansible | centos3                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 18:36:18,777 p=3689 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:36:18,780 p=3689 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:36:19,928 p=3689 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:36:19,937 p=3689 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:36:19,944 p=3689 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 18:36:19,948 p=3689 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 18:36:19,983 p=3689 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 18:36:19,987 p=3689 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 18:36:26,755 p=3689 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 18:36:26,759 p=3689 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 18:36:27,328 p=3689 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:36:27,331 p=3689 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 18:36:27,555 p=3689 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:36:27,558 p=3689 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 18:36:29,482 p=3689 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:36:29,486 p=3689 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 18:36:29,797 p=3689 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:36:29,801 p=3689 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 18:37:05,853 p=3689 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: E:The repository 'file:/cdrom jammy Release' no longer has a Release file., W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/jammy-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details."}
2023-07-31 18:37:05,854 p=3689 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:37:05,854 p=3689 u=ansible n=ansible | ubuntu3                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 18:41:45,219 p=3938 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:41:45,223 p=3938 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:41:46,490 p=3938 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:41:46,500 p=3938 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:41:46,511 p=3938 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 18:41:46,518 p=3938 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 18:41:46,562 p=3938 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 18:41:46,567 p=3938 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 18:41:47,502 p=3938 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:41:47,506 p=3938 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 18:41:48,083 p=3938 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:41:48,086 p=3938 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 18:41:48,293 p=3938 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:41:48,297 p=3938 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 18:41:49,530 p=3938 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:41:49,534 p=3938 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 18:41:49,756 p=3938 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:41:49,760 p=3938 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 18:42:30,292 p=3938 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: E:The repository 'file:/cdrom jammy Release' no longer has a Release file., W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/jammy-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details."}
2023-07-31 18:42:30,293 p=3938 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:42:30,293 p=3938 u=ansible n=ansible | ubuntu3                    : ok=7    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 18:43:16,169 p=4156 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:43:16,172 p=4156 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:43:17,047 p=4156 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:17,055 p=4156 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:43:17,063 p=4156 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 18:43:17,067 p=4156 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 18:43:17,104 p=4156 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 18:43:17,109 p=4156 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 18:43:17,910 p=4156 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:17,914 p=4156 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 18:43:18,514 p=4156 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:18,530 p=4156 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 18:43:18,740 p=4156 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:18,743 p=4156 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 18:43:20,371 p=4156 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:20,375 p=4156 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 18:43:20,603 p=4156 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 18:43:20,606 p=4156 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 18:43:35,237 p=4156 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "W:Be aware that removing the lock file is not a solution and may break your system., E:Problem renaming the file /var/cache/apt/srcpkgcache.bin.GE6zgP to /var/cache/apt/srcpkgcache.bin - rename (2: No such file or directory), W:You may want to run apt-get update to correct these problems, E:The package cache file is corrupted"}
2023-07-31 18:43:35,238 p=4156 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:43:35,238 p=4156 u=ansible n=ansible | ubuntu3                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 18:43:55,393 p=4373 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:43:55,397 p=4373 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:43:56,271 p=4373 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:56,280 p=4373 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:43:56,292 p=4373 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 18:43:56,296 p=4373 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 18:43:56,337 p=4373 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 18:43:56,341 p=4373 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 18:43:57,127 p=4373 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:57,130 p=4373 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 18:43:57,653 p=4373 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:57,657 p=4373 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 18:43:57,879 p=4373 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:57,882 p=4373 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 18:43:59,683 p=4373 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:59,686 p=4373 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 18:43:59,907 p=4373 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:43:59,911 p=4373 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 18:44:36,498 p=4373 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: E:The repository 'file:/cdrom jammy Release' no longer has a Release file., W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/jammy-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details."}
2023-07-31 18:44:36,499 p=4373 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:44:36,499 p=4373 u=ansible n=ansible | ubuntu3                    : ok=7    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 18:45:08,103 p=4589 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:45:08,107 p=4589 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:45:08,965 p=4589 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:45:08,973 p=4589 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:45:08,981 p=4589 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 18:45:08,984 p=4589 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 18:45:09,019 p=4589 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 18:45:09,022 p=4589 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 18:45:09,758 p=4589 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:45:09,762 p=4589 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 18:45:10,285 p=4589 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:45:10,288 p=4589 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 18:45:10,510 p=4589 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:45:10,513 p=4589 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 18:45:12,137 p=4589 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:45:12,141 p=4589 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 18:45:12,387 p=4589 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:45:12,391 p=4589 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 18:45:48,341 p=4589 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: E:The repository 'file:/cdrom jammy Release' no longer has a Release file., W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/jammy-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details., W:Target Packages (main/binary-arm64/Packages) is configured multiple times in /etc/apt/sources.list.d/pgdg.list:1 and /etc/apt/sources.list.d/postgresql.list:1, W:Target Packages (main/binary-all/Packages) is configured multiple times in /etc/apt/sources.list.d/pgdg.list:1 and /etc/apt/sources.list.d/postgresql.list:1, W:Target Translations (main/i18n/Translation-en) is configured multiple times in /etc/apt/sources.list.d/pgdg.list:1 and /etc/apt/sources.list.d/postgresql.list:1, W:Target CNF (main/cnf/Commands-arm64) is configured multiple times in /etc/apt/sources.list.d/pgdg.list:1 and /etc/apt/sources.list.d/postgresql.list:1, W:Target CNF (main/cnf/Commands-all) is configured multiple times in /etc/apt/sources.list.d/pgdg.list:1 and /etc/apt/sources.list.d/postgresql.list:1"}
2023-07-31 18:45:48,342 p=4589 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:45:48,342 p=4589 u=ansible n=ansible | ubuntu3                    : ok=7    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 18:47:30,686 p=4826 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 18:47:30,690 p=4826 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 18:47:31,926 p=4826 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:47:31,936 p=4826 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 18:47:31,946 p=4826 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 18:47:31,951 p=4826 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 18:47:31,995 p=4826 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 18:47:32,000 p=4826 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 18:47:33,471 p=4826 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:47:33,474 p=4826 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 18:47:34,107 p=4826 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:47:34,111 p=4826 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 18:47:34,315 p=4826 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:47:34,318 p=4826 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 18:47:35,843 p=4826 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 18:47:35,849 p=4826 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 18:47:36,149 p=4826 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 18:47:36,153 p=4826 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 18:48:14,762 p=4826 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: E:The repository 'file:/cdrom jammy Release' no longer has a Release file., W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/jammy-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details."}
2023-07-31 18:48:14,762 p=4826 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 18:48:14,763 p=4826 u=ansible n=ansible | ubuntu3                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 19:53:10,198 p=5109 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 19:53:10,203 p=5109 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 19:53:11,623 p=5109 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 19:53:11,633 p=5109 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 19:53:11,642 p=5109 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 19:53:11,646 p=5109 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 19:53:11,680 p=5109 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 19:53:11,685 p=5109 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 19:53:12,153 p=5109 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 19:53:12,157 p=5109 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 19:53:12,432 p=5109 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 19:53:12,436 p=5109 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 19:53:12,758 p=5109 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 19:53:12,775 p=5109 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 19:53:14,453 p=5109 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 19:53:14,457 p=5109 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 19:53:14,729 p=5109 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 19:53:14,733 p=5109 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 19:54:10,364 p=5109 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: E:The repository 'file:/cdrom jammy Release' no longer has a Release file., W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., W:http://apt.postgresql.org/pub/repos/apt/dists/jammy-pgdg/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details."}
2023-07-31 19:54:10,367 p=5109 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 19:54:10,367 p=5109 u=ansible n=ansible | ubuntu3                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 20:15:25,356 p=5419 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 20:15:25,360 p=5419 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 20:15:26,612 p=5419 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:15:26,622 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 20:15:26,631 p=5419 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 20:15:26,636 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 20:15:26,680 p=5419 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 20:15:26,685 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 20:15:27,326 p=5419 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:15:27,330 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 20:15:27,584 p=5419 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:15:27,588 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 20:15:27,808 p=5419 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:15:27,811 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Check the GPG key is existed] *************************************************************************************
2023-07-31 20:15:28,191 p=5419 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:15:28,196 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL GPG key to APT] ************************************************************************************
2023-07-31 20:15:30,227 p=5419 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 20:15:30,231 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 20:15:30,483 p=5419 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 20:15:30,486 p=5419 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 20:16:01,746 p=5419 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., E:The repository 'file:/cdrom jammy Release' no longer has a Release file."}
2023-07-31 20:16:01,747 p=5419 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 20:16:01,747 p=5419 u=ansible n=ansible | ubuntu3                    : ok=8    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 20:18:19,569 p=5658 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 20:18:19,572 p=5658 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 20:18:20,812 p=5658 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:18:20,820 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 20:18:20,827 p=5658 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 20:18:20,830 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 20:18:20,862 p=5658 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 20:18:20,866 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 20:18:21,186 p=5658 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:18:21,190 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 20:18:21,424 p=5658 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:18:21,427 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 20:18:21,644 p=5658 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:18:21,647 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Check the GPG key is existed] *************************************************************************************
2023-07-31 20:18:21,892 p=5658 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:18:21,896 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL GPG key to APT] ************************************************************************************
2023-07-31 20:18:21,906 p=5658 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 20:18:21,910 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 20:18:22,138 p=5658 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 20:18:22,142 p=5658 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 20:18:59,178 p=5658 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., E:The repository 'file:/cdrom jammy Release' no longer has a Release file."}
2023-07-31 20:18:59,178 p=5658 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 20:18:59,178 p=5658 u=ansible n=ansible | ubuntu3                    : ok=7    changed=1    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2023-07-31 20:26:57,554 p=5872 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 20:26:57,558 p=5872 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 20:26:59,028 p=5872 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:26:59,036 p=5872 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 20:26:59,043 p=5872 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 20:26:59,047 p=5872 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 20:26:59,077 p=5872 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 20:26:59,081 p=5872 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 20:26:59,480 p=5872 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:26:59,484 p=5872 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 20:26:59,740 p=5872 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:26:59,744 p=5872 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 20:26:59,974 p=5872 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:26:59,978 p=5872 u=ansible n=ansible | TASK [install_sonarqube : Check the GPG key is existed] *************************************************************************************
2023-07-31 20:27:00,213 p=5872 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:27:00,216 p=5872 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 20:27:00,422 p=5872 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 20:27:00,425 p=5872 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 20:27:32,444 p=5872 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., E:The repository 'file:/cdrom jammy Release' no longer has a Release file."}
2023-07-31 20:27:32,445 p=5872 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 20:27:32,446 p=5872 u=ansible n=ansible | ubuntu3                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 20:28:52,499 p=6101 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 20:28:52,503 p=6101 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 20:28:53,879 p=6101 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:28:53,888 p=6101 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 20:28:53,896 p=6101 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 20:28:53,900 p=6101 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 20:28:53,933 p=6101 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 20:28:53,937 p=6101 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 20:28:54,317 p=6101 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:28:54,320 p=6101 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 20:28:54,547 p=6101 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:28:54,551 p=6101 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 20:28:54,790 p=6101 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:28:54,794 p=6101 u=ansible n=ansible | TASK [install_sonarqube : Check the GPG key is existed] *************************************************************************************
2023-07-31 20:28:55,058 p=6101 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:28:55,062 p=6101 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 20:28:55,279 p=6101 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 20:28:55,283 p=6101 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 20:29:29,945 p=6101 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "Failed to update apt cache: W:Updating from such a repository can't be done securely, and is therefore disabled by default., W:See apt-secure(8) manpage for repository creation and user configuration details., E:The repository 'file:/cdrom jammy Release' no longer has a Release file."}
2023-07-31 20:29:29,946 p=6101 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 20:29:29,946 p=6101 u=ansible n=ansible | ubuntu3                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 20:40:23,633 p=6328 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 20:40:23,637 p=6328 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 20:40:25,008 p=6328 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:40:25,017 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 20:40:25,024 p=6328 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 20:40:25,029 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 20:40:25,064 p=6328 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 20:40:25,068 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 20:40:25,578 p=6328 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:40:25,584 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 20:40:25,913 p=6328 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:40:25,918 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 20:40:26,192 p=6328 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:40:26,197 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Check the GPG key is existed] *************************************************************************************
2023-07-31 20:40:26,436 p=6328 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:40:26,440 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 20:40:28,143 p=6328 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:40:28,148 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 20:40:28,396 p=6328 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:40:28,400 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 20:40:29,284 p=6328 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 20:40:29,288 p=6328 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] ********************************************************************************************
2023-07-31 20:40:29,512 p=6328 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "No package matching 'postgresql-14' is available"}
2023-07-31 20:40:29,513 p=6328 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 20:40:29,513 p=6328 u=ansible n=ansible | ubuntu3                    : ok=9    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 20:51:44,020 p=6581 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 20:51:44,024 p=6581 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 20:51:45,342 p=6581 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:51:45,350 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 20:51:45,357 p=6581 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 20:51:45,360 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 20:51:45,389 p=6581 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 20:51:45,393 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 20:51:45,732 p=6581 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:51:45,736 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 20:51:45,968 p=6581 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:51:45,972 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 20:51:46,200 p=6581 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:51:46,203 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Check the GPG key is existed] *************************************************************************************
2023-07-31 20:51:46,436 p=6581 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:51:46,450 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 20:51:47,606 p=6581 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 20:51:47,609 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 20:51:47,812 p=6581 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 20:51:47,815 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 20:51:48,646 p=6581 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 20:51:48,650 p=6581 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] ********************************************************************************************
2023-07-31 20:51:48,894 p=6581 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"cache_update_time": 1690811508, "cache_updated": false, "changed": false, "msg": "'/usr/bin/apt-get -y -o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"       install 'postgresql-14=14.8-1.pgdg22.04+1'' failed: E: Unable to correct problems, you have held broken packages.\n", "rc": 100, "stderr": "E: Unable to correct problems, you have held broken packages.\n", "stderr_lines": ["E: Unable to correct problems, you have held broken packages."], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nSome packages could not be installed. This may mean that you have\nrequested an impossible situation or if you are using the unstable\ndistribution that some required packages have not yet been created\nor been moved out of Incoming.\nThe following information may help to resolve the situation:\n\nThe following packages have unmet dependencies:\n postgresql-14 : Depends: postgresql-common (>= 229~) but it is not going to be installed\n                 Depends: ssl-cert but it is not installable\n                 Depends: libllvm14 but it is not installable\n                 Recommends: sysstat but it is not installable\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "Some packages could not be installed. This may mean that you have", "requested an impossible situation or if you are using the unstable", "distribution that some required packages have not yet been created", "or been moved out of Incoming.", "The following information may help to resolve the situation:", "", "The following packages have unmet dependencies:", " postgresql-14 : Depends: postgresql-common (>= 229~) but it is not going to be installed", "                 Depends: ssl-cert but it is not installable", "                 Depends: libllvm14 but it is not installable", "                 Recommends: sysstat but it is not installable"]}
2023-07-31 20:51:48,896 p=6581 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 20:51:48,896 p=6581 u=ansible n=ansible | ubuntu3                    : ok=9    changed=2    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 21:24:18,899 p=6885 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 21:24:18,903 p=6885 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 21:24:20,274 p=6885 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:24:20,282 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 21:24:20,289 p=6885 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:24:20,293 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 21:24:20,322 p=6885 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 21:24:20,325 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 21:25:17,143 p=6885 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:25:17,147 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 21:26:38,333 p=6885 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:26:38,341 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 21:26:38,611 p=6885 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:26:38,615 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 21:26:41,513 p=6885 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:26:41,517 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 21:26:41,745 p=6885 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:26:41,748 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 21:26:55,797 p=6885 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:26:55,800 p=6885 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 13] ********************************************************************************************
2023-07-31 21:28:36,555 p=6885 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:28:36,568 p=6885 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 21:28:36,568 p=6885 u=ansible n=ansible | ubuntu3                    : ok=9    changed=6    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-31 21:30:58,747 p=7242 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 21:30:58,750 p=7242 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 21:31:00,017 p=7242 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:00,026 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 21:31:00,052 p=7242 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:31:00,057 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 21:31:00,097 p=7242 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 21:31:00,101 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 21:31:00,994 p=7242 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:00,997 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 21:31:01,547 p=7242 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:01,550 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 21:31:01,756 p=7242 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:01,759 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 21:31:03,228 p=7242 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:03,231 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 21:31:03,476 p=7242 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:03,479 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 21:31:07,791 p=7242 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:31:07,795 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 13] ********************************************************************************************
2023-07-31 21:31:08,414 p=7242 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:08,418 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 21:31:08,821 p=7242 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:08,825 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 21:31:13,312 p=7242 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:31:13,315 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 21:31:13,645 p=7242 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 21:31:13,645 p=7242 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:31:13,648 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 21:31:13,996 p=7242 u=ansible n=ansible | [WARNING]: Module remote_tmp /var/lib/postgresql/.ansible/tmp did not exist and was created with a mode of 0700, this may cause issues when
running as another user. To avoid this, create the remote_tmp dir with the correct permissions manually

2023-07-31 21:31:13,996 p=7242 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:31:14,000 p=7242 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-31 21:31:14,006 p=7242 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"msg": "Attempting to decrypt but no vault secrets found"}
2023-07-31 21:31:14,007 p=7242 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 21:31:14,007 p=7242 u=ansible n=ansible | ubuntu3                    : ok=13   changed=4    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 21:31:49,206 p=7574 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 21:31:49,211 p=7574 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 21:31:50,182 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:50,190 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 21:31:50,197 p=7574 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:31:50,201 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 21:31:50,236 p=7574 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 21:31:50,240 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 21:31:51,103 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:51,106 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 21:31:51,629 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:51,632 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 21:31:51,840 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:51,843 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 21:31:53,423 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:53,426 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 21:31:53,650 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:53,654 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 21:31:55,596 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:31:55,599 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 13] ********************************************************************************************
2023-07-31 21:31:56,143 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:56,147 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 21:31:56,508 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:56,512 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 21:31:57,035 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:57,038 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 21:31:57,291 p=7574 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 21:31:57,291 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:57,294 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 21:31:57,562 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:57,566 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-31 21:31:57,844 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:31:57,848 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-07-31 21:31:58,135 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:31:58,138 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-31 21:31:58,391 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:31:58,396 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-31 21:31:58,665 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:31:58,671 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-31 21:32:35,436 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:35,440 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-31 21:32:35,612 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:32:35,616 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Install unzip package denpendency] ********************************************************************************
2023-07-31 21:32:40,346 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:40,350 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-31 21:32:43,635 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:43,639 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-31 21:32:43,882 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:32:43,887 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-31 21:32:43,937 p=7574 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:32:43,941 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-31 21:32:44,193 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:44,197 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-31 21:32:44,370 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:44,373 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-31 21:32:44,542 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:44,545 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-31 21:32:44,763 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:44,766 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-31 21:32:44,934 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:44,938 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-31 21:32:45,127 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:45,131 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-31 21:32:45,539 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:45,543 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-31 21:32:45,911 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:45,916 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-31 21:32:46,331 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:46,334 p=7574 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-31 21:32:46,638 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:46,643 p=7574 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-31 21:32:46,656 p=7574 u=ansible n=ansible | ok: [ubuntu3] => {
    "sonarqube_service.status.ActiveState": "inactive"
}
2023-07-31 21:32:46,670 p=7574 u=ansible n=ansible | RUNNING HANDLER [Reload SonarQube systemd service] ******************************************************************************************
2023-07-31 21:32:48,059 p=7574 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:32:48,065 p=7574 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 21:32:48,065 p=7574 u=ansible n=ansible | ubuntu3                    : ok=35   changed=18   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-31 21:34:00,107 p=8284 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-07-31 21:34:00,111 p=8284 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 21:34:01,568 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:34:01,576 p=8284 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] ************************************************************************************
2023-07-31 21:34:01,583 p=8284 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:34:01,587 p=8284 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] ************************************************************************************
2023-07-31 21:34:01,601 p=8284 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 21:34:01,605 p=8284 u=ansible n=ansible | TASK [install_nexus : Update apt] ***********************************************************************************************************
2023-07-31 21:34:02,539 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:34:02,542 p=8284 u=ansible n=ansible | TASK [install_nexus : Install Java] *********************************************************************************************************
2023-07-31 21:34:15,517 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:15,520 p=8284 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ****************************************************************************************
2023-07-31 21:34:15,809 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:15,812 p=8284 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ********************************************************************************
2023-07-31 21:34:16,068 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:34:16,071 p=8284 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **************************************************************************************************
2023-07-31 21:34:48,796 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:48,799 p=8284 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ***********************************************************************
2023-07-31 21:34:48,963 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:34:48,967 p=8284 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ***********************************************************************************************
2023-07-31 21:34:53,849 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:53,853 p=8284 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ******************************************************************************
2023-07-31 21:34:54,088 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:34:54,092 p=8284 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] **************************************************************************************
2023-07-31 21:34:54,120 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:34:54,124 p=8284 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ****************************************************************************************************
2023-07-31 21:34:54,345 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:54,348 p=8284 u=ansible n=ansible | TASK [install_nexus : Add user nexus] *******************************************************************************************************
2023-07-31 21:34:54,797 p=8284 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 21:34:54,798 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:54,801 p=8284 u=ansible n=ansible | TASK [install_nexus : Add line no password to sudoers file] *********************************************************************************
2023-07-31 21:34:55,029 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:55,032 p=8284 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] **********************************************************************************
2023-07-31 21:34:55,236 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:55,239 p=8284 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] **************************************************************************
2023-07-31 21:34:55,400 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:55,404 p=8284 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ******************************************************************************
2023-07-31 21:34:55,564 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:55,568 p=8284 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] *****************************************************************************************
2023-07-31 21:34:55,938 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:55,942 p=8284 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ****************************************************
2023-07-31 21:34:56,368 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:56,371 p=8284 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] *****************************************************************************************
2023-07-31 21:34:56,964 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:56,967 p=8284 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] **************************************************************************************************
2023-07-31 21:34:57,652 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:57,657 p=8284 u=ansible n=ansible | TASK [install_nexus : debug] ****************************************************************************************************************
2023-07-31 21:34:57,670 p=8284 u=ansible n=ansible | ok: [ubuntu3] => {
    "nexus_service_status.status.ActiveState": "inactive"
}
2023-07-31 21:34:57,689 p=8284 u=ansible n=ansible | RUNNING HANDLER [Reload Nexus systemd service] **********************************************************************************************
2023-07-31 21:34:59,530 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:34:59,545 p=8284 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 21:34:59,554 p=8284 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 21:35:00,449 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:00,459 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 21:35:00,470 p=8284 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:35:00,475 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 21:35:00,533 p=8284 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 21:35:00,538 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-07-31 21:35:01,576 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:01,579 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 21:35:02,425 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:02,430 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 21:35:02,748 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:02,752 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-07-31 21:35:06,550 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:06,553 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-07-31 21:35:06,849 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:06,853 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-07-31 21:35:09,732 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:35:09,736 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 13] ********************************************************************************************
2023-07-31 21:35:10,590 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:10,594 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 21:35:10,898 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:10,901 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 21:35:11,484 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:11,488 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 21:35:11,692 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:11,695 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 21:35:12,066 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:12,069 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-31 21:35:12,363 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:12,367 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-07-31 21:35:12,669 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:12,673 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-31 21:35:12,840 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:12,844 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-31 21:35:13,549 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:13,552 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-31 21:35:13,561 p=8284 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:35:13,566 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-31 21:35:13,764 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:13,767 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Install unzip package denpendency] ********************************************************************************
2023-07-31 21:35:14,457 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:14,460 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-31 21:35:14,467 p=8284 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:35:14,471 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-31 21:35:14,480 p=8284 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:35:14,484 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-31 21:35:14,493 p=8284 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:35:14,496 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-31 21:35:14,505 p=8284 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:35:14,509 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-31 21:35:14,689 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:14,693 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-31 21:35:14,901 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:14,905 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-07-31 21:35:15,165 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:15,169 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-31 21:35:15,450 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:15,456 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-31 21:35:15,831 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:35:15,835 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-31 21:35:16,191 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:16,194 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-31 21:35:16,668 p=8284 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:35:16,672 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-31 21:35:16,938 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:16,941 p=8284 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-31 21:35:17,194 p=8284 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:35:17,198 p=8284 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-31 21:35:17,208 p=8284 u=ansible n=ansible | ok: [ubuntu3] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-07-31 21:35:17,241 p=8284 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 21:35:17,241 p=8284 u=ansible n=ansible | ubuntu3                    : ok=52   changed=18   unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-31 21:37:05,717 p=9353 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-07-31 21:37:05,721 p=9353 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 21:37:07,183 p=9353 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:07,191 p=9353 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] ************************************************************************************
2023-07-31 21:37:07,198 p=9353 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:37:07,202 p=9353 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] ************************************************************************************
2023-07-31 21:37:07,234 p=9353 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 21:37:07,238 p=9353 u=ansible n=ansible | TASK [install_nexus : Update apt] ***********************************************************************************************************
2023-07-31 21:37:08,084 p=9353 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:08,087 p=9353 u=ansible n=ansible | TASK [install_nexus : Install Java] *********************************************************************************************************
2023-07-31 21:37:08,637 p=9353 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:08,640 p=9353 u=ansible n=ansible | TASK [install_nexus : Set default JDK to OpenJDK 8] *****************************************************************************************
2023-07-31 21:37:08,842 p=9353 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 21:37:21,479 p=9499 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-07-31 21:37:21,483 p=9499 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 21:37:22,416 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:22,425 p=9499 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] ************************************************************************************
2023-07-31 21:37:22,435 p=9499 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:37:22,440 p=9499 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] ************************************************************************************
2023-07-31 21:37:22,480 p=9499 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu3
2023-07-31 21:37:22,484 p=9499 u=ansible n=ansible | TASK [install_nexus : Update apt] ***********************************************************************************************************
2023-07-31 21:37:23,425 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:23,429 p=9499 u=ansible n=ansible | TASK [install_nexus : Install Java] *********************************************************************************************************
2023-07-31 21:37:24,055 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:24,058 p=9499 u=ansible n=ansible | TASK [install_nexus : Set default JDK to OpenJDK 8] *****************************************************************************************
2023-07-31 21:37:24,317 p=9499 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:37:24,320 p=9499 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ****************************************************************************************
2023-07-31 21:37:24,533 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:24,536 p=9499 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ********************************************************************************
2023-07-31 21:37:25,022 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:25,026 p=9499 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **************************************************************************************************
2023-07-31 21:37:25,033 p=9499 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:37:25,037 p=9499 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ***********************************************************************
2023-07-31 21:37:25,206 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:25,210 p=9499 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ***********************************************************************************************
2023-07-31 21:37:25,217 p=9499 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:37:25,220 p=9499 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ******************************************************************************
2023-07-31 21:37:25,227 p=9499 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:37:25,231 p=9499 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] **************************************************************************************
2023-07-31 21:37:25,238 p=9499 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:37:25,241 p=9499 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ****************************************************************************************************
2023-07-31 21:37:25,248 p=9499 u=ansible n=ansible | skipping: [ubuntu3]
2023-07-31 21:37:25,253 p=9499 u=ansible n=ansible | TASK [install_nexus : Add user nexus] *******************************************************************************************************
2023-07-31 21:37:25,542 p=9499 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 21:37:25,542 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:25,545 p=9499 u=ansible n=ansible | TASK [install_nexus : Add line no password to sudoers file] *********************************************************************************
2023-07-31 21:37:25,772 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:25,776 p=9499 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] **********************************************************************************
2023-07-31 21:37:26,076 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:26,079 p=9499 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] **************************************************************************
2023-07-31 21:37:26,394 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:26,398 p=9499 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ******************************************************************************
2023-07-31 21:37:26,558 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:26,561 p=9499 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] *****************************************************************************************
2023-07-31 21:37:26,854 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:26,858 p=9499 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ****************************************************
2023-07-31 21:37:27,330 p=9499 u=ansible n=ansible | changed: [ubuntu3]
2023-07-31 21:37:27,334 p=9499 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] *****************************************************************************************
2023-07-31 21:37:27,710 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:27,714 p=9499 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] **************************************************************************************************
2023-07-31 21:37:27,946 p=9499 u=ansible n=ansible | ok: [ubuntu3]
2023-07-31 21:37:27,950 p=9499 u=ansible n=ansible | TASK [install_nexus : debug] ****************************************************************************************************************
2023-07-31 21:37:27,958 p=9499 u=ansible n=ansible | ok: [ubuntu3] => {
    "nexus_service_status.status.ActiveState": "active"
}
2023-07-31 21:37:27,971 p=9499 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 21:37:27,971 p=9499 u=ansible n=ansible | ubuntu3                    : ok=18   changed=2    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2023-07-31 21:53:29,687 p=9914 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 21:53:29,690 p=9914 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 21:53:34,496 p=9914 u=ansible n=ansible | ok: [centos3]
2023-07-31 21:53:34,503 p=9914 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 21:53:34,547 p=9914 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 21:53:34,551 p=9914 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:06:51,401 p=9914 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 22:07:51,944 p=10069 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:07:51,949 p=10069 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:07:56,034 p=10069 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:07:56,047 p=10069 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:07:56,102 p=10069 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:07:56,106 p=10069 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:08:01,527 p=10069 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 22:10:59,203 p=10216 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:10:59,207 p=10216 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:11:02,467 p=10216 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:11:02,474 p=10216 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:11:02,520 p=10216 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:11:02,524 p=10216 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:11:08,086 p=10216 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:11:08,090 p=10216 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 22:12:26,198 p=10216 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:12:26,202 p=10216 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 22:12:27,404 p=10216 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:12:27,407 p=10216 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 22:12:32,319 p=10216 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:12:32,322 p=10216 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 22:12:44,861 p=10216 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:12:44,866 p=10216 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-31 22:12:46,380 p=10216 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"ansible_facts": {"pkg_mgr": "yum"}, "changed": false, "msg": ["Could not detect which major revision of dnf is in use, which is required to determine module backend.", "You should manually specify use_backend to tell the module whether to use the dnf4 or dnf5 backend})"]}
2023-07-31 22:12:46,381 p=10216 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:12:46,381 p=10216 u=ansible n=ansible | centos3                    : ok=7    changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:13:00,966 p=10525 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:13:00,970 p=10525 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:13:04,038 p=10525 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:13:04,045 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:13:04,091 p=10525 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:13:04,094 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:13:24,557 p=10525 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:13:24,560 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 22:13:26,837 p=10525 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:13:26,840 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 22:13:27,957 p=10525 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:13:27,960 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 22:13:31,157 p=10525 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:13:31,161 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 22:13:35,780 p=10525 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:13:35,783 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-31 22:14:43,524 p=10525 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:14:43,528 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-31 22:14:45,776 p=10525 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:14:45,781 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 22:14:45,790 p=10525 u=ansible n=ansible | skipping: [centos3]
2023-07-31 22:14:45,794 p=10525 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 22:14:49,874 p=10525 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Unable to start service postgresql: Job for postgresql.service failed because the control process exited with error code. See \"systemctl status postgresql.service\" and \"journalctl -xe\" for details.\n"}
2023-07-31 22:14:49,875 p=10525 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:14:49,875 p=10525 u=ansible n=ansible | centos3                    : ok=9    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 22:17:04,175 p=10895 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:17:04,179 p=10895 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:17:07,430 p=10895 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:17:07,437 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:17:07,483 p=10895 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:17:07,486 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:17:13,629 p=10895 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:17:13,632 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 22:17:15,743 p=10895 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:17:15,746 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 22:17:16,810 p=10895 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:17:16,813 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 22:17:19,707 p=10895 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:17:19,710 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 22:17:23,405 p=10895 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:17:23,408 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-31 22:17:25,577 p=10895 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:17:25,581 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 22:17:35,624 p=10895 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:17:35,628 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 22:17:38,726 p=10895 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:17:38,730 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-31 22:17:39,943 p=10895 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:17:39,947 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-31 22:17:40,977 p=10895 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:17:40,981 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-31 22:17:42,030 p=10895 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:17:42,033 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:18:21,123 p=10895 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:18:21,127 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 22:18:22,992 p=10895 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 22:18:22,992 p=10895 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:18:22,996 p=10895 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 22:18:25,308 p=10895 u=ansible n=ansible | [WARNING]: Module remote_tmp /var/lib/pgsql/.ansible/tmp did not exist and was created with a mode of 0700, this may cause issues when
running as another user. To avoid this, create the remote_tmp dir with the correct permissions manually

2023-07-31 22:18:25,308 p=10895 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (psycopg2) on localhost.localdomain's Python /usr/bin/python. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 22:18:25,309 p=10895 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:18:25,309 p=10895 u=ansible n=ansible | centos3                    : ok=15   changed=7    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:21:52,242 p=11399 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:21:52,246 p=11399 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:21:56,227 p=11399 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:21:56,234 p=11399 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:21:56,277 p=11399 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:21:56,281 p=11399 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:22:02,584 p=11399 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:22:02,587 p=11399 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 22:22:04,779 p=11399 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:22:04,782 p=11399 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 22:22:05,860 p=11399 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:22:05,865 p=11399 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 22:22:08,980 p=11399 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:22:08,983 p=11399 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 22:22:13,192 p=11399 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:22:13,195 p=11399 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-31 22:22:15,281 p=11399 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:22:15,285 p=11399 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 22:22:16,555 p=11399 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": true, "cmd": ["/usr/bin/postgresql-setup", "initdb"], "delta": "0:00:00.222774", "end": "2023-07-31 11:22:16.451540", "msg": "non-zero return code", "rc": 1, "start": "2023-07-31 11:22:16.228766", "stderr": "", "stderr_lines": [], "stdout": "Data directory is not empty!", "stdout_lines": ["Data directory is not empty!"]}
2023-07-31 22:22:16,556 p=11399 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:22:16,556 p=11399 u=ansible n=ansible | centos3                    : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:28:31,662 p=11670 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:28:31,666 p=11670 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:28:35,181 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:35,189 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:28:35,234 p=11670 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:28:35,237 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:28:41,563 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:41,568 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 22:28:44,011 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:44,014 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 22:28:45,369 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:45,373 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 22:28:49,011 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:49,015 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 22:28:53,104 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:53,108 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-31 22:28:55,272 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:55,275 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-31 22:28:56,552 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:56,556 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 22:28:56,563 p=11670 u=ansible n=ansible | skipping: [centos3]
2023-07-31 22:28:56,566 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 22:28:58,329 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:58,334 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-31 22:28:59,534 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:28:59,538 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-31 22:29:00,540 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:29:00,544 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-31 22:29:01,558 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:29:01,561 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:29:03,707 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:29:03,711 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 22:29:05,124 p=11670 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 22:29:05,124 p=11670 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:29:05,128 p=11670 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 22:29:06,523 p=11670 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (psycopg2) on localhost.localdomain's Python /usr/bin/python. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 22:29:06,524 p=11670 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:29:06,524 p=11670 u=ansible n=ansible | centos3                    : ok=15   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 22:34:45,402 p=12123 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:34:45,406 p=12123 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:34:49,206 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:34:49,214 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:34:49,260 p=12123 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:34:49,264 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:34:55,536 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:34:55,539 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 22:34:57,614 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:34:57,617 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 22:34:58,680 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:34:58,683 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 22:35:02,808 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:02,812 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 22:35:06,631 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:06,634 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-31 22:35:08,700 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:08,705 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-31 22:35:09,928 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:09,932 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 22:35:09,939 p=12123 u=ansible n=ansible | skipping: [centos3]
2023-07-31 22:35:09,943 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 22:35:11,471 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:11,474 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-31 22:35:12,669 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:12,672 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-31 22:35:13,898 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:13,902 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-31 22:35:15,025 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:15,028 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:35:17,232 p=12123 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:35:17,235 p=12123 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2-binary] ******************************************************************************************
2023-07-31 22:35:18,401 p=12123 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: ImportError: No module named pkg_resources
2023-07-31 22:35:18,401 p=12123 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (setuptools) on localhost.localdomain's Python /usr/bin/python. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 22:35:18,402 p=12123 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:35:18,403 p=12123 u=ansible n=ansible | centos3                    : ok=14   changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 22:36:42,996 p=12552 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:36:43,000 p=12552 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:36:46,507 p=12552 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:36:46,516 p=12552 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:36:46,573 p=12552 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:36:46,578 p=12552 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 22:36:48,217 p=12552 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 22:37:00,140 p=12666 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:37:00,144 p=12666 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:37:02,941 p=12666 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:37:02,949 p=12666 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:37:02,964 p=12666 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:37:02,967 p=12666 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2, python-pip] *************************************************************************************
2023-07-31 22:37:06,050 p=12666 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "No package matching 'python-pip' found available, installed or updated", "rc": 126, "results": ["python3-psycopg2-2.8.6-1.rhel7.x86_64 providing python3-psycopg2 is already installed", "No package matching 'python-pip' found available, installed or updated"]}
2023-07-31 22:37:06,050 p=12666 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:37:06,050 p=12666 u=ansible n=ansible | centos3                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:37:23,501 p=12770 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:37:23,504 p=12770 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:37:26,760 p=12770 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:37:26,767 p=12770 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:37:26,783 p=12770 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:37:26,787 p=12770 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2, python-pip] *************************************************************************************
2023-07-31 22:37:29,175 p=12770 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:37:29,179 p=12770 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2-binary] ******************************************************************************************
2023-07-31 22:37:30,288 p=12770 u=ansible n=ansible | An exception occurred during task execution. To see the full traceback, use -vvv. The error was: ImportError: No module named pkg_resources
2023-07-31 22:37:30,288 p=12770 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (setuptools) on localhost.localdomain's Python /usr/bin/python. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 22:37:30,289 p=12770 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:37:30,289 p=12770 u=ansible n=ansible | centos3                    : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:38:17,752 p=12889 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:38:17,756 p=12889 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:38:20,534 p=12889 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:38:20,541 p=12889 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:38:20,557 p=12889 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:38:20,560 p=12889 u=ansible n=ansible | TASK [install_sonarqube : Install package dependencies for psycopg2] ************************************************************************
2023-07-31 22:38:23,653 p=12889 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "No package matching 'python-pip' found available, installed or updated", "rc": 126, "results": ["python3-psycopg2-2.8.6-1.rhel7.x86_64 providing python3-psycopg2 is already installed", "No package matching 'python-pip' found available, installed or updated"]}
2023-07-31 22:38:23,654 p=12889 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:38:23,654 p=12889 u=ansible n=ansible | centos3                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:39:07,869 p=12990 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:39:07,873 p=12990 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:39:11,071 p=12990 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:39:11,079 p=12990 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:39:11,093 p=12990 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:39:11,097 p=12990 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:39:13,352 p=12990 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:39:13,356 p=12990 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 22:39:14,627 p=12990 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 22:39:14,627 p=12990 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:39:14,630 p=12990 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 22:39:15,844 p=12990 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (psycopg2) on localhost.localdomain's Python /usr/bin/python. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 22:39:15,845 p=12990 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:39:15,845 p=12990 u=ansible n=ansible | centos3                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:47:20,320 p=13281 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:47:20,324 p=13281 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:47:23,739 p=13281 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:47:23,746 p=13281 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:47:23,762 p=13281 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:47:23,765 p=13281 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:47:26,094 p=13281 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:47:26,097 p=13281 u=ansible n=ansible | TASK [install_sonarqube : Install epel-release] *********************************************************************************************
2023-07-31 22:47:38,062 p=13281 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:47:38,066 p=13281 u=ansible n=ansible | TASK [install_sonarqube : Install python-pip] ***********************************************************************************************
2023-07-31 22:48:11,958 p=13281 u=ansible n=ansible | changed: [centos3]
2023-07-31 22:48:11,961 p=13281 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 22:48:13,270 p=13281 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 22:48:13,270 p=13281 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:48:13,273 p=13281 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 22:48:14,534 p=13281 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (psycopg2) on localhost.localdomain's Python /usr/bin/python. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 22:48:14,535 p=13281 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:48:14,535 p=13281 u=ansible n=ansible | centos3                    : ok=6    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:49:09,401 p=13544 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:49:09,404 p=13544 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:49:12,250 p=13544 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:49:12,257 p=13544 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:49:12,273 p=13544 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:49:12,277 p=13544 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:49:14,414 p=13544 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:49:14,417 p=13544 u=ansible n=ansible | TASK [install_sonarqube : Install epel-release] *********************************************************************************************
2023-07-31 22:49:16,457 p=13544 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:49:16,460 p=13544 u=ansible n=ansible | TASK [install_sonarqube : Install python-pip] ***********************************************************************************************
2023-07-31 22:49:19,537 p=13544 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:49:19,540 p=13544 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2-binary] ******************************************************************************************
2023-07-31 22:49:26,111 p=13544 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": true, "cmd": ["pip", "install", "psycopg2-binary"], "delta": "0:00:05.559212", "end": "2023-07-31 11:49:26.010762", "msg": "non-zero return code", "rc": 1, "start": "2023-07-31 11:49:20.451550", "stderr": "Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-Eu4P8y/psycopg2-binary/\nYou are using pip version 8.1.2, however version 23.2.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.", "stderr_lines": ["Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-Eu4P8y/psycopg2-binary/", "You are using pip version 8.1.2, however version 23.2.1 is available.", "You should consider upgrading via the 'pip install --upgrade pip' command."], "stdout": "Collecting psycopg2-binary\n  Downloading https://files.pythonhosted.org/packages/98/3e/05ab0922422c91ca0ecb5939a100f8dc2b5d15f5978433beadc87c5329bf/psycopg2-binary-2.9.6.tar.gz (384kB)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-Eu4P8y/psycopg2-binary/setup.py\", line 119\n        f\"Unable to find 'pg_config' file in '{self.pg_config_exe}'\")\n                                                                   ^\n    SyntaxError: invalid syntax\n    \n    ----------------------------------------", "stdout_lines": ["Collecting psycopg2-binary", "  Downloading https://files.pythonhosted.org/packages/98/3e/05ab0922422c91ca0ecb5939a100f8dc2b5d15f5978433beadc87c5329bf/psycopg2-binary-2.9.6.tar.gz (384kB)", "    Complete output from command python setup.py egg_info:", "    Traceback (most recent call last):", "      File \"<string>\", line 1, in <module>", "      File \"/tmp/pip-build-Eu4P8y/psycopg2-binary/setup.py\", line 119", "        f\"Unable to find 'pg_config' file in '{self.pg_config_exe}'\")", "                                                                   ^", "    SyntaxError: invalid syntax", "    ", "    ----------------------------------------"]}
2023-07-31 22:49:26,111 p=13544 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:49:26,111 p=13544 u=ansible n=ansible | centos3                    : ok=5    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:49:49,975 p=13750 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:49:49,979 p=13750 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:49:53,430 p=13750 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:49:53,437 p=13750 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:49:53,454 p=13750 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:49:53,458 p=13750 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:49:55,739 p=13750 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:49:55,743 p=13750 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 22:49:57,169 p=13750 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 22:49:57,169 p=13750 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:49:57,173 p=13750 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 22:49:58,506 p=13750 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (psycopg2) on localhost.localdomain's Python /usr/bin/python. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 22:49:58,507 p=13750 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:49:58,507 p=13750 u=ansible n=ansible | centos3                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:52:56,003 p=13928 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:52:56,007 p=13928 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:52:59,469 p=13928 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:52:59,476 p=13928 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:52:59,492 p=13928 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:52:59,496 p=13928 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:53:01,823 p=13928 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:53:01,827 p=13928 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 22:53:03,109 p=13928 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 22:53:03,109 p=13928 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:53:03,112 p=13928 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 22:53:04,352 p=13928 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (psycopg2) on localhost.localdomain's Python /usr/bin/python. Please read the module documentation and install it in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter"}
2023-07-31 22:53:04,353 p=13928 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:53:04,353 p=13928 u=ansible n=ansible | centos3                    : ok=4    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 22:56:02,019 p=14063 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:56:02,023 p=14063 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:56:05,393 p=14063 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:56:05,400 p=14063 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:56:05,416 p=14063 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:56:05,419 p=14063 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:56:07,007 p=14063 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 22:56:11,751 p=14178 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 22:56:11,755 p=14178 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 22:56:14,371 p=14178 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:56:14,381 p=14178 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 22:56:14,402 p=14178 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 22:56:14,409 p=14178 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 22:56:16,786 p=14178 u=ansible n=ansible | ok: [centos3]
2023-07-31 22:56:16,789 p=14178 u=ansible n=ansible | TASK [install_sonarqube : Make sure psycopg2 is installed] **********************************************************************************
2023-07-31 22:56:22,205 p=14178 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "cmd": ["/usr/bin/python", "-m", "pip.__main__", "install", "psycopg2"], "msg": "stdout: Collecting psycopg2\n  Downloading https://files.pythonhosted.org/packages/af/c4/5726cddb53fe52f0e839eb3da04322364f14493217ebd5818cc5e4c948a5/psycopg2-2.9.6.tar.gz (383kB)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-0XlG0q/psycopg2/setup.py\", line 119\n        f\"Unable to find 'pg_config' file in '{self.pg_config_exe}'\")\n                                                                   ^\n    SyntaxError: invalid syntax\n    \n    ----------------------------------------\n\n:stderr: Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-0XlG0q/psycopg2/\nYou are using pip version 8.1.2, however version 23.2.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n"}
2023-07-31 22:56:22,206 p=14178 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 22:56:22,206 p=14178 u=ansible n=ansible | centos3                    : ok=3    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 23:04:01,014 p=14336 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 23:04:01,018 p=14336 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:04:05,349 p=14336 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:04:05,356 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 23:04:05,371 p=14336 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 23:04:05,374 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 23:04:09,077 p=14336 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:04:09,081 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Make sure psycopg2 is installed] **********************************************************************************
2023-07-31 23:04:13,678 p=14336 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:04:13,681 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 23:04:15,564 p=14336 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 23:04:15,564 p=14336 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:04:15,567 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 23:04:17,818 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:04:17,821 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-31 23:04:19,705 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:04:19,708 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-07-31 23:04:21,704 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:04:21,707 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-31 23:04:23,243 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:04:23,247 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-31 23:04:25,742 p=14336 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:04:25,746 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-31 23:05:04,974 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:04,978 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-31 23:05:06,693 p=14336 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:05:06,697 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-31 23:05:31,071 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:31,076 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-31 23:05:33,068 p=14336 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:05:33,071 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-31 23:05:33,101 p=14336 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:05:33,104 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-31 23:05:35,021 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:35,024 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-31 23:05:36,579 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:36,583 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-31 23:05:38,181 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:38,184 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] ***********************************************************************************************
2023-07-31 23:05:40,167 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:40,170 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-31 23:05:42,633 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:42,636 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-31 23:05:44,759 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:44,764 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-31 23:05:48,261 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:48,265 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-31 23:05:50,882 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:50,885 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-31 23:05:55,363 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:55,367 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-31 23:05:58,567 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:05:58,571 p=14336 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-31 23:05:58,580 p=14336 u=ansible n=ansible | ok: [centos3] => {
    "sonarqube_service.status.ActiveState": "inactive"
}
2023-07-31 23:05:58,584 p=14336 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 23:05:58,593 p=14336 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:05:58,605 p=14336 u=ansible n=ansible | RUNNING HANDLER [Reload SonarQube systemd service] ******************************************************************************************
2023-07-31 23:06:08,812 p=14336 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:06:08,819 p=14336 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 23:06:08,819 p=14336 u=ansible n=ansible | centos3                    : ok=27   changed=17   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-31 23:07:27,481 p=15145 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 23:07:27,486 p=15145 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:07:44,742 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:07:44,750 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 23:07:44,799 p=15145 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 23:07:44,803 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 23:09:28,460 p=15145 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:09:28,463 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 23:09:45,865 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:09:45,868 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 23:09:51,371 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:09:51,374 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 23:10:03,655 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:10:03,659 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 23:10:25,831 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:10:25,835 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL database Server] *******************************************************************************
2023-07-31 23:10:43,137 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:10:43,141 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-31 23:10:50,024 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:10:50,028 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 23:10:50,035 p=15145 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:10:50,038 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 23:11:00,879 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:11:00,882 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-31 23:11:08,256 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:11:08,259 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-31 23:11:16,544 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:11:16,547 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-31 23:11:23,118 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:11:23,121 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 23:11:42,932 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:11:42,936 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Make sure psycopg2 is installed] **********************************************************************************
2023-07-31 23:12:06,394 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:12:06,401 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 23:12:18,301 p=15145 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 23:12:18,301 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:12:18,305 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 23:12:29,552 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:12:29,556 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-31 23:12:40,458 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:12:40,463 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-07-31 23:12:55,119 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:12:55,126 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-31 23:13:02,822 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:13:02,826 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-31 23:13:25,929 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:13:25,933 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-31 23:13:25,942 p=15145 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:13:25,946 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-31 23:13:32,557 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:13:32,561 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-31 23:13:32,570 p=15145 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:13:32,574 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-31 23:13:32,583 p=15145 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:13:32,588 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-31 23:13:32,599 p=15145 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:13:32,604 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-31 23:13:32,613 p=15145 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:13:32,619 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-31 23:13:41,719 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:13:41,723 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-31 23:13:49,130 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:13:49,134 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] ***********************************************************************************************
2023-07-31 23:14:00,223 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:14:00,227 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-31 23:14:34,441 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:14:34,446 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-31 23:14:41,607 p=15145 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:14:41,611 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-31 23:14:56,187 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:14:56,192 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-31 23:15:06,374 p=15145 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:15:06,378 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-31 23:15:19,462 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:15:19,465 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-31 23:15:32,580 p=15145 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:15:32,584 p=15145 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-31 23:15:32,595 p=15145 u=ansible n=ansible | ok: [centos3] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-07-31 23:15:32,598 p=15145 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 23:15:32,607 p=15145 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:15:32,622 p=15145 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 23:15:32,623 p=15145 u=ansible n=ansible | centos3                    : ok=32   changed=3    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-31 23:24:51,638 p=16861 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 23:24:51,642 p=16861 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:24:57,837 p=16861 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:24:57,844 p=16861 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 23:24:57,889 p=16861 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 23:24:57,893 p=16861 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 23:24:58,233 p=16861 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 23:25:13,202 p=16960 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 23:25:13,206 p=16960 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:25:17,689 p=16960 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:25:17,697 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 23:25:17,747 p=16960 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 23:25:17,751 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 23:25:45,784 p=16960 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:25:45,787 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 23:25:51,482 p=16960 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:25:51,486 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 23:25:53,137 p=16960 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:25:53,141 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 23:25:59,598 p=16960 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:25:59,602 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 23:26:06,307 p=16960 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:26:06,310 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14 database Server] ****************************************************************************
2023-07-31 23:26:48,450 p=16960 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:26:48,453 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-31 23:26:50,450 p=16960 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:26:50,455 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 23:26:59,073 p=16960 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:26:59,076 p=16960 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 23:27:03,172 p=16960 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Unable to start service postgresql-14: Job for postgresql-14.service failed because the control process exited with error code. See \"systemctl status postgresql-14.service\" and \"journalctl -xe\" for details.\n"}
2023-07-31 23:27:03,173 p=16960 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 23:27:03,173 p=16960 u=ansible n=ansible | centos3                    : ok=10   changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-07-31 23:30:58,848 p=17427 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 23:30:58,852 p=17427 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:31:04,260 p=17427 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:31:04,268 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 23:31:04,313 p=17427 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 23:31:04,317 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 23:31:24,792 p=17427 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:31:24,795 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 23:31:29,335 p=17427 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:31:29,341 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 23:31:31,392 p=17427 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:31:31,396 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 23:31:37,611 p=17427 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:31:37,617 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 23:31:45,435 p=17427 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:31:45,439 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14 database Server] ****************************************************************************
2023-07-31 23:31:49,483 p=17427 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:31:49,486 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-31 23:31:51,278 p=17427 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:31:51,282 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 23:31:51,289 p=17427 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:31:51,292 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 23:31:54,700 p=17427 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:31:54,704 p=17427 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-31 23:31:56,414 p=17427 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Destination /var/lib/pgsql/data/pg_hba.conf does not exist !", "rc": 257}
2023-07-31 23:31:56,415 p=17427 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 23:31:56,415 p=17427 u=ansible n=ansible | centos3                    : ok=10   changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-07-31 23:32:31,984 p=17831 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 23:32:31,988 p=17831 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:32:35,842 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:32:35,849 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 23:32:35,894 p=17831 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 23:32:35,897 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 23:32:52,989 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:32:52,991 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 23:32:57,418 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:32:57,422 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 23:32:59,039 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:32:59,042 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 23:33:03,499 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:03,502 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 23:33:09,719 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:09,722 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14 database Server] ****************************************************************************
2023-07-31 23:33:13,521 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:13,525 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-31 23:33:15,167 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:15,171 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 23:33:15,178 p=17831 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:33:15,182 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 23:33:18,621 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:18,624 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-31 23:33:20,521 p=17831 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:33:20,524 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-31 23:33:22,108 p=17831 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:33:22,111 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-31 23:33:23,692 p=17831 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:33:23,696 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 23:33:27,628 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:27,631 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Make sure psycopg2 is installed] **********************************************************************************
2023-07-31 23:33:32,982 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:32,985 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 23:33:35,009 p=17831 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 23:33:35,009 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:35,013 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 23:33:37,630 p=17831 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:33:37,633 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-31 23:33:39,743 p=17831 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:33:39,747 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-07-31 23:33:41,861 p=17831 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:33:41,865 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-31 23:33:43,532 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:43,536 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-31 23:33:48,319 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:48,323 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-31 23:33:48,333 p=17831 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:33:48,338 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-31 23:33:50,032 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:50,036 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-31 23:33:50,045 p=17831 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:33:50,049 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-31 23:33:50,058 p=17831 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:33:50,061 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-31 23:33:50,070 p=17831 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:33:50,075 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-31 23:33:50,085 p=17831 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:33:50,089 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-31 23:33:51,637 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:51,640 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-31 23:33:53,249 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:53,252 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] ***********************************************************************************************
2023-07-31 23:33:55,352 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:33:55,355 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-31 23:34:01,208 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:34:01,211 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-31 23:34:02,759 p=17831 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:34:02,762 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-31 23:34:05,706 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:34:05,709 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-31 23:34:08,276 p=17831 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:34:08,279 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-31 23:34:10,829 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:34:10,832 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-31 23:34:13,343 p=17831 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:34:13,347 p=17831 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-31 23:34:13,355 p=17831 u=ansible n=ansible | ok: [centos3] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-07-31 23:34:13,360 p=17831 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 23:34:13,368 p=17831 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:34:13,378 p=17831 u=ansible n=ansible | RUNNING HANDLER [Restart PostgreSQL] ********************************************************************************************************
2023-07-31 23:34:16,055 p=17831 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Unable to start service postgresql: Job for postgresql.service failed because the control process exited with error code. See \"systemctl status postgresql.service\" and \"journalctl -xe\" for details.\n"}
2023-07-31 23:34:16,056 p=17831 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 23:34:16,056 p=17831 u=ansible n=ansible | centos3                    : ok=32   changed=8    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2023-07-31 23:35:45,711 p=18842 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-07-31 23:35:45,715 p=18842 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:35:51,251 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:35:51,258 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-07-31 23:35:51,303 p=18842 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos3
2023-07-31 23:35:51,307 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-07-31 23:36:10,430 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:10,433 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-07-31 23:36:15,868 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:15,872 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-07-31 23:36:18,427 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:18,431 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-07-31 23:36:23,446 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:23,449 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-07-31 23:36:29,620 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:29,623 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14 database Server] ****************************************************************************
2023-07-31 23:36:33,720 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:33,725 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-07-31 23:36:35,626 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:35,629 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-07-31 23:36:35,636 p=18842 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:36:35,640 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-07-31 23:36:39,120 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:39,123 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-07-31 23:36:41,664 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:41,667 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-07-31 23:36:43,213 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:43,216 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-07-31 23:36:44,779 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:44,782 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-07-31 23:36:48,555 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:48,558 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Make sure psycopg2 is installed] **********************************************************************************
2023-07-31 23:36:53,704 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:53,707 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-07-31 23:36:55,997 p=18842 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 23:36:55,997 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:56,000 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-07-31 23:36:58,468 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:36:58,471 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-07-31 23:37:00,676 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:00,680 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-07-31 23:37:02,897 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:02,900 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-07-31 23:37:04,697 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:04,701 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-07-31 23:37:09,645 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:09,649 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-07-31 23:37:09,656 p=18842 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:37:09,659 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-07-31 23:37:11,437 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:11,440 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-07-31 23:37:11,447 p=18842 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:37:11,451 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-07-31 23:37:11,460 p=18842 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:37:11,464 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-07-31 23:37:11,473 p=18842 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:37:11,476 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-07-31 23:37:11,485 p=18842 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:37:11,489 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-07-31 23:37:13,119 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:13,122 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-07-31 23:37:14,952 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:14,956 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] ***********************************************************************************************
2023-07-31 23:37:17,324 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:17,329 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-07-31 23:37:24,625 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:24,628 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-07-31 23:37:26,504 p=18842 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:37:26,508 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-07-31 23:37:29,650 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:29,653 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-07-31 23:37:32,250 p=18842 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:37:32,253 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-07-31 23:37:34,816 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:34,819 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-07-31 23:37:37,342 p=18842 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:37:37,345 p=18842 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-07-31 23:37:37,355 p=18842 u=ansible n=ansible | ok: [centos3] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-07-31 23:37:37,358 p=18842 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-07-31 23:37:37,366 p=18842 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:37:37,379 p=18842 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 23:37:37,379 p=18842 u=ansible n=ansible | centos3                    : ok=32   changed=2    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-07-31 23:38:58,669 p=19826 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-07-31 23:38:58,674 p=19826 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:39:04,461 p=19826 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:39:04,475 p=19826 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] ************************************************************************************
2023-07-31 23:39:04,507 p=19826 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos3
2023-07-31 23:39:04,515 p=19826 u=ansible n=ansible | TASK [install_nexus : Update yum] ***********************************************************************************************************
2023-07-31 23:39:29,801 p=19826 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:39:29,811 p=19826 u=ansible n=ansible | TASK [install_nexus : Install Java] *********************************************************************************************************
2023-07-31 23:40:46,401 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:40:46,409 p=19826 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ****************************************************************************************
2023-07-31 23:40:47,984 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:40:47,988 p=19826 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ********************************************************************************
2023-07-31 23:40:49,151 p=19826 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:40:49,155 p=19826 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **************************************************************************************************
2023-07-31 23:41:20,995 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:41:20,999 p=19826 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ***********************************************************************
2023-07-31 23:41:22,630 p=19826 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:41:22,634 p=19826 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ***********************************************************************************************
2023-07-31 23:42:14,617 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:14,622 p=19826 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ******************************************************************************
2023-07-31 23:42:16,101 p=19826 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:42:16,105 p=19826 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] **************************************************************************************
2023-07-31 23:42:16,138 p=19826 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:42:16,144 p=19826 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ****************************************************************************************************
2023-07-31 23:42:17,524 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:17,527 p=19826 u=ansible n=ansible | TASK [install_nexus : Add user nexus] *******************************************************************************************************
2023-07-31 23:42:19,420 p=19826 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-07-31 23:42:19,420 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:19,424 p=19826 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] **********************************************************************************
2023-07-31 23:42:29,414 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:29,417 p=19826 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] **************************************************************************
2023-07-31 23:42:31,125 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:31,130 p=19826 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ******************************************************************************
2023-07-31 23:42:32,905 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:32,912 p=19826 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] *****************************************************************************************
2023-07-31 23:42:41,209 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:41,214 p=19826 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ****************************************************
2023-07-31 23:42:44,179 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:44,185 p=19826 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] *****************************************************************************************
2023-07-31 23:42:47,481 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:42:47,486 p=19826 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] **************************************************************************************************
2023-07-31 23:43:00,071 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:43:00,078 p=19826 u=ansible n=ansible | TASK [install_nexus : debug] ****************************************************************************************************************
2023-07-31 23:43:00,096 p=19826 u=ansible n=ansible | ok: [centos3] => {
    "nexus_service_status.status.ActiveState": "inactive"
}
2023-07-31 23:43:00,102 p=19826 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] ************************************************************************************
2023-07-31 23:43:00,125 p=19826 u=ansible n=ansible | skipping: [centos3]
2023-07-31 23:43:00,142 p=19826 u=ansible n=ansible | RUNNING HANDLER [Reload Nexus systemd service] **********************************************************************************************
2023-07-31 23:43:21,822 p=19826 u=ansible n=ansible | changed: [centos3]
2023-07-31 23:43:21,833 p=19826 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-07-31 23:43:21,833 p=19826 u=ansible n=ansible | centos3                    : ok=22   changed=14   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-07-31 23:44:52,591 p=20612 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-07-31 23:44:52,597 p=20612 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:45:02,567 p=20612 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 23:45:06,970 p=20697 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-07-31 23:45:06,978 p=20697 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:45:35,591 p=20697 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-07-31 23:45:39,066 p=20749 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-07-31 23:45:39,070 p=20749 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-07-31 23:46:01,212 p=20749 u=ansible n=ansible | ok: [centos3]
2023-07-31 23:46:01,226 p=20749 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] ************************************************************************************
2023-07-31 23:46:01,333 p=20749 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos3
2023-07-31 23:46:01,337 p=20749 u=ansible n=ansible | TASK [install_nexus : Update yum] ***********************************************************************************************************
2023-07-31 23:57:16,698 p=20749 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-08-01 00:05:10,458 p=20953 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-08-01 00:05:10,462 p=20953 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:05:11,843 p=20953 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:05:11,851 p=20953 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] ************************************************************************************
2023-08-01 00:05:11,889 p=20953 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos4
2023-08-01 00:05:11,894 p=20953 u=ansible n=ansible | TASK [install_nexus : Update yum] ***********************************************************************************************************
2023-08-01 00:09:01,105 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:01,111 p=20953 u=ansible n=ansible | TASK [install_nexus : Install Java] *********************************************************************************************************
2023-08-01 00:09:13,738 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:13,743 p=20953 u=ansible n=ansible | TASK [install_nexus : Set default JDK to OpenJDK 8] *****************************************************************************************
2023-08-01 00:09:14,267 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:14,273 p=20953 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ****************************************************************************************
2023-08-01 00:09:14,723 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:14,728 p=20953 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ********************************************************************************
2023-08-01 00:09:15,156 p=20953 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:09:15,161 p=20953 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **************************************************************************************************
2023-08-01 00:09:42,046 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:42,051 p=20953 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ***********************************************************************
2023-08-01 00:09:42,398 p=20953 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:09:42,403 p=20953 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ***********************************************************************************************
2023-08-01 00:09:50,139 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:50,144 p=20953 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ******************************************************************************
2023-08-01 00:09:50,670 p=20953 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:09:50,675 p=20953 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] **************************************************************************************
2023-08-01 00:09:50,718 p=20953 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:09:50,723 p=20953 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ****************************************************************************************************
2023-08-01 00:09:51,162 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:51,166 p=20953 u=ansible n=ansible | TASK [install_nexus : Add user nexus] *******************************************************************************************************
2023-08-01 00:09:51,744 p=20953 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-08-01 00:09:51,744 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:51,749 p=20953 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] **********************************************************************************
2023-08-01 00:09:52,589 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:52,594 p=20953 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] **************************************************************************
2023-08-01 00:09:52,947 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:52,951 p=20953 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ******************************************************************************
2023-08-01 00:09:53,398 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:53,403 p=20953 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] *****************************************************************************************
2023-08-01 00:09:54,137 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:54,142 p=20953 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ****************************************************
2023-08-01 00:09:54,742 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:54,747 p=20953 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] *****************************************************************************************
2023-08-01 00:09:55,643 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:55,648 p=20953 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] **************************************************************************************************
2023-08-01 00:09:56,355 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:56,360 p=20953 u=ansible n=ansible | TASK [install_nexus : debug] ****************************************************************************************************************
2023-08-01 00:09:56,374 p=20953 u=ansible n=ansible | ok: [centos4] => {
    "nexus_service_status.status.ActiveState": "inactive"
}
2023-08-01 00:09:56,379 p=20953 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] ************************************************************************************
2023-08-01 00:09:56,392 p=20953 u=ansible n=ansible | skipping: [centos4]
2023-08-01 00:09:56,410 p=20953 u=ansible n=ansible | RUNNING HANDLER [Reload Nexus systemd service] **********************************************************************************************
2023-08-01 00:09:58,328 p=20953 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:09:58,338 p=20953 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:09:58,338 p=20953 u=ansible n=ansible | centos4                    : ok=23   changed=16   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-08-01 00:11:19,907 p=21557 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:11:19,913 p=21557 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:11:21,888 p=21557 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:11:21,904 p=21557 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:11:21,978 p=21557 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:11:21,985 p=21557 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:11:24,312 p=21557 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:11:24,317 p=21557 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 00:11:37,443 p=21557 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:11:37,449 p=21557 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 00:11:37,946 p=21557 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:11:37,951 p=21557 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-08-01 00:11:40,992 p=21557 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:11:40,997 p=21557 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-08-01 00:11:44,031 p=21557 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarch2jak_6pk.rpm is not installed"}
2023-08-01 00:11:44,032 p=21557 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:11:44,032 p=21557 u=ansible n=ansible | centos4                    : ok=6    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:14:44,089 p=21798 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:14:44,095 p=21798 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:14:45,743 p=21798 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:14:45,757 p=21798 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:14:45,822 p=21798 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:14:45,828 p=21798 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:14:47,153 p=21798 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:14:47,158 p=21798 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 00:14:48,195 p=21798 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:14:48,199 p=21798 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 00:14:48,684 p=21798 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:14:48,689 p=21798 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-08-01 00:14:50,613 p=21798 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:14:50,618 p=21798 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-08-01 00:14:52,662 p=21798 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchpxfk9j0s.rpm is not installed"}
2023-08-01 00:14:52,663 p=21798 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:14:52,663 p=21798 u=ansible n=ansible | centos4                    : ok=6    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:20:28,937 p=21991 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:20:28,943 p=21991 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:20:30,661 p=21991 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:20:30,672 p=21991 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:20:30,727 p=21991 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:20:30,733 p=21991 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:20:31,902 p=21991 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:20:31,907 p=21991 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 00:20:32,839 p=21991 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:20:32,843 p=21991 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 00:20:33,457 p=21991 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:20:33,467 p=21991 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-08-01 00:20:35,693 p=21991 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:20:35,697 p=21991 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-08-01 00:20:38,385 p=21991 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to validate GPG signature for pgdg-redhat-repo-42.0-32.noarch: Public key for pgdg-redhat-repo-latest.noarchy90w9bmc.rpm is not installed"}
2023-08-01 00:20:38,386 p=21991 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:20:38,387 p=21991 u=ansible n=ansible | centos4                    : ok=6    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:23:41,579 p=22157 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:23:41,585 p=22157 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:23:43,254 p=22157 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:23:43,266 p=22157 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:23:43,322 p=22157 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:23:43,328 p=22157 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:23:47,862 p=22157 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:23:47,863 p=22157 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:23:47,863 p=22157 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:24:40,067 p=22258 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:24:40,073 p=22258 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:24:41,425 p=22258 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:24:41,436 p=22258 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:24:41,486 p=22258 u=ansible n=ansible | ERROR! failed at splitting arguments, either an unbalanced jinja2 block or quotes: yum install -y {{ centos_postgresql_url }}'

The error appears to be in '/home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml': line 22, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Install the PostgreSQL repository
  ^ here

2023-08-01 00:24:55,566 p=22330 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:24:55,572 p=22330 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:24:56,956 p=22330 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:24:56,969 p=22330 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:24:57,033 p=22330 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:24:57,040 p=22330 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:25:01,541 p=22330 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:25:01,542 p=22330 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:25:01,542 p=22330 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:41:58,366 p=22438 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:41:58,373 p=22438 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:42:00,007 p=22438 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:42:00,019 p=22438 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:42:00,078 p=22438 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:42:00,084 p=22438 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:42:06,578 p=22438 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:42:06,579 p=22438 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:42:06,579 p=22438 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:42:16,422 p=22560 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:42:16,427 p=22560 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:42:17,676 p=22560 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:42:17,686 p=22560 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:42:17,739 p=22560 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:42:17,744 p=22560 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:42:24,678 p=22560 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:42:24,679 p=22560 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:42:24,679 p=22560 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:43:06,978 p=22669 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:43:06,984 p=22669 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:43:08,328 p=22669 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:43:08,339 p=22669 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:43:08,395 p=22669 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:43:08,400 p=22669 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:43:14,869 p=22669 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:43:14,870 p=22669 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:43:14,870 p=22669 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:43:29,324 p=22765 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:43:29,330 p=22765 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:43:30,553 p=22765 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:43:30,564 p=22765 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:43:30,617 p=22765 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:43:30,622 p=22765 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:43:35,844 p=22765 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:43:35,849 p=22765 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 00:43:42,227 p=22765 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:43:42,229 p=22765 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:43:42,229 p=22765 u=ansible n=ansible | centos4                    : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:46:50,616 p=22918 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:46:50,622 p=22918 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:46:52,229 p=22918 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:46:52,241 p=22918 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:46:52,296 p=22918 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:46:52,301 p=22918 u=ansible n=ansible | TASK [install_sonarqube : Disable GPG Signature Verification] *******************************************************************************
2023-08-01 00:46:52,799 p=22918 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:46:52,805 p=22918 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:46:57,499 p=22918 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:46:57,500 p=22918 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:46:57,500 p=22918 u=ansible n=ansible | centos4                    : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:55:00,477 p=23075 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:55:00,483 p=23075 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:55:02,110 p=23075 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:55:02,121 p=23075 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:55:02,175 p=23075 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:55:02,180 p=23075 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:55:06,651 p=23075 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:55:06,652 p=23075 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:55:06,652 p=23075 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:55:20,203 p=23175 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:55:20,209 p=23175 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:55:21,574 p=23175 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:55:21,588 p=23175 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:55:21,662 p=23175 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:55:21,668 p=23175 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:55:26,124 p=23175 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:55:26,125 p=23175 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:55:26,126 p=23175 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:57:08,724 p=23275 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:57:08,730 p=23275 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:57:10,174 p=23275 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:57:10,185 p=23275 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:57:10,239 p=23275 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:57:10,244 p=23275 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:57:14,557 p=23275 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 00:57:14,557 p=23275 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:57:14,557 p=23275 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 00:57:47,265 p=23376 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 00:57:47,271 p=23376 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 00:57:48,574 p=23376 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:57:48,585 p=23376 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 00:57:48,640 p=23376 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 00:57:48,645 p=23376 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 00:57:49,653 p=23376 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:57:49,658 p=23376 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 00:57:50,538 p=23376 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:57:50,543 p=23376 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 00:57:51,107 p=23376 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:57:51,112 p=23376 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-08-01 00:57:53,575 p=23376 u=ansible n=ansible | ok: [centos4]
2023-08-01 00:57:53,581 p=23376 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-08-01 00:57:55,634 p=23376 u=ansible n=ansible | changed: [centos4]
2023-08-01 00:57:55,640 p=23376 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14 database Server] ****************************************************************************
2023-08-01 00:57:56,588 p=23376 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "failures": ["No package postgresql14 available.", "No package postgresql14-server available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2023-08-01 00:57:56,589 p=23376 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 00:57:56,589 p=23376 u=ansible n=ansible | centos4                    : ok=7    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 01:04:52,942 p=23592 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:04:52,948 p=23592 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:04:54,587 p=23592 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:04:54,600 p=23592 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:04:54,658 p=23592 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:04:54,664 p=23592 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:04:55,882 p=23592 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:04:55,887 p=23592 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:04:56,760 p=23592 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:04:56,765 p=23592 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:04:57,308 p=23592 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:04:57,313 p=23592 u=ansible n=ansible | TASK [install_sonarqube : Import GPG key for PostgreSQL repository] *************************************************************************
2023-08-01 01:04:59,571 p=23592 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:04:59,578 p=23592 u=ansible n=ansible | TASK [install_sonarqube : Install the PostgreSQL repository] ********************************************************************************
2023-08-01 01:05:02,839 p=23592 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:05:02,844 p=23592 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14 database Server] ****************************************************************************
2023-08-01 01:05:07,844 p=23592 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 01:05:07,845 p=23592 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:05:07,845 p=23592 u=ansible n=ansible | centos4                    : ok=7    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 01:05:20,728 p=23814 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:05:20,734 p=23814 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:05:22,052 p=23814 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:05:22,064 p=23814 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:05:22,119 p=23814 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:05:22,125 p=23814 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:05:26,471 p=23814 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 01:05:26,472 p=23814 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:05:26,472 p=23814 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 01:07:17,128 p=23946 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:07:17,134 p=23946 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:07:18,563 p=23946 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:07:18,574 p=23946 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:07:18,626 p=23946 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:07:18,631 p=23946 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:07:23,827 p=23946 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Failed to download metadata for repo 'pgdg-common': repomd.xml GPG signature verification error: Bad GPG signature", "rc": 1, "results": []}
2023-08-01 01:07:23,828 p=23946 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:07:23,828 p=23946 u=ansible n=ansible | centos4                    : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 01:20:14,292 p=24066 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:20:14,297 p=24066 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:20:15,593 p=24066 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:20:15,600 p=24066 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:20:15,634 p=24066 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:20:15,638 p=24066 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:20:16,372 p=24066 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:20:16,376 p=24066 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:20:16,968 p=24066 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:20:16,970 p=24066 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:20:17,259 p=24066 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:20:17,262 p=24066 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL latest database Server] ************************************************************************
2023-08-01 01:20:23,952 p=24066 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:20:23,956 p=24066 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-08-01 01:20:24,278 p=24066 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:20:24,281 p=24066 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-08-01 01:20:24,580 p=24066 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "cmd": "/usr/pgsql/bin/postgresql-setup initdb", "msg": "[Errno 2] No such file or directory: b'/usr/pgsql/bin/postgresql-setup'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-08-01 01:20:24,581 p=24066 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:20:24,581 p=24066 u=ansible n=ansible | centos4                    : ok=7    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 01:23:28,174 p=24281 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:23:28,178 p=24281 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:23:29,508 p=24281 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:29,516 p=24281 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:23:29,551 p=24281 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:23:29,555 p=24281 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:23:30,279 p=24281 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:30,282 p=24281 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:23:30,887 p=24281 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:30,889 p=24281 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:23:31,171 p=24281 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:31,174 p=24281 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL latest database Server] ************************************************************************
2023-08-01 01:23:31,308 p=24281 u=ansible n=ansible |  [ERROR]: User interrupted execution

2023-08-01 01:23:36,312 p=24395 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:23:36,316 p=24395 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:23:37,319 p=24395 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:37,327 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:23:37,368 p=24395 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:23:37,372 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:23:38,090 p=24395 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:38,092 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:23:38,801 p=24395 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:38,804 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:23:39,099 p=24395 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:39,102 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL latest database Server] ************************************************************************
2023-08-01 01:23:39,677 p=24395 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:39,680 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-08-01 01:23:39,959 p=24395 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:23:39,962 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-08-01 01:23:40,997 p=24395 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:23:41,001 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-08-01 01:23:41,618 p=24395 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:23:41,621 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-08-01 01:23:41,922 p=24395 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:23:41,925 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-08-01 01:23:42,164 p=24395 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:23:42,167 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-08-01 01:23:42,403 p=24395 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:23:42,406 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-08-01 01:23:46,295 p=24395 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:23:46,298 p=24395 u=ansible n=ansible | TASK [install_sonarqube : Make sure psycopg2 is installed] **********************************************************************************
2023-08-01 01:23:46,653 p=24395 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Unable to find any of pip3 to use.  pip needs to be installed."}
2023-08-01 01:23:46,654 p=24395 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:23:46,654 p=24395 u=ansible n=ansible | centos4                    : ok=13   changed=6    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 01:24:01,484 p=24682 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:24:01,488 p=24682 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:24:02,458 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:02,465 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:24:02,499 p=24682 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:24:02,502 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:24:03,185 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:03,189 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:24:03,748 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:03,751 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:24:04,048 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:04,051 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL latest database Server] ************************************************************************
2023-08-01 01:24:04,616 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:04,620 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-08-01 01:24:04,916 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:04,919 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-08-01 01:24:04,926 p=24682 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:24:04,930 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-08-01 01:24:05,364 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:05,367 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-08-01 01:24:05,696 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:05,699 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-08-01 01:24:05,941 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:05,944 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-08-01 01:24:06,185 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:06,188 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-08-01 01:24:06,753 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:06,756 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-08-01 01:24:07,125 p=24682 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-08-01 01:24:07,125 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:07,128 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-08-01 01:24:07,541 p=24682 u=ansible n=ansible | [WARNING]: Module remote_tmp /var/lib/pgsql/.ansible/tmp did not exist and was created with a mode of 0700, this may cause issues when
running as another user. To avoid this, create the remote_tmp dir with the correct permissions manually

2023-08-01 01:24:07,541 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:07,544 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-08-01 01:24:07,896 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:07,900 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-08-01 01:24:08,245 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:08,248 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-08-01 01:24:08,555 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:08,558 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-08-01 01:24:08,798 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:08,801 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-08-01 01:24:47,669 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:47,672 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-08-01 01:24:48,029 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:48,032 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-08-01 01:24:50,788 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:50,791 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-08-01 01:24:51,314 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:51,317 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-08-01 01:24:51,346 p=24682 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:24:51,349 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-08-01 01:24:51,660 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:51,664 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-08-01 01:24:51,908 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:51,912 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-08-01 01:24:52,159 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:52,162 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] ***********************************************************************************************
2023-08-01 01:24:52,504 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:52,507 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-08-01 01:24:52,782 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:52,785 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-08-01 01:24:53,031 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:53,034 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-08-01 01:24:53,557 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:53,560 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-08-01 01:24:53,951 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:53,954 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-08-01 01:24:54,473 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:54,476 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-08-01 01:24:54,832 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:54,836 p=24682 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-08-01 01:24:54,847 p=24682 u=ansible n=ansible | ok: [centos4] => {
    "sonarqube_service.status.ActiveState": "inactive"
}
2023-08-01 01:24:54,851 p=24682 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-08-01 01:24:54,861 p=24682 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:24:54,872 p=24682 u=ansible n=ansible | RUNNING HANDLER [Reload SonarQube systemd service] ******************************************************************************************
2023-08-01 01:24:56,298 p=24682 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:24:56,304 p=24682 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:24:56,304 p=24682 u=ansible n=ansible | centos4                    : ok=35   changed=18   unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2023-08-01 01:28:11,972 p=25415 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:28:11,975 p=25415 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:28:13,313 p=25415 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:28:13,322 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:28:13,357 p=25415 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:28:13,361 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:31:42,855 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:31:42,858 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:31:54,942 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:31:54,945 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:31:55,305 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:31:55,308 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL latest database Server] ************************************************************************
2023-08-01 01:32:00,411 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:00,414 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-08-01 01:32:00,716 p=25415 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:32:00,719 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-08-01 01:32:01,681 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:01,685 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-08-01 01:32:02,322 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:02,326 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-08-01 01:32:02,625 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:02,628 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-08-01 01:32:02,865 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:02,868 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-08-01 01:32:03,106 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:03,109 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-08-01 01:32:05,557 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:05,560 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-08-01 01:32:05,917 p=25415 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-08-01 01:32:05,917 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:05,920 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-08-01 01:32:06,327 p=25415 u=ansible n=ansible | [WARNING]: Module remote_tmp /var/lib/pgsql/.ansible/tmp did not exist and was created with a mode of 0700, this may cause issues when
running as another user. To avoid this, create the remote_tmp dir with the correct permissions manually

2023-08-01 01:32:06,327 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:06,330 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-08-01 01:32:06,680 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:06,683 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-08-01 01:32:07,023 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:07,026 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-08-01 01:32:07,326 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:07,329 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-08-01 01:32:07,560 p=25415 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:32:07,563 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-08-01 01:32:47,143 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:47,146 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-08-01 01:32:47,378 p=25415 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:32:47,382 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-08-01 01:32:49,985 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:49,988 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-08-01 01:32:50,302 p=25415 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:32:50,305 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-08-01 01:32:50,333 p=25415 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:32:50,336 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-08-01 01:32:50,580 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:50,583 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-08-01 01:32:50,819 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:50,822 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-08-01 01:32:51,064 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:51,067 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] ***********************************************************************************************
2023-08-01 01:32:51,375 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:51,379 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-08-01 01:32:51,649 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:51,652 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-08-01 01:32:51,894 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:51,897 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-08-01 01:32:52,413 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:52,416 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-08-01 01:32:52,801 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:52,804 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-08-01 01:32:53,264 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:53,267 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-08-01 01:32:53,606 p=25415 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:32:53,609 p=25415 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-08-01 01:32:53,619 p=25415 u=ansible n=ansible | ok: [centos4] => {
    "sonarqube_service.status.ActiveState": "inactive"
}
2023-08-01 01:32:53,623 p=25415 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-08-01 01:32:53,632 p=25415 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:32:53,646 p=25415 u=ansible n=ansible | RUNNING HANDLER [Restart PostgreSQL] ********************************************************************************************************
2023-08-01 01:32:54,018 p=25415 u=ansible n=ansible | fatal: [centos4]: FAILED! => {"changed": false, "msg": "Could not find the requested service postgresql-14: host"}
2023-08-01 01:32:54,019 p=25415 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:32:54,019 p=25415 u=ansible n=ansible | centos4                    : ok=35   changed=27   unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-08-01 01:33:14,357 p=26215 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:33:14,361 p=26215 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:33:16,440 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:16,450 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:33:16,497 p=26215 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:33:16,502 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:33:18,655 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:18,660 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:33:20,281 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:20,284 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:33:20,699 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:20,703 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL latest database Server] ************************************************************************
2023-08-01 01:33:22,502 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:22,506 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-08-01 01:33:22,951 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:22,956 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-08-01 01:33:22,967 p=26215 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:33:22,971 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-08-01 01:33:23,622 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:23,625 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-08-01 01:33:24,005 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:24,009 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-08-01 01:33:24,332 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:24,336 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-08-01 01:33:24,657 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:24,660 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-08-01 01:33:26,454 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:26,458 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-08-01 01:33:26,993 p=26215 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-08-01 01:33:26,993 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:26,997 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-08-01 01:33:27,411 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:27,415 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-08-01 01:33:27,767 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:27,770 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-08-01 01:33:28,125 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:28,128 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-08-01 01:33:28,439 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:28,442 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-08-01 01:33:29,258 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:29,261 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-08-01 01:33:29,269 p=26215 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:33:29,272 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-08-01 01:33:29,511 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:29,515 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-08-01 01:33:29,522 p=26215 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:33:29,526 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-08-01 01:33:29,533 p=26215 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:33:29,537 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-08-01 01:33:29,544 p=26215 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:33:29,548 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-08-01 01:33:29,555 p=26215 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:33:29,558 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-08-01 01:33:29,800 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:29,803 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-08-01 01:33:30,051 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:30,054 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] ***********************************************************************************************
2023-08-01 01:33:30,329 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:30,332 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-08-01 01:33:30,809 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:30,813 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-08-01 01:33:31,138 p=26215 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:33:31,143 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-08-01 01:33:31,606 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:31,609 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-08-01 01:33:32,210 p=26215 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:33:32,215 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-08-01 01:33:32,567 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:32,570 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-08-01 01:33:32,908 p=26215 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:32,912 p=26215 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-08-01 01:33:32,948 p=26215 u=ansible n=ansible | ok: [centos4] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-08-01 01:33:32,951 p=26215 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-08-01 01:33:32,960 p=26215 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:33:32,974 p=26215 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:33:32,974 p=26215 u=ansible n=ansible | centos4                    : ok=29   changed=2    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2023-08-01 01:33:50,232 p=26797 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-08-01 01:33:50,236 p=26797 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:33:51,362 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:51,369 p=26797 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] ************************************************************************************
2023-08-01 01:33:51,400 p=26797 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/centos.yml for centos4
2023-08-01 01:33:51,404 p=26797 u=ansible n=ansible | TASK [install_nexus : Update yum] ***********************************************************************************************************
2023-08-01 01:33:52,262 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:33:52,265 p=26797 u=ansible n=ansible | TASK [install_nexus : Install Java] *********************************************************************************************************
2023-08-01 01:34:04,440 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:04,444 p=26797 u=ansible n=ansible | TASK [install_nexus : Set default JDK to OpenJDK 8] *****************************************************************************************
2023-08-01 01:34:04,778 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:04,781 p=26797 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ****************************************************************************************
2023-08-01 01:34:05,089 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:05,092 p=26797 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ********************************************************************************
2023-08-01 01:34:05,386 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:05,389 p=26797 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **************************************************************************************************
2023-08-01 01:34:38,993 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:38,997 p=26797 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ***********************************************************************
2023-08-01 01:34:39,233 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:39,236 p=26797 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ***********************************************************************************************
2023-08-01 01:34:44,278 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:44,281 p=26797 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ******************************************************************************
2023-08-01 01:34:44,767 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:44,770 p=26797 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] **************************************************************************************
2023-08-01 01:34:44,798 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:44,802 p=26797 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ****************************************************************************************************
2023-08-01 01:34:45,109 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:45,113 p=26797 u=ansible n=ansible | TASK [install_nexus : Add user nexus] *******************************************************************************************************
2023-08-01 01:34:45,531 p=26797 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-08-01 01:34:45,531 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:45,534 p=26797 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] **********************************************************************************
2023-08-01 01:34:46,084 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:46,087 p=26797 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] **************************************************************************
2023-08-01 01:34:46,330 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:46,333 p=26797 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ******************************************************************************
2023-08-01 01:34:46,631 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:46,634 p=26797 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] *****************************************************************************************
2023-08-01 01:34:47,154 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:47,157 p=26797 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ****************************************************
2023-08-01 01:34:47,590 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:47,593 p=26797 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] *****************************************************************************************
2023-08-01 01:34:48,229 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:48,232 p=26797 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] **************************************************************************************************
2023-08-01 01:34:48,729 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:48,732 p=26797 u=ansible n=ansible | TASK [install_nexus : debug] ****************************************************************************************************************
2023-08-01 01:34:48,742 p=26797 u=ansible n=ansible | ok: [centos4] => {
    "nexus_service_status.status.ActiveState": "inactive"
}
2023-08-01 01:34:48,746 p=26797 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] ************************************************************************************
2023-08-01 01:34:48,755 p=26797 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:34:48,767 p=26797 u=ansible n=ansible | RUNNING HANDLER [Reload Nexus systemd service] **********************************************************************************************
2023-08-01 01:34:50,418 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:50,426 p=26797 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:34:50,429 p=26797 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:34:51,517 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:51,525 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:34:51,563 p=26797 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/centos.yml for centos4
2023-08-01 01:34:51,568 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Update yum] *******************************************************************************************************
2023-08-01 01:34:53,096 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:53,100 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:34:54,663 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:54,667 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:34:55,090 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:34:55,094 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL latest database Server] ************************************************************************
2023-08-01 01:34:56,830 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:56,834 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Check PostgreSQL initdb was runned] *******************************************************************************
2023-08-01 01:34:57,177 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:57,180 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Run PostgreSQL initdb command] ************************************************************************************
2023-08-01 01:34:57,192 p=26797 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:34:57,196 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-08-01 01:34:57,652 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:57,655 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Change "peer" to "trust" in pg_hba.conf] **************************************************************************
2023-08-01 01:34:57,964 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:57,967 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv4 connections in pg_hba.conf] ******************************************************
2023-08-01 01:34:58,312 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:58,316 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Change "ident" to "md5" for IPv6 connections in pg_hba.conf] ******************************************************
2023-08-01 01:34:58,659 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:34:58,663 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-08-01 01:35:00,068 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:00,072 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-08-01 01:35:00,446 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:00,450 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-08-01 01:35:01,116 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:01,120 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-08-01 01:35:01,561 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:01,565 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-08-01 01:35:01,989 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:01,993 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-08-01 01:35:02,278 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:02,281 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-08-01 01:35:03,136 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:03,140 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-08-01 01:35:03,148 p=26797 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:35:03,153 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-08-01 01:35:03,462 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:03,465 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-08-01 01:35:03,473 p=26797 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:35:03,477 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-08-01 01:35:03,486 p=26797 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:35:03,491 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-08-01 01:35:03,500 p=26797 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:35:03,504 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-08-01 01:35:03,514 p=26797 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:35:03,519 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-08-01 01:35:03,795 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:03,799 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-08-01 01:35:04,081 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:04,084 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Add user sonarqube] ***********************************************************************************************
2023-08-01 01:35:04,456 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:04,459 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-08-01 01:35:05,215 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:05,219 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-08-01 01:35:05,698 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:35:05,701 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-08-01 01:35:06,227 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:06,232 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-08-01 01:35:06,959 p=26797 u=ansible n=ansible | changed: [centos4]
2023-08-01 01:35:06,962 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-08-01 01:35:07,341 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:07,345 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-08-01 01:35:07,696 p=26797 u=ansible n=ansible | ok: [centos4]
2023-08-01 01:35:07,699 p=26797 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-08-01 01:35:07,710 p=26797 u=ansible n=ansible | ok: [centos4] => {
    "sonarqube_service.status.ActiveState": "active"
}
2023-08-01 01:35:07,714 p=26797 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-08-01 01:35:07,723 p=26797 u=ansible n=ansible | skipping: [centos4]
2023-08-01 01:35:07,737 p=26797 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:35:07,737 p=26797 u=ansible n=ansible | centos4                    : ok=52   changed=18   unreachable=0    failed=0    skipped=8    rescued=0    ignored=0   
2023-08-01 01:40:45,828 p=27894 u=ansible n=ansible | PLAY [Nexus playbook] ***********************************************************************************************************************
2023-08-01 01:40:45,832 p=27894 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:40:47,244 p=27894 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:40:47,252 p=27894 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on RedHat] ************************************************************************************
2023-08-01 01:40:47,261 p=27894 u=ansible n=ansible | skipping: [ubuntu4]
2023-08-01 01:40:47,266 p=27894 u=ansible n=ansible | TASK [install_nexus : Main task install Nexus on Debian] ************************************************************************************
2023-08-01 01:40:47,301 p=27894 u=ansible n=ansible | included: /home/ansible/labs/roles/install_nexus/tasks/distro/ubuntu.yml for ubuntu4
2023-08-01 01:40:47,305 p=27894 u=ansible n=ansible | TASK [install_nexus : Update apt] ***********************************************************************************************************
2023-08-01 01:41:39,720 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:41:39,723 p=27894 u=ansible n=ansible | TASK [install_nexus : Install Java] *********************************************************************************************************
2023-08-01 01:41:53,227 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:41:53,230 p=27894 u=ansible n=ansible | TASK [install_nexus : Set default JDK to OpenJDK 8] *****************************************************************************************
2023-08-01 01:41:53,531 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:41:53,535 p=27894 u=ansible n=ansible | TASK [install_nexus : Create folder before download] ****************************************************************************************
2023-08-01 01:41:53,761 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:41:53,765 p=27894 u=ansible n=ansible | TASK [install_nexus : Check nexus download file was existed] ********************************************************************************
2023-08-01 01:41:53,981 p=27894 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:41:53,984 p=27894 u=ansible n=ansible | TASK [install_nexus : Download nexus file] **************************************************************************************************
2023-08-01 01:42:22,278 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:22,281 p=27894 u=ansible n=ansible | TASK [install_nexus : Check the nexus file was extracted and renamed] ***********************************************************************
2023-08-01 01:42:22,440 p=27894 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:42:22,444 p=27894 u=ansible n=ansible | TASK [install_nexus : Extract the nexus file] ***********************************************************************************************
2023-08-01 01:42:27,156 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:27,160 p=27894 u=ansible n=ansible | TASK [install_nexus : Find the directories name after extract] ******************************************************************************
2023-08-01 01:42:27,383 p=27894 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:42:27,386 p=27894 u=ansible n=ansible | TASK [install_nexus : Get the list of directory names] **************************************************************************************
2023-08-01 01:42:27,415 p=27894 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:42:27,419 p=27894 u=ansible n=ansible | TASK [install_nexus : Rename nexus file] ****************************************************************************************************
2023-08-01 01:42:27,641 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:27,645 p=27894 u=ansible n=ansible | TASK [install_nexus : Add user nexus] *******************************************************************************************************
2023-08-01 01:42:28,007 p=27894 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-08-01 01:42:28,007 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:28,010 p=27894 u=ansible n=ansible | TASK [install_nexus : Add line no password to sudoers file] *********************************************************************************
2023-08-01 01:42:28,238 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:28,241 p=27894 u=ansible n=ansible | TASK [install_nexus : Change ownership of nexus directory] **********************************************************************************
2023-08-01 01:42:28,445 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:28,449 p=27894 u=ansible n=ansible | TASK [install_nexus : Change ownership of sonatype-work directory] **************************************************************************
2023-08-01 01:42:28,609 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:28,625 p=27894 u=ansible n=ansible | TASK [install_nexus : Uncomment and set run_as_user parameter] ******************************************************************************
2023-08-01 01:42:28,780 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:28,784 p=27894 u=ansible n=ansible | TASK [install_nexus : Copy Nexus systemd unit file] *****************************************************************************************
2023-08-01 01:42:29,139 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:29,142 p=27894 u=ansible n=ansible | TASK [install_nexus : Run systemctl daemon-reload to save any changes or configurations] ****************************************************
2023-08-01 01:42:29,443 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:29,446 p=27894 u=ansible n=ansible | TASK [install_nexus : Enable Nexus service at boot] *****************************************************************************************
2023-08-01 01:42:29,984 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:29,988 p=27894 u=ansible n=ansible | TASK [install_nexus : Start Nexus service] **************************************************************************************************
2023-08-01 01:42:30,424 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:30,428 p=27894 u=ansible n=ansible | TASK [install_nexus : debug] ****************************************************************************************************************
2023-08-01 01:42:30,439 p=27894 u=ansible n=ansible | ok: [ubuntu4] => {
    "nexus_service_status.status.ActiveState": "inactive"
}
2023-08-01 01:42:30,453 p=27894 u=ansible n=ansible | RUNNING HANDLER [Reload Nexus systemd service] **********************************************************************************************
2023-08-01 01:42:32,183 p=27894 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:42:32,189 p=27894 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:42:32,189 p=27894 u=ansible n=ansible | ubuntu4                    : ok=24   changed=17   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-08-01 01:43:32,297 p=28501 u=ansible n=ansible | PLAY [SonarQube playbook] *******************************************************************************************************************
2023-08-01 01:43:32,301 p=28501 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 01:43:33,877 p=28501 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:43:33,887 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on RedHat] ****************************************************************************
2023-08-01 01:43:33,898 p=28501 u=ansible n=ansible | skipping: [ubuntu4]
2023-08-01 01:43:33,903 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Main task install SonarQube on Debian] ****************************************************************************
2023-08-01 01:43:33,951 p=28501 u=ansible n=ansible | included: /home/ansible/labs/roles/install_sonarqube/tasks/distro/ubuntu.yml for ubuntu4
2023-08-01 01:43:33,956 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Update apt] *******************************************************************************************************
2023-08-01 01:43:34,793 p=28501 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:43:34,796 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Install OpenJDK 11] ***********************************************************************************************
2023-08-01 01:44:25,628 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:44:25,631 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Set default JDK to OpenJDK 11] ************************************************************************************
2023-08-01 01:44:25,877 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:44:25,883 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Add GPG key for PostgreSQL] ***************************************************************************************
2023-08-01 01:44:28,163 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:44:28,166 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Add PostgreSQL repository to sources.list.d] **********************************************************************
2023-08-01 01:44:28,387 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:44:28,390 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Update APT cache] *************************************************************************************************
2023-08-01 01:44:37,348 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:44:37,352 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Install PostgreSQL 14] ********************************************************************************************
2023-08-01 01:44:56,796 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:44:56,800 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Start PostgreSQL Database server] *********************************************************************************
2023-08-01 01:44:57,196 p=28501 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:44:57,199 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Install psycopg2] *************************************************************************************************
2023-08-01 01:45:01,420 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:01,423 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Add user postgres] ************************************************************************************************
2023-08-01 01:45:01,793 p=28501 u=ansible n=ansible | [WARNING]: The input password appears not to have been hashed. The 'password' argument must be encrypted for this module to work properly.

2023-08-01 01:45:01,793 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:01,796 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube_db database] *************************************************************************************
2023-08-01 01:45:02,162 p=28501 u=ansible n=ansible | [WARNING]: Module remote_tmp /var/lib/postgresql/.ansible/tmp did not exist and was created with a mode of 0700, this may cause issues when
running as another user. To avoid this, create the remote_tmp dir with the correct permissions manually

2023-08-01 01:45:02,162 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:02,165 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube DB user with encrypted password] *****************************************************************
2023-08-01 01:45:02,456 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:02,473 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Grant all privileges to sonarqube user on sonarqube_db] ***********************************************************
2023-08-01 01:45:02,735 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:02,738 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Create folder before download] ************************************************************************************
2023-08-01 01:45:02,954 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:02,957 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Check SonarQube download file was existed] ************************************************************************
2023-08-01 01:45:03,164 p=28501 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:45:03,167 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Download SonarQube] ***********************************************************************************************
2023-08-01 01:45:40,957 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:40,963 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Check the SonarQube file was extracted and renamed] ***************************************************************
2023-08-01 01:45:41,155 p=28501 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:45:41,160 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Install unzip package denpendency] ********************************************************************************
2023-08-01 01:45:46,083 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:46,087 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Extract the SonarQube file] ***************************************************************************************
2023-08-01 01:45:49,255 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:49,259 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Find the directories name after extract] **************************************************************************
2023-08-01 01:45:49,587 p=28501 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:45:49,591 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Get the list of directory names] **********************************************************************************
2023-08-01 01:45:49,620 p=28501 u=ansible n=ansible | ok: [ubuntu4]
2023-08-01 01:45:49,623 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Rename SonarQube file] ********************************************************************************************
2023-08-01 01:45:49,855 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:49,859 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit username parameter] ****************************************************************************
2023-08-01 01:45:50,019 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:50,022 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Uncomment and edit password parameter] ****************************************************************************
2023-08-01 01:45:50,193 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:50,196 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Add user sonar] ***************************************************************************************************
2023-08-01 01:45:50,556 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:50,560 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Change ownership of SonarQube directory] **************************************************************************
2023-08-01 01:45:50,728 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:50,732 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Create sonarqube.service file] ************************************************************************************
2023-08-01 01:45:50,905 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:50,909 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Copy SonarQube systemd unit file] *********************************************************************************
2023-08-01 01:45:51,296 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:51,299 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Run systemctl daemon-reload to save any changes or configurations] ************************************************
2023-08-01 01:45:51,695 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:51,698 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Enable SonarQube service at boot] *********************************************************************************
2023-08-01 01:45:52,126 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:52,129 p=28501 u=ansible n=ansible | TASK [install_sonarqube : Start SonarQube service] ******************************************************************************************
2023-08-01 01:45:52,425 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:52,430 p=28501 u=ansible n=ansible | TASK [install_sonarqube : debug] ************************************************************************************************************
2023-08-01 01:45:52,441 p=28501 u=ansible n=ansible | ok: [ubuntu4] => {
    "sonarqube_service.status.ActiveState": "inactive"
}
2023-08-01 01:45:52,455 p=28501 u=ansible n=ansible | RUNNING HANDLER [Reload SonarQube systemd service] ******************************************************************************************
2023-08-01 01:45:53,829 p=28501 u=ansible n=ansible | changed: [ubuntu4]
2023-08-01 01:45:53,836 p=28501 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 01:45:53,836 p=28501 u=ansible n=ansible | ubuntu4                    : ok=35   changed=26   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-08-01 08:00:18,069 p=2476 u=ansible n=ansible | ERROR! the playbook: init could not be found
2023-08-01 08:00:33,235 p=2519 u=ansible n=ansible | - Role install_gitlab was created successfully
2023-08-01 08:08:55,820 p=2607 u=ansible n=ansible | # /home/ansible/.ansible/collections/ansible_collections
Collection                    Version
----------------------------- -------

2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | community.general             7.2.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | # /usr/lib/python3.11/site-packages/ansible_collections
Collection                    Version
----------------------------- -------

2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | amazon.aws                    6.0.1  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | ansible.netcommon             5.1.1  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | ansible.posix                 1.5.4  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | ansible.utils                 2.10.3 
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | ansible.windows               1.14.0 
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | arista.eos                    6.0.1  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | awx.awx                       22.2.0 
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | azure.azcollection            1.15.0 
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | check_point.mgmt              5.0.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | chocolatey.chocolatey         1.4.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.aci                     2.6.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.asa                     4.0.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.dnac                    6.7.2  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.intersight              1.0.27 
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.ios                     4.5.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.iosxr                   5.0.2  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.ise                     2.5.12 
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.meraki                  2.15.1 
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.mso                     2.4.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.nso                     1.0.3  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.nxos                    4.3.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cisco.ucs                     1.8.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cloud.common                  2.1.3  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | cloudscale_ch.cloud           2.2.4  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | community.aws                 6.0.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | community.azure               2.0.0  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | community.ciscosmb            1.0.5  
2023-08-01 08:08:55,821 p=2607 u=ansible n=ansible | community.crypto              2.13.1 
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.digitalocean        1.23.0 
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.dns                 2.5.4  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.docker              3.4.6  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.fortios             1.0.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.general             7.0.1  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.google              1.0.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.grafana             1.5.4  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.hashi_vault         5.0.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.hrobot              1.8.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.libvirt             1.2.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.mongodb             1.5.2  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.mysql               3.7.1  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.network             5.0.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.okd                 2.3.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.postgresql          2.4.1  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.proxysql            1.5.1  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.rabbitmq            1.2.3  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.routeros            2.8.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.sap                 1.0.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.sap_libs            1.4.1  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.skydive             1.0.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.sops                1.6.1  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.vmware              3.6.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.windows             1.13.0 
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | community.zabbix              2.0.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | containers.podman             1.10.1 
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | cyberark.conjur               1.2.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | cyberark.pas                  1.0.19 
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | dellemc.enterprise_sonic      2.0.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | dellemc.openmanage            7.5.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | dellemc.powerflex             1.6.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | dellemc.unity                 1.6.0  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | f5networks.f5_modules         1.24.0 
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | fortinet.fortimanager         2.1.7  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | fortinet.fortios              2.2.3  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | frr.frr                       2.0.2  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | gluster.gluster               1.0.2  
2023-08-01 08:08:55,822 p=2607 u=ansible n=ansible | google.cloud                  1.1.3  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | grafana.grafana               2.0.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | hetzner.hcloud                1.11.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | hpe.nimble                    1.1.4  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | ibm.qradar                    2.1.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | ibm.spectrum_virtualize       1.12.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | infinidat.infinibox           1.3.12 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | infoblox.nios_modules         1.5.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | inspur.ispim                  1.3.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | inspur.sm                     2.3.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | junipernetworks.junos         5.1.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | kubernetes.core               2.4.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | lowlydba.sqlserver            2.0.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | microsoft.ad                  1.1.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netapp.aws                    21.7.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netapp.azure                  21.10.0
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netapp.cloudmanager           21.22.0
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netapp.elementsw              21.7.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netapp.ontap                  22.6.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netapp.storagegrid            21.11.1
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netapp.um_info                21.8.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netapp_eseries.santricity     1.4.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | netbox.netbox                 3.13.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | ngine_io.cloudstack           2.3.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | ngine_io.exoscale             1.0.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | ngine_io.vultr                1.1.3  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | openstack.cloud               2.1.0  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | openvswitch.openvswitch       2.1.1  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | ovirt.ovirt                   3.1.2  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | purestorage.flasharray        1.18.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | purestorage.flashblade        1.11.0 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | purestorage.fusion            1.4.2  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | sensu.sensu_go                1.13.2 
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | servicenow.servicenow         1.0.6  
2023-08-01 08:08:55,823 p=2607 u=ansible n=ansible | splunk.es                     2.1.0  
2023-08-01 08:08:55,824 p=2607 u=ansible n=ansible | t_systems_mms.icinga_director 1.32.2 
2023-08-01 08:08:55,824 p=2607 u=ansible n=ansible | theforeman.foreman            3.10.0 
2023-08-01 08:08:55,824 p=2607 u=ansible n=ansible | vmware.vmware_rest            2.3.1  
2023-08-01 08:08:55,824 p=2607 u=ansible n=ansible | vultr.cloud                   1.7.1  
2023-08-01 08:08:55,824 p=2607 u=ansible n=ansible | vyos.vyos                     4.0.2  
2023-08-01 08:08:55,824 p=2607 u=ansible n=ansible | wti.remote                    1.0.4  
2023-08-01 08:09:21,294 p=2633 u=ansible n=ansible | Starting galaxy collection install process
2023-08-01 08:09:21,315 p=2633 u=ansible n=ansible | Process install dependency map
2023-08-01 08:09:21,315 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:21,416 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:21,518 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:21,623 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:21,727 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:21,831 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:21,935 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:22,035 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:22,137 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:22,240 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:22,342 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:22,455 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:22,557 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:22,662 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:22,764 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:22,867 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:22,969 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:23,072 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:23,172 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:23,277 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:23,435 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:23,538 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:23,642 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:23,747 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:23,851 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:23,954 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:24,057 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:24,162 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:24,265 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:24,367 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:24,471 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:24,573 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:24,715 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:24,816 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:24,919 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:25,022 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:25,123 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:25,228 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:25,329 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:25,430 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:25,530 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:25,631 p=2633 u=ansible n=ansible | Starting collection install process
2023-08-01 08:09:25,631 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:25,633 p=2633 u=ansible n=ansible | Downloading https://galaxy.ansible.com/download/ansible-posix-1.5.4.tar.gz to /home/ansible/.ansible/tmp/ansible-local-2633ehzgwepq/tmpnj_86mq0/ansible-posix-1.5.4-8hd2wijg
2023-08-01 08:09:25,752 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:25,854 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:25,955 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:26,059 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:26,163 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:26,264 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:26,366 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:26,468 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:26,570 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:26,671 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:26,775 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:26,876 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:26,977 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:27,079 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:27,180 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:27,283 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:27,384 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:27,488 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:27,589 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:27,691 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:27,794 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:27,895 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:27,996 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:28,100 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:28,201 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:28,306 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:28,411 p=2633 u=ansible n=ansible | \
2023-08-01 08:09:28,514 p=2633 u=ansible n=ansible | |
2023-08-01 08:09:28,615 p=2633 u=ansible n=ansible | /
2023-08-01 08:09:28,716 p=2633 u=ansible n=ansible | -
2023-08-01 08:09:28,818 p=2633 u=ansible n=ansible | Installing 'ansible.posix:1.5.4' to '/home/ansible/.ansible/collections/ansible_collections/ansible/posix'
2023-08-01 08:09:28,818 p=2633 u=ansible n=ansible | ansible.posix:1.5.4 was installed successfully
2023-08-01 08:09:32,652 p=2667 u=ansible n=ansible | # /home/ansible/.ansible/collections/ansible_collections
Collection                    Version
----------------------------- -------

2023-08-01 08:09:32,652 p=2667 u=ansible n=ansible | ansible.posix                 1.5.4  
2023-08-01 08:09:32,652 p=2667 u=ansible n=ansible | community.general             7.2.0  
2023-08-01 08:09:32,652 p=2667 u=ansible n=ansible | # /usr/lib/python3.11/site-packages/ansible_collections
Collection                    Version
----------------------------- -------

2023-08-01 08:09:32,652 p=2667 u=ansible n=ansible | amazon.aws                    6.0.1  
2023-08-01 08:09:32,652 p=2667 u=ansible n=ansible | ansible.netcommon             5.1.1  
2023-08-01 08:09:32,652 p=2667 u=ansible n=ansible | ansible.posix                 1.5.4  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | ansible.utils                 2.10.3 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | ansible.windows               1.14.0 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | arista.eos                    6.0.1  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | awx.awx                       22.2.0 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | azure.azcollection            1.15.0 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | check_point.mgmt              5.0.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | chocolatey.chocolatey         1.4.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.aci                     2.6.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.asa                     4.0.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.dnac                    6.7.2  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.intersight              1.0.27 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.ios                     4.5.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.iosxr                   5.0.2  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.ise                     2.5.12 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.meraki                  2.15.1 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.mso                     2.4.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.nso                     1.0.3  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.nxos                    4.3.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cisco.ucs                     1.8.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cloud.common                  2.1.3  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | cloudscale_ch.cloud           2.2.4  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.aws                 6.0.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.azure               2.0.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.ciscosmb            1.0.5  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.crypto              2.13.1 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.digitalocean        1.23.0 
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.dns                 2.5.4  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.docker              3.4.6  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.fortios             1.0.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.general             7.0.1  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.google              1.0.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.grafana             1.5.4  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.hashi_vault         5.0.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.hrobot              1.8.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.libvirt             1.2.0  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.mongodb             1.5.2  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.mysql               3.7.1  
2023-08-01 08:09:32,653 p=2667 u=ansible n=ansible | community.network             5.0.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.okd                 2.3.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.postgresql          2.4.1  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.proxysql            1.5.1  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.rabbitmq            1.2.3  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.routeros            2.8.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.sap                 1.0.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.sap_libs            1.4.1  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.skydive             1.0.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.sops                1.6.1  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.vmware              3.6.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.windows             1.13.0 
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | community.zabbix              2.0.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | containers.podman             1.10.1 
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | cyberark.conjur               1.2.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | cyberark.pas                  1.0.19 
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | dellemc.enterprise_sonic      2.0.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | dellemc.openmanage            7.5.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | dellemc.powerflex             1.6.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | dellemc.unity                 1.6.0  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | f5networks.f5_modules         1.24.0 
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | fortinet.fortimanager         2.1.7  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | fortinet.fortios              2.2.3  
2023-08-01 08:09:32,654 p=2667 u=ansible n=ansible | frr.frr                       2.0.2  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | gluster.gluster               1.0.2  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | google.cloud                  1.1.3  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | grafana.grafana               2.0.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | hetzner.hcloud                1.11.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | hpe.nimble                    1.1.4  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | ibm.qradar                    2.1.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | ibm.spectrum_virtualize       1.12.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | infinidat.infinibox           1.3.12 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | infoblox.nios_modules         1.5.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | inspur.ispim                  1.3.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | inspur.sm                     2.3.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | junipernetworks.junos         5.1.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | kubernetes.core               2.4.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | lowlydba.sqlserver            2.0.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | microsoft.ad                  1.1.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netapp.aws                    21.7.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netapp.azure                  21.10.0
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netapp.cloudmanager           21.22.0
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netapp.elementsw              21.7.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netapp.ontap                  22.6.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netapp.storagegrid            21.11.1
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netapp.um_info                21.8.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netapp_eseries.santricity     1.4.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | netbox.netbox                 3.13.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | ngine_io.cloudstack           2.3.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | ngine_io.exoscale             1.0.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | ngine_io.vultr                1.1.3  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | openstack.cloud               2.1.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | openvswitch.openvswitch       2.1.1  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | ovirt.ovirt                   3.1.2  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | purestorage.flasharray        1.18.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | purestorage.flashblade        1.11.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | purestorage.fusion            1.4.2  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | sensu.sensu_go                1.13.2 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | servicenow.servicenow         1.0.6  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | splunk.es                     2.1.0  
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | t_systems_mms.icinga_director 1.32.2 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | theforeman.foreman            3.10.0 
2023-08-01 08:09:32,655 p=2667 u=ansible n=ansible | vmware.vmware_rest            2.3.1  
2023-08-01 08:09:32,656 p=2667 u=ansible n=ansible | vultr.cloud                   1.7.1  
2023-08-01 08:09:32,656 p=2667 u=ansible n=ansible | vyos.vyos                     4.0.2  
2023-08-01 08:09:32,656 p=2667 u=ansible n=ansible | wti.remote                    1.0.4  
2023-08-01 08:17:51,155 p=2731 u=ansible n=ansible | PLAY [GitLab playbook] *************************************************************************************************************************************************************
2023-08-01 08:17:51,194 p=2731 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-08-01 08:17:52,879 p=2731 u=ansible n=ansible | ok: [centos3]
2023-08-01 08:17:52,894 p=2731 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-08-01 08:17:52,894 p=2731 u=ansible n=ansible | centos3                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-08-01 08:19:44,883 p=2812 u=ansible n=ansible | PLAY [GitLab playbook] *************************************************************************************************************************************************************
2023-08-01 08:19:44,906 p=2812 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-08-01 08:19:46,234 p=2812 u=ansible n=ansible | ok: [centos3]
2023-08-01 08:19:46,249 p=2812 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-08-01 08:19:46,249 p=2812 u=ansible n=ansible | centos3                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-08-01 08:20:45,601 p=2885 u=ansible n=ansible | PLAY [GitLab playbook] *************************************************************************************************************************************************************
2023-08-01 08:20:45,619 p=2885 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-08-01 08:20:46,682 p=2885 u=ansible n=ansible | ok: [centos3]
2023-08-01 08:20:46,689 p=2885 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] **********************************************************************************************************************
2023-08-01 08:20:46,701 p=2885 u=ansible n=ansible | ERROR! unexpected parameter type in action: <class 'ansible.parsing.yaml.objects.AnsibleSequence'>

The error appears to be in '/home/ansible/labs/roles/install_gitlab/tasks/distro/centos.yml': line 6, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Install package dependencies
  ^ here

2023-08-01 08:21:11,463 p=2947 u=ansible n=ansible | PLAY [GitLab playbook] *************************************************************************************************************************************************************
2023-08-01 08:21:11,482 p=2947 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-08-01 08:21:12,661 p=2947 u=ansible n=ansible | ok: [centos3]
2023-08-01 08:21:12,667 p=2947 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] **********************************************************************************************************************
2023-08-01 08:21:12,682 p=2947 u=ansible n=ansible | ERROR! conflicting action statements: yum, state

The error appears to be in '/home/ansible/labs/roles/install_gitlab/tasks/distro/centos.yml': line 38, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Install postfix
  ^ here

2023-08-01 08:21:36,225 p=3011 u=ansible n=ansible | PLAY [GitLab playbook] *************************************************************************************************************************************************************
2023-08-01 08:21:36,245 p=3011 u=ansible n=ansible | TASK [Gathering Facts] *************************************************************************************************************************************************************
2023-08-01 08:21:37,356 p=3011 u=ansible n=ansible | ok: [centos3]
2023-08-01 08:21:37,364 p=3011 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] **********************************************************************************************************************
2023-08-01 08:21:37,378 p=3011 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/centos.yml for centos3
2023-08-01 08:21:37,382 p=3011 u=ansible n=ansible | TASK [install_gitlab : Update yum] *************************************************************************************************************************************************
2023-08-01 08:43:48,766 p=3011 u=ansible n=ansible | changed: [centos3]
2023-08-01 08:43:48,772 p=3011 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] *******************************************************************************************************************************
2023-08-01 08:43:49,493 p=3011 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "failures": ["No package policycoreutils-python available."], "msg": "Failed to install some of the specified packages", "rc": 1, "results": []}
2023-08-01 08:43:49,494 p=3011 u=ansible n=ansible | PLAY RECAP *************************************************************************************************************************************************************************
2023-08-01 08:43:49,494 p=3011 u=ansible n=ansible | centos3                    : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 08:46:01,182 p=3165 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 08:46:01,202 p=3165 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 08:46:02,603 p=3165 u=ansible n=ansible | ok: [centos3]
2023-08-01 08:46:02,610 p=3165 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] *******************************************************************************
2023-08-01 08:46:02,624 p=3165 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/centos.yml for centos3
2023-08-01 08:46:02,627 p=3165 u=ansible n=ansible | TASK [install_gitlab : Update yum] **********************************************************************************************************
2023-08-01 08:46:03,299 p=3165 u=ansible n=ansible | ok: [centos3]
2023-08-01 08:46:03,302 p=3165 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] ****************************************************************************************
2023-08-01 08:47:40,482 p=3165 u=ansible n=ansible | changed: [centos3]
2023-08-01 08:47:40,486 p=3165 u=ansible n=ansible | TASK [install_gitlab : Enable and start sshd service] ***************************************************************************************
2023-08-01 08:47:41,005 p=3165 u=ansible n=ansible | ok: [centos3]
2023-08-01 08:47:41,008 p=3165 u=ansible n=ansible | TASK [install_gitlab : Add service http to firewalld] ***************************************************************************************
2023-08-01 08:47:41,438 p=3165 u=ansible n=ansible | changed: [centos3]
2023-08-01 08:47:41,441 p=3165 u=ansible n=ansible | TASK [install_gitlab : Add service https to firewalld] **************************************************************************************
2023-08-01 08:47:41,766 p=3165 u=ansible n=ansible | changed: [centos3]
2023-08-01 08:47:41,769 p=3165 u=ansible n=ansible | TASK [install_gitlab : Reload firewalld service] ********************************************************************************************
2023-08-01 08:47:42,088 p=3165 u=ansible n=ansible | changed: [centos3]
2023-08-01 08:47:42,091 p=3165 u=ansible n=ansible | TASK [install_gitlab : Install postfix] *****************************************************************************************************
2023-08-01 08:47:47,257 p=3165 u=ansible n=ansible | changed: [centos3]
2023-08-01 08:47:47,260 p=3165 u=ansible n=ansible | TASK [install_gitlab : Enable and start postfix service] ************************************************************************************
2023-08-01 08:47:47,854 p=3165 u=ansible n=ansible | changed: [centos3]
2023-08-01 08:47:47,857 p=3165 u=ansible n=ansible | TASK [install_gitlab : Add GitLab repository and install the package] ***********************************************************************
2023-08-01 08:48:11,929 p=3165 u=ansible n=ansible | changed: [centos3]
2023-08-01 08:48:11,931 p=3165 u=ansible n=ansible | TASK [install_gitlab : Install GitLab CE] ***************************************************************************************************
2023-08-01 09:08:37,560 p=3165 u=ansible n=ansible | changed: [centos3]
2023-08-01 09:08:37,566 p=3165 u=ansible n=ansible | TASK [install_gitlab : Enable and start GitLab CE service] **********************************************************************************
2023-08-01 09:08:38,005 p=3165 u=ansible n=ansible | fatal: [centos3]: FAILED! => {"changed": false, "msg": "Could not find the requested service gitlab-ce: host"}
2023-08-01 09:08:38,006 p=3165 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 09:08:38,006 p=3165 u=ansible n=ansible | centos3                    : ok=12   changed=8    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2023-08-01 09:30:49,241 p=3596 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 09:30:49,265 p=3596 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 09:30:59,284 p=3596 u=ansible n=ansible | fatal: [centos3]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.64.26 port 22: Connection timed out", "unreachable": true}
2023-08-01 09:30:59,285 p=3596 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 09:30:59,285 p=3596 u=ansible n=ansible | centos3                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2023-08-01 09:33:14,204 p=3685 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 09:33:14,225 p=3685 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 09:33:16,047 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:16,054 p=3685 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] *******************************************************************************
2023-08-01 09:33:16,068 p=3685 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/centos.yml for centos3
2023-08-01 09:33:16,071 p=3685 u=ansible n=ansible | TASK [install_gitlab : Update yum] **********************************************************************************************************
2023-08-01 09:33:21,895 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:21,898 p=3685 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] ****************************************************************************************
2023-08-01 09:33:23,189 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:23,192 p=3685 u=ansible n=ansible | TASK [install_gitlab : Enable and start sshd service] ***************************************************************************************
2023-08-01 09:33:23,742 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:23,745 p=3685 u=ansible n=ansible | TASK [install_gitlab : Add service http to firewalld] ***************************************************************************************
2023-08-01 09:33:24,719 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:24,722 p=3685 u=ansible n=ansible | TASK [install_gitlab : Add service https to firewalld] **************************************************************************************
2023-08-01 09:33:25,076 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:25,079 p=3685 u=ansible n=ansible | TASK [install_gitlab : Reload firewalld service] ********************************************************************************************
2023-08-01 09:33:25,446 p=3685 u=ansible n=ansible | changed: [centos3]
2023-08-01 09:33:25,449 p=3685 u=ansible n=ansible | TASK [install_gitlab : Install postfix] *****************************************************************************************************
2023-08-01 09:33:26,708 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:26,711 p=3685 u=ansible n=ansible | TASK [install_gitlab : Enable and start postfix service] ************************************************************************************
2023-08-01 09:33:27,109 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:27,112 p=3685 u=ansible n=ansible | TASK [install_gitlab : Add GitLab repository and install the package] ***********************************************************************
2023-08-01 09:33:42,062 p=3685 u=ansible n=ansible | changed: [centos3]
2023-08-01 09:33:42,065 p=3685 u=ansible n=ansible | TASK [install_gitlab : Install GitLab CE] ***************************************************************************************************
2023-08-01 09:33:42,751 p=3685 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:33:42,754 p=3685 u=ansible n=ansible | TASK [install_gitlab : Enable and start GitLab CE service] **********************************************************************************
2023-08-01 09:34:19,609 p=3685 u=ansible n=ansible | changed: [centos3]
2023-08-01 09:34:19,613 p=3685 u=ansible n=ansible | TASK [install_gitlab : debug] ***************************************************************************************************************
2023-08-01 09:34:19,716 p=3685 u=ansible n=ansible | ok: [centos3] => {
    "msg": "GitLab: {'changed': True, 'stdout': '[2023-08-01T09:33:44+07:00] INFO: Started Cinc Zero at chefzero://localhost:1 with repository at /opt/gitlab/embedded (One version per cookbook)\\n[2023-08-01T09:33:44+07:00] WARN: Cinc Client 7823 is running, will wait for it to finish and then run.\\nCinc Client, version 17.10.0\\nPatents: https://www.chef.io/patents\\nInfra Phase starting\\n[2023-08-01T09:33:51+07:00] INFO: *** Cinc Client 17.10.0 ***\\n[2023-08-01T09:33:51+07:00] INFO: Platform: aarch64-linux\\n[2023-08-01T09:33:51+07:00] INFO: Cinc-client pid: 9524\\n[2023-08-01T09:33:52+07:00] INFO: Setting the run_list to [\"recipe[gitlab]\"] from CLI options\\n[2023-08-01T09:33:52+07:00] INFO: Run List is [recipe[gitlab]]\\n[2023-08-01T09:33:52+07:00] INFO: Run List expands to [gitlab]\\n[2023-08-01T09:33:52+07:00] INFO: Starting Cinc Client Run for localhost\\n[2023-08-01T09:33:52+07:00] INFO: Running start handlers\\n[2023-08-01T09:33:52+07:00] INFO: Start handlers complete.\\nResolving cookbooks for run list: [\"gitlab\"]\\n[2023-08-01T09:33:53+07:00] INFO: Loading cookbooks [gitlab@0.0.1, package@0.1.0, logrotate@0.1.0, postgresql@0.1.0, redis@0.1.0, monitoring@0.1.0, registry@0.1.0, mattermost@0.1.0, consul@0.1.0, gitaly@0.1.0, praefect@0.1.0, gitlab-kas@0.1.0, gitlab-pages@0.1.0, letsencrypt@0.1.0, nginx@0.1.0, runit@5.1.7, acme@4.1.6, crond@0.1.0]\\nSynchronizing cookbooks:\\n  - gitlab (0.0.1)\\n  - package (0.1.0)\\n  - logrotate (0.1.0)\\n  - postgresql (0.1.0)\\n  - redis (0.1.0)\\n  - monitoring (0.1.0)\\n  - registry (0.1.0)\\n  - mattermost (0.1.0)\\n  - gitaly (0.1.0)\\n  - consul (0.1.0)\\n  - praefect (0.1.0)\\n  - gitlab-kas (0.1.0)\\n  - gitlab-pages (0.1.0)\\n  - nginx (0.1.0)\\n  - letsencrypt (0.1.0)\\n  - runit (5.1.7)\\n  - acme (4.1.6)\\n  - crond (0.1.0)\\nInstalling cookbook gem dependencies:\\nCompiling cookbooks...\\nLoading Cinc Auditor profile files:\\nLoading Cinc Auditor input files:\\nLoading Cinc Auditor waiver files:\\n[2023-08-01T09:33:53+07:00] INFO: Generating default secrets\\n[2023-08-01T09:33:54+07:00] INFO: Generating gitlab-secrets.json file\\nRecipe: gitlab::default\\n  * directory[/etc/gitlab] action create (up to date)\\n[2023-08-01T09:33:54+07:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: Selected systemd because /run/systemd/system/ exists\\n[2023-08-01T09:33:54+07:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: gitlab-sshd does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: gitlab-pages does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: mailroom does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:54+07:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: node-exporter does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: gitlab-exporter does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: redis-exporter does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: prometheus does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: alertmanager does not have a log_group or default logdir mode defined. Setting to 0700.\\n[2023-08-01T09:33:55+07:00] WARN: postgres-exporter does not have a log_group or default logdir mode defined. Setting to 0700.\\n  Converging 277 resources\\n  * directory[/etc/gitlab] action create (up to date)\\n  * directory[Create /var/opt/gitlab] action create (up to date)\\n  * directory[Create /var/log/gitlab] action create (up to date)\\n  * directory[/opt/gitlab/embedded/etc] action create (up to date)\\n  * template[/opt/gitlab/embedded/etc/gitconfig] action create (up to date)\\nRecipe: gitlab::web-server\\n  * account[Webserver user and group] action create\\n    * group[Webserver user and group] action create (up to date)\\n    * linux_user[Webserver user and group] action create (up to date)\\n     (up to date)\\nRecipe: gitlab::users\\n  * directory[/var/opt/gitlab] action create (up to date)\\n  * account[GitLab user and group] action create\\n    * group[GitLab user and group] action create (up to date)\\n    * linux_user[GitLab user and group] action create (up to date)\\n     (up to date)\\n  * template[/var/opt/gitlab/.gitconfig] action create (up to date)\\n  * directory[/var/opt/gitlab/.bundle] action create (up to date)\\nRecipe: gitlab::gitlab-rails\\n  * storage_directory[/var/opt/gitlab/git-data] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/git-data/repositories] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run (skipped due to not_if)\\n     (up to date)\\nRecipe: gitlab::rails_pages_shared_path\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run (skipped due to not_if)\\n     (up to date)\\nRecipe: gitlab::gitlab-rails\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run (skipped due to not_if)\\n     (up to date)\\n  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)\\n  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create (up to date)\\n  * directory[create /opt/gitlab/etc/gitlab-rails] action create (up to date)\\n  * directory[create /var/opt/gitlab/gitlab-rails/working] action create (up to date)\\n  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create (up to date)\\n  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create (up to date)\\n  * directory[/var/log/gitlab/gitlab-rails] action create (up to date)\\n  * storage_directory[/var/opt/gitlab/backups] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/backups] action run (skipped due to not_if)\\n     (up to date)\\n  * directory[/var/opt/gitlab/gitlab-rails] action create (up to date)\\n  * directory[/var/opt/gitlab/gitlab-ci] action create (up to date)\\n  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create (skipped due to only_if)\\n  * template[/opt/gitlab/etc/gitlab-rails-rc] action create (up to date)\\n  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)\\n  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)\\n  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create an override redis.yml and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/redis.yml to /var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a redis.trace_chunks.yml and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/redis.trace_chunks.yml] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.trace_chunks.yml] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a redis.rate_limiting.yml and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/redis.rate_limiting.yml] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.rate_limiting.yml] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a redis.sessions.yml and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/redis.sessions.yml] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.sessions.yml] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a redis.repository_cache.yml and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/redis.repository_cache.yml] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.repository_cache.yml] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a redis.cluster_rate_limiting.yml and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cluster_rate_limiting.yml] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cluster_rate_limiting.yml] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete\\n    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)\\n    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)\\n     (up to date)\\n  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create a gitlab_incoming_email_secret and create a symlink to Rails root] action create (skipped due to only_if)\\n  * templatesymlink[Create a gitlab_service_desk_email_secret and create a symlink to Rails root] action create (skipped due to only_if)\\n  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create[2023-08-01T09:33:56+07:00] WARN: only_if block for templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] returned a string, did you mean to run a command?\\n\\n    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)\\n     (up to date)\\n  * templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] action create[2023-08-01T09:33:56+07:00] WARN: only_if block for templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] returned a string, did you mean to run a command?\\n\\n    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)\\n     (up to date)\\n  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)\\n  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)\\n  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create\\n    * directory[/opt/gitlab/etc/gitlab-rails/env] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/PUMA_WORKER_MAX_MEMORY] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_DIR] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_FILE] action create (up to date)\\n     (up to date)\\n  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create (up to date)\\n  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create (up to date)\\n  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create (up to date)\\n  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete (skipped due to only_if)\\n  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create (up to date)\\n  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create (up to date)\\n  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create (up to date)\\n  * version_file[Create version file for Rails] action create\\n    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create (up to date)\\n     (up to date)\\n  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)\\n  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)\\nRecipe: gitlab::selinux\\n  * execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-7.2.0-ssh-keygen.pp] action run[2023-08-01T09:34:03+07:00] INFO: execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-7.2.0-ssh-keygen.pp] ran successfully\\n\\n    - execute semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-7.2.0-ssh-keygen.pp\\n  * execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-10.5.0-ssh-authorized-keys.pp] action run[2023-08-01T09:34:09+07:00] INFO: execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-10.5.0-ssh-authorized-keys.pp] ran successfully\\n\\n    - execute semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-10.5.0-ssh-authorized-keys.pp\\n  * execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-13.5.0-gitlab-shell.pp] action run[2023-08-01T09:34:15+07:00] INFO: execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-13.5.0-gitlab-shell.pp] ran successfully\\n\\n    - execute semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-13.5.0-gitlab-shell.pp\\n  * bash[Set proper security context on ssh files for selinux] action nothing (skipped due to action :nothing)\\nRecipe: gitlab::add_trusted_certs\\n  * directory[/etc/gitlab/trusted-certs] action create (up to date)\\n  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)\\n  * file[/opt/gitlab/embedded/ssl/certs/README] action create (up to date)\\n  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run (skipped due to only_if)\\nRecipe: gitlab::default\\n  * service[create a temporary puma service] action nothing (skipped due to action :nothing)\\n  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)\\n  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)\\nRecipe: package::runit_systemd\\n  * directory[/usr/lib/systemd/system] action create (up to date)\\n  * template[/usr/lib/systemd/system/gitlab-runsvdir.service] action create (up to date)\\n  * file[/etc/systemd/system/default.target.wants/gitlab-runsvdir.service] action delete (up to date)\\n  * file[/etc/systemd/system/basic.target.wants/gitlab-runsvdir.service] action delete (up to date)\\n  * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)\\n  * execute[systemctl enable gitlab-runsvdir] action nothing (skipped due to action :nothing)\\n  * execute[systemctl start gitlab-runsvdir] action nothing (skipped due to action :nothing)\\nRecipe: gitlab::gitlab-shell\\n  * storage_directory[/var/opt/gitlab/.ssh] action create\\n    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run (skipped due to not_if)\\n     (up to date)\\n  * directory[/var/opt/gitlab/gitlab-shell] action create (up to date)\\n  * directory[/var/log/gitlab/gitlab-shell] action create (up to date)\\n  * bash[generate gitlab-sshd host keys] action run (skipped due to only_if)\\n  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create\\n    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)\\n    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)\\n     (up to date)\\n  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create (up to date)\\n  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing (up to date)\\n  * env_dir[/opt/gitlab/etc/gitlab-sshd/env] action nothing (skipped due to action :nothing)\\n  * service[gitlab-sshd] action nothing (skipped due to action :nothing)\\n  * runit_service[gitlab-sshd] action disable\\n    * ruby_block[disable gitlab-sshd] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: package::sysctl\\n  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)\\nRecipe: logrotate::folders_and_configs\\n  * directory[/var/opt/gitlab/logrotate] action create (up to date)\\n  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create (up to date)\\n  * directory[/var/log/gitlab/logrotate] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] action create (up to date)\\n  * template[/var/opt/gitlab/logrotate/logrotate.d/mailroom] action create (up to date)\\nRecipe: logrotate::enable\\n  * service[logrotate] action nothing (skipped due to action :nothing)\\n  * runit_service[logrotate] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/logrotate] action create (up to date)\\n    * template[/opt/gitlab/sv/logrotate/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/logrotate/config] action create (up to date)\\n    * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)\\n    * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)\\n    * link[/opt/gitlab/init/logrotate] action create (up to date)\\n    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/logrotate] action create (up to date)\\n    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/logrotate/current] action touch (skipped due to only_if)\\n     (up to date)\\nRecipe: redis::enable\\n  * redis_service[redis] action create[2023-08-01T09:34:15+07:00] WARN: redis does not have a log_group or default logdir mode defined. Setting to 0700.\\n\\n    * account[user and group for redis] action create\\n      * group[user and group for redis] action create (up to date)\\n      * linux_user[user and group for redis] action create (up to date)\\n       (up to date)\\n    * group[Socket group] action create (up to date)\\n    * directory[/var/opt/gitlab/redis] action create (up to date)\\n    * directory[/var/log/gitlab/redis] action create (up to date)\\n    * template[/var/opt/gitlab/redis/redis.conf] action create (up to date)\\n    * service[redis] action nothing (skipped due to action :nothing)\\n    * runit_service[redis] action enable\\n      * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n      * directory[/opt/gitlab/sv/redis] action create (up to date)\\n      * template[/opt/gitlab/sv/redis/run] action create (up to date)\\n      * directory[/opt/gitlab/sv/redis/log] action create (up to date)\\n      * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)\\n      * template[/opt/gitlab/sv/redis/log/config] action create (up to date)\\n      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)\\n      * link[/var/log/gitlab/redis/config] action create (up to date)\\n      * template[/opt/gitlab/sv/redis/log/run] action create (up to date)\\n      * directory[/opt/gitlab/sv/redis/env] action create (up to date)\\n      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)\\n      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)\\n      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)\\n      * directory[/opt/gitlab/sv/redis/control] action create (up to date)\\n      * link[/opt/gitlab/init/redis] action create (up to date)\\n      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)\\n      * directory[/opt/gitlab/service] action create (up to date)\\n      * link[/opt/gitlab/service/redis] action create (up to date)\\n      * ruby_block[wait for redis service socket] action run (skipped due to not_if)\\n      * file[/var/log/gitlab/redis/current] action touch (skipped due to only_if)\\n       (up to date)\\n    * ruby_block[warn pending redis restart] action run (skipped due to only_if)\\n     (up to date)\\n  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create (up to date)\\nRecipe: gitaly::enable\\n  * directory[/var/opt/gitlab/gitaly] action create (up to date)\\n  * directory[/var/opt/gitlab/gitaly/run] action create (up to date)\\n  * directory[/var/log/gitlab/gitaly] action create (up to date)\\n  * directory[/var/opt/gitlab/gitaly/internal_sockets] action delete (up to date)\\n  * env_dir[/opt/gitlab/etc/gitaly/env] action create\\n    * directory[/opt/gitlab/etc/gitaly/env] action create (up to date)\\n    * file[/opt/gitlab/etc/gitaly/env/HOME] action create (up to date)\\n    * file[/opt/gitlab/etc/gitaly/env/PATH] action create (up to date)\\n    * file[/opt/gitlab/etc/gitaly/env/TZ] action create (up to date)\\n    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create (up to date)\\n    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create (up to date)\\n    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create (up to date)\\n    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create (up to date)\\n    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create (up to date)\\n     (up to date)\\n  * template[Create Gitaly config.toml] action create (up to date)\\n  * service[gitaly] action nothing (skipped due to action :nothing)\\n  * runit_service[gitaly] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/gitaly] action create (up to date)\\n    * template[/opt/gitlab/sv/gitaly/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/gitaly/config] action create (up to date)\\n    * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)\\n    * link[/opt/gitlab/init/gitaly] action create (up to date)\\n    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/gitaly] action create (up to date)\\n    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/gitaly/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * version_file[Create version file for Gitaly] action create\\n    * file[/var/opt/gitlab/gitaly/VERSION] action create (up to date)\\n     (up to date)\\n  * consul_service[gitaly] action delete\\n    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)\\n     (up to date)\\nRecipe: postgresql::bin\\n  * ruby_block[check_postgresql_version] action run (skipped due to not_if)\\n  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)\\n  * ruby_block[Link postgresql bin files to the correct version] action run (skipped due to only_if)\\n  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)\\nRecipe: postgresql::user\\n  * account[Postgresql user and group] action create\\n    * group[Postgresql user and group] action create (up to date)\\n    * linux_user[Postgresql user and group] action create (up to date)\\n     (up to date)\\n  * directory[/var/opt/gitlab/postgresql] action create (up to date)\\n  * file[/var/opt/gitlab/postgresql/.profile] action create (up to date)\\nRecipe: postgresql::sysctl\\n  * gitlab_sysctl[kernel.shmmax] action create\\n    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)\\n    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)\\n    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)\\n    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)\\n     (up to date)\\n  * gitlab_sysctl[kernel.shmall] action create\\n    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)\\n    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)\\n    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)\\n    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)\\n     (up to date)\\n  * gitlab_sysctl[kernel.sem] action create\\n    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)\\n    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)\\n    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)\\n    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)\\n     (up to date)\\nRecipe: postgresql::enable\\n  * directory[/var/opt/gitlab/postgresql] action create (up to date)\\n  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)\\n  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)\\n  * directory[/var/log/gitlab/postgresql] action create (up to date)\\n  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run (skipped due to not_if)\\n  * file[/var/opt/gitlab/postgresql/data/server.crt] action create (up to date)\\n  * file[/var/opt/gitlab/postgresql/data/server.key] action create (up to date)\\n  * postgresql_config[gitlab] action create\\n    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create (up to date)\\n    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create (up to date)\\n    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create (up to date)\\n    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create (up to date)\\n     (up to date)\\nRecipe: postgresql::standalone\\n  * service[postgresql] action nothing (skipped due to action :nothing)\\n  * runit_service[postgresql] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/postgresql] action create (up to date)\\n    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/postgresql/config] action create (up to date)\\n    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)\\n    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)\\n    * link[/opt/gitlab/init/postgresql] action create (up to date)\\n    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/postgresql] action create (up to date)\\n    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)\\n    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)\\n    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)\\n    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)\\n    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)\\n    * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)\\n    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)\\n    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)\\n    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)\\n    * file[/var/log/gitlab/postgresql/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * database_objects[postgresql] action create\\n    * postgresql_user[gitlab] action create\\n      * execute[create gitlab postgresql user] action run (skipped due to not_if)\\n       (up to date)\\n    * postgresql_user[gitlab_replicator] action create\\n      * execute[create gitlab_replicator postgresql user] action run (skipped due to not_if)\\n      * execute[set options for gitlab_replicator postgresql user] action run (skipped due to not_if)\\n       (up to date)\\n    * postgresql_database[gitlabhq_production] action create\\n      * execute[create database gitlabhq_production] action run (skipped due to not_if)\\n       (up to date)\\n    * postgresql_extension[pg_trgm] action enable\\n      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)\\n       (up to date)\\n    * postgresql_extension[btree_gist] action enable\\n      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)\\n       (up to date)\\n     (up to date)\\n  * version_file[Create version file for PostgreSQL] action create\\n    * file[/var/opt/gitlab/postgresql/VERSION] action create (up to date)\\n     (up to date)\\n  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)\\n  * execute[reload postgresql] action nothing (skipped due to action :nothing)\\n  * execute[start postgresql] action nothing (skipped due to action :nothing)\\nRecipe: praefect::disable\\n  * service[praefect] action nothing (skipped due to action :nothing)\\n  * runit_service[praefect] action disable\\n    * ruby_block[disable praefect] action run (skipped due to only_if)\\n     (up to date)\\n  * consul_service[praefect] action delete\\n    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)\\n     (up to date)\\nRecipe: gitlab-kas::enable\\n  * directory[/var/opt/gitlab/gitlab-kas] action create (up to date)\\n  * directory[/opt/gitlab/etc/gitlab-kas] action create (up to date)\\n  * directory[/var/log/gitlab/gitlab-kas] action create (up to date)\\n  * ruby_block[websocket TLS termination] action run (skipped due to only_if)\\n  * version_file[Create version file for Gitlab KAS] action create\\n    * file[/var/opt/gitlab/gitlab-kas/VERSION] action create (up to date)\\n     (up to date)\\n  * file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] action create (up to date)\\n  * file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] action create (up to date)\\n  * file[/var/opt/gitlab/gitlab-kas/redis_password_file] action create (skipped due to only_if)\\n  * file[/var/opt/gitlab/gitlab-kas/redis_sentinels_password_file] action create (skipped due to only_if)\\n  * template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] action create (up to date)\\n  * env_dir[/opt/gitlab/etc/gitlab-kas/env] action create\\n    * directory[/opt/gitlab/etc/gitlab-kas/env] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-kas/env/SSL_CERT_DIR] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-kas/env/OWN_PRIVATE_API_URL] action create (up to date)\\n     (up to date)\\n  * service[gitlab-kas] action nothing (skipped due to action :nothing)\\n  * runit_service[gitlab-kas] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/gitlab-kas] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-kas/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-kas/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-kas/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-kas/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_gitlab-kas] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/gitlab-kas/config] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-kas/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-kas/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for gitlab-kas service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/gitlab-kas/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/gitlab-kas/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/gitlab-kas/control] action create (up to date)\\n    * link[/opt/gitlab/init/gitlab-kas] action create (up to date)\\n    * file[/opt/gitlab/sv/gitlab-kas/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/gitlab-kas] action create (up to date)\\n    * ruby_block[wait for gitlab-kas service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/gitlab-kas/current] action touch (skipped due to only_if)\\n     (up to date)\\nRecipe: gitlab::database_migrations\\n  * ruby_block[check remote PG version] action nothing (skipped due to action :nothing)\\n  * rails_migration[gitlab-rails] action run[2023-08-01T09:34:18+07:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.\\n\\n    * bash_hide_env[migrate gitlab-rails database] action run (skipped due to not_if)\\n     (up to date)\\nRecipe: crond::disable\\n  * service[crond] action nothing (skipped due to action :nothing)\\n  * runit_service[crond] action disable\\n    * ruby_block[disable crond] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: gitlab::puma\\n  * directory[/opt/gitlab/var/puma] action create (up to date)\\n  * directory[/var/log/gitlab/puma] action create (up to date)\\n  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create (up to date)\\n  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create\\n    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)\\n    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create (up to date)\\n     (up to date)\\n  * service[puma] action nothing (skipped due to action :nothing)\\n  * runit_service[puma] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/puma] action create (up to date)\\n    * template[/opt/gitlab/sv/puma/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/puma/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/puma/config] action create (up to date)\\n    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/puma/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/puma/control] action create (up to date)\\n    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)\\n    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)\\n    * link[/opt/gitlab/init/puma] action create (up to date)\\n    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/puma] action create (up to date)\\n    * ruby_block[wait for puma service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/puma/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * consul_service[rails] action delete\\n    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)\\n     (up to date)\\n  * gitlab_sysctl[net.core.somaxconn] action create\\n    * directory[create /etc/sysctl.d for net.core.somaxconn] action create (up to date)\\n    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-net.core.somaxconn.conf net.core.somaxconn] action create (up to date)\\n    * link[/etc/sysctl.d/90-omnibus-gitlab-net.core.somaxconn.conf] action create (up to date)\\n    * execute[load sysctl conf net.core.somaxconn] action nothing (skipped due to action :nothing)\\n     (up to date)\\nRecipe: gitlab::sidekiq\\n  * sidekiq_service[sidekiq] action enable[2023-08-01T09:34:18+07:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.\\n\\n    * directory[/var/log/gitlab/sidekiq] action create (up to date)\\n    * service[sidekiq] action nothing (skipped due to action :nothing)\\n    * runit_service[sidekiq] action enable\\n      * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n      * directory[/opt/gitlab/sv/sidekiq] action create (up to date)\\n      * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)\\n      * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)\\n      * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)\\n      * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)\\n      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)\\n      * link[/var/log/gitlab/sidekiq/config] action create (up to date)\\n      * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)\\n      * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)\\n      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)\\n      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)\\n      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)\\n      * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)\\n      * link[/opt/gitlab/init/sidekiq] action create (up to date)\\n      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)\\n      * directory[/opt/gitlab/service] action create (up to date)\\n      * link[/opt/gitlab/service/sidekiq] action create (up to date)\\n      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)\\n      * file[/var/log/gitlab/sidekiq/current] action touch (skipped due to only_if)\\n       (up to date)\\n     (up to date)\\n  * consul_service[sidekiq] action delete\\n    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)\\n     (up to date)\\nRecipe: gitlab::gitlab-workhorse\\n  * directory[/var/opt/gitlab/gitlab-workhorse] action create (up to date)\\n  * directory[/var/opt/gitlab/gitlab-workhorse/sockets] action create (up to date)\\n  * directory[/var/log/gitlab/gitlab-workhorse] action create (up to date)\\n  * directory[/opt/gitlab/etc/gitlab-workhorse] action create (up to date)\\n  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create\\n    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create (up to date)\\n     (up to date)\\n  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)\\n  * runit_service[gitlab-workhorse] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)\\n    * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)\\n    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)\\n    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/gitlab-workhorse/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * consul_service[workhorse] action delete\\n    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)\\n     (up to date)\\n  * version_file[Create version file for Workhorse] action create\\n    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create (up to date)\\n     (up to date)\\n  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create (up to date)\\nRecipe: gitlab::mailroom_disable\\n  * service[mailroom] action nothing (skipped due to action :nothing)\\n  * runit_service[mailroom] action disable\\n    * ruby_block[disable mailroom] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: gitlab::nginx\\n  * directory[/var/opt/gitlab/nginx] action create (up to date)\\n  * directory[/var/opt/gitlab/nginx/conf] action create (up to date)\\n  * directory[/var/log/gitlab/nginx] action create (up to date)\\n  * link[/var/opt/gitlab/nginx/logs] action create (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action delete (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/gitlab-kas.conf] action delete (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create (up to date)\\n  * consul_service[nginx] action delete\\n    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)\\n     (up to date)\\n  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create (up to date)\\nRecipe: nginx::enable\\n  * service[nginx] action nothing (skipped due to action :nothing)\\n  * runit_service[nginx] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/nginx] action create (up to date)\\n    * template[/opt/gitlab/sv/nginx/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/nginx/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/nginx/config] action create (up to date)\\n    * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/nginx/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/nginx/control] action create (up to date)\\n    * link[/opt/gitlab/init/nginx] action create (up to date)\\n    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/nginx] action create (up to date)\\n    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/nginx/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * execute[reload nginx] action nothing (skipped due to action :nothing)\\nRecipe: gitlab::remote-syslog_disable\\n  * service[remote-syslog] action nothing (skipped due to action :nothing)\\n  * runit_service[remote-syslog] action disable\\n    * ruby_block[disable remote-syslog] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: gitlab::storage-check_disable\\n  * service[storage-check] action nothing (skipped due to action :nothing)\\n  * runit_service[storage-check] action disable\\n    * ruby_block[disable storage-check] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: gitlab-pages::disable\\n  * service[gitlab-pages] action nothing (skipped due to action :nothing)\\n  * runit_service[gitlab-pages] action disable\\n    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: registry::disable\\n  * service[registry] action nothing (skipped due to action :nothing)\\n  * runit_service[registry] action disable\\n    * ruby_block[disable registry] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: mattermost::disable\\n  * service[mattermost] action nothing (skipped due to action :nothing)\\n  * runit_service[mattermost] action disable\\n    * ruby_block[disable mattermost] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: letsencrypt::disable\\n  * crond_job[letsencrypt-renew] action delete\\n    * file[/var/opt/gitlab/crond/letsencrypt-renew] action delete (up to date)\\n     (up to date)\\nRecipe: gitlab::gitlab-healthcheck\\n  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create (up to date)\\nRecipe: monitoring::user\\n  * account[Prometheus user and group] action create\\n    * group[Prometheus user and group] action create (up to date)\\n    * linux_user[Prometheus user and group] action create (up to date)\\n     (up to date)\\nRecipe: monitoring::node-exporter\\n  * directory[/var/log/gitlab/node-exporter] action create (up to date)\\n  * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)\\n  * env_dir[/opt/gitlab/etc/node-exporter/env] action create\\n    * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)\\n    * file[/opt/gitlab/etc/node-exporter/env/SSL_CERT_DIR] action create (up to date)\\n     (up to date)\\n  * directory[/var/opt/gitlab/node-exporter/textfile_collector] action create (up to date)\\n  * service[node-exporter] action nothing (skipped due to action :nothing)\\n  * runit_service[node-exporter] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/node-exporter] action create (up to date)\\n    * template[/opt/gitlab/sv/node-exporter/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/node-exporter/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/node-exporter/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/node-exporter/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_node-exporter] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/node-exporter/config] action create (up to date)\\n    * template[/opt/gitlab/sv/node-exporter/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/node-exporter/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for node-exporter service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/node-exporter/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/node-exporter/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/node-exporter/control] action create (up to date)\\n    * link[/opt/gitlab/init/node-exporter] action create (up to date)\\n    * file[/opt/gitlab/sv/node-exporter/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/node-exporter] action create (up to date)\\n    * ruby_block[wait for node-exporter service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/node-exporter/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * consul_service[node-exporter] action delete\\n    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)\\n     (up to date)\\nRecipe: monitoring::gitlab-exporter\\n  * directory[/var/opt/gitlab/gitlab-exporter] action create (up to date)\\n  * directory[/var/log/gitlab/gitlab-exporter] action create (up to date)\\n  * env_dir[/opt/gitlab/etc/gitlab-exporter/env] action create\\n    * directory[/opt/gitlab/etc/gitlab-exporter/env] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_DIR] action create (up to date)\\n    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_FILE] action create (up to date)\\n     (up to date)\\n  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create (up to date)\\n  * version_file[Create version file for GitLab-Exporter] action create\\n    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create (up to date)\\n     (up to date)\\n  * service[gitlab-exporter] action nothing (skipped due to action :nothing)\\n  * runit_service[gitlab-exporter] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)\\n    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)\\n    * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)\\n    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)\\n    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/gitlab-exporter/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * consul_service[gitlab-exporter] action delete\\n    * file[/var/opt/gitlab/consul/config.d/gitlab-exporter-service.json] action delete (up to date)\\n     (up to date)\\nRecipe: monitoring::redis-exporter\\n  * directory[/var/log/gitlab/redis-exporter] action create (up to date)\\n  * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)\\n  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create\\n    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)\\n    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create (up to date)\\n     (up to date)\\n  * service[redis-exporter] action nothing (skipped due to action :nothing)\\n  * runit_service[redis-exporter] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)\\n    * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/redis-exporter/config] action create (up to date)\\n    * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)\\n    * link[/opt/gitlab/init/redis-exporter] action create (up to date)\\n    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/redis-exporter] action create (up to date)\\n    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/redis-exporter/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * consul_service[redis-exporter] action delete\\n    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)\\n     (up to date)\\nRecipe: monitoring::prometheus\\n  * directory[/var/opt/gitlab/prometheus] action create (up to date)\\n  * directory[/var/opt/gitlab/prometheus/rules] action create (up to date)\\n  * directory[/var/log/gitlab/prometheus] action create (up to date)\\n  * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)\\n  * env_dir[/opt/gitlab/etc/prometheus/env] action create\\n    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)\\n    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create (up to date)\\n     (up to date)\\n  * execute[reload prometheus] action nothing (skipped due to action :nothing)\\n  * file[Prometheus config] action create (up to date)\\n  * service[prometheus] action nothing (skipped due to action :nothing)\\n  * runit_service[prometheus] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/prometheus] action create (up to date)\\n    * template[/opt/gitlab/sv/prometheus/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/prometheus/config] action create (up to date)\\n    * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)\\n    * link[/opt/gitlab/init/prometheus] action create (up to date)\\n    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/prometheus] action create (up to date)\\n    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/prometheus/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * consul_service[prometheus] action delete\\n    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)\\n     (up to date)\\n  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create (up to date)\\n  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create (up to date)\\nRecipe: monitoring::alertmanager\\n  * directory[/var/opt/gitlab/alertmanager] action create (up to date)\\n  * directory[/var/log/gitlab/alertmanager] action create (up to date)\\n  * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)\\n  * env_dir[/opt/gitlab/etc/alertmanager/env] action create\\n    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)\\n    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create (up to date)\\n     (up to date)\\n  * file[Alertmanager config] action create (up to date)\\n  * service[alertmanager] action nothing (skipped due to action :nothing)\\n  * runit_service[alertmanager] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/alertmanager] action create (up to date)\\n    * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/alertmanager/config] action create (up to date)\\n    * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)\\n    * link[/opt/gitlab/init/alertmanager] action create (up to date)\\n    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/alertmanager] action create (up to date)\\n    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/alertmanager/current] action touch (skipped due to only_if)\\n     (up to date)\\nRecipe: monitoring::postgres-exporter\\n  * directory[/var/log/gitlab/postgres-exporter] action create (up to date)\\n  * directory[/var/opt/gitlab/postgres-exporter] action create (up to date)\\n  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create\\n    * directory[/opt/gitlab/etc/postgres-exporter/env] action create (up to date)\\n    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create (up to date)\\n    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create (up to date)\\n     (up to date)\\n  * service[postgres-exporter] action nothing (skipped due to action :nothing)\\n  * runit_service[postgres-exporter] action enable\\n    * ruby_block[restart_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)\\n    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)\\n    * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)\\n    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)\\n    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)\\n    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)\\n    * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)\\n    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)\\n    * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)\\n    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)\\n    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)\\n    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)\\n    * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)\\n    * link[/opt/gitlab/init/postgres-exporter] action create (up to date)\\n    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)\\n    * directory[/opt/gitlab/service] action create (up to date)\\n    * link[/opt/gitlab/service/postgres-exporter] action create (up to date)\\n    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)\\n    * file[/var/log/gitlab/postgres-exporter/current] action touch (skipped due to only_if)\\n     (up to date)\\n  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create (up to date)\\n  * consul_service[postgres-exporter] action delete\\n    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)\\n     (up to date)\\nRecipe: monitoring::grafana_disable\\n  * service[grafana] action nothing (skipped due to action :nothing)\\n  * runit_service[grafana] action disable\\n    * ruby_block[disable grafana] action run (skipped due to only_if)\\n     (up to date)\\nRecipe: gitlab::database_reindexing_disable\\n  * crond_job[database-reindexing] action delete\\n    * file[/var/opt/gitlab/crond/database-reindexing] action delete (up to date)\\n     (up to date)\\n[2023-08-01T09:34:19+07:00] INFO: Cinc Client Run complete in 26.731314938 seconds\\n\\nRunning handlers:\\n[2023-08-01T09:34:19+07:00] INFO: Running report handlers\\nRunning handlers complete\\n[2023-08-01T09:34:19+07:00] INFO: Report handlers complete\\nInfra Phase complete, 3/809 resources updated in 35 seconds\\ngitlab Reconfigured!', 'stderr': \"Top level ::CompositeIO is deprecated, require 'multipart/post' and use `Multipart::Post::CompositeReadIO` instead!\\nTop level ::Parts is deprecated, require 'multipart/post' and use `Multipart::Post::Parts` instead!\\n/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/ohai-17.9.0/lib/ohai/plugins/rpm.rb:25: warning: already initialized constant MACROS_MARKER\\n/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/ohai-17.9.0/lib/ohai/plugins/rpm.rb:25: warning: previous definition of MACROS_MARKER was here\\n/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/ohai-17.9.0/lib/ohai/plugins/rpm.rb:27: warning: already initialized constant DO_NOT_SPLIT\\n/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/ohai-17.9.0/lib/ohai/plugins/rpm.rb:27: warning: previous definition of DO_NOT_SPLIT was here\", 'rc': 0, 'cmd': ['gitlab-ctl', 'reconfigure'], 'start': '2023-08-01 09:33:42.977251', 'end': '2023-08-01 09:34:19.491432', 'delta': '0:00:36.514181', 'msg': '', 'stdout_lines': ['[2023-08-01T09:33:44+07:00] INFO: Started Cinc Zero at chefzero://localhost:1 with repository at /opt/gitlab/embedded (One version per cookbook)', '[2023-08-01T09:33:44+07:00] WARN: Cinc Client 7823 is running, will wait for it to finish and then run.', 'Cinc Client, version 17.10.0', 'Patents: https://www.chef.io/patents', 'Infra Phase starting', '[2023-08-01T09:33:51+07:00] INFO: *** Cinc Client 17.10.0 ***', '[2023-08-01T09:33:51+07:00] INFO: Platform: aarch64-linux', '[2023-08-01T09:33:51+07:00] INFO: Cinc-client pid: 9524', '[2023-08-01T09:33:52+07:00] INFO: Setting the run_list to [\"recipe[gitlab]\"] from CLI options', '[2023-08-01T09:33:52+07:00] INFO: Run List is [recipe[gitlab]]', '[2023-08-01T09:33:52+07:00] INFO: Run List expands to [gitlab]', '[2023-08-01T09:33:52+07:00] INFO: Starting Cinc Client Run for localhost', '[2023-08-01T09:33:52+07:00] INFO: Running start handlers', '[2023-08-01T09:33:52+07:00] INFO: Start handlers complete.', 'Resolving cookbooks for run list: [\"gitlab\"]', '[2023-08-01T09:33:53+07:00] INFO: Loading cookbooks [gitlab@0.0.1, package@0.1.0, logrotate@0.1.0, postgresql@0.1.0, redis@0.1.0, monitoring@0.1.0, registry@0.1.0, mattermost@0.1.0, consul@0.1.0, gitaly@0.1.0, praefect@0.1.0, gitlab-kas@0.1.0, gitlab-pages@0.1.0, letsencrypt@0.1.0, nginx@0.1.0, runit@5.1.7, acme@4.1.6, crond@0.1.0]', 'Synchronizing cookbooks:', '  - gitlab (0.0.1)', '  - package (0.1.0)', '  - logrotate (0.1.0)', '  - postgresql (0.1.0)', '  - redis (0.1.0)', '  - monitoring (0.1.0)', '  - registry (0.1.0)', '  - mattermost (0.1.0)', '  - gitaly (0.1.0)', '  - consul (0.1.0)', '  - praefect (0.1.0)', '  - gitlab-kas (0.1.0)', '  - gitlab-pages (0.1.0)', '  - nginx (0.1.0)', '  - letsencrypt (0.1.0)', '  - runit (5.1.7)', '  - acme (4.1.6)', '  - crond (0.1.0)', 'Installing cookbook gem dependencies:', 'Compiling cookbooks...', 'Loading Cinc Auditor profile files:', 'Loading Cinc Auditor input files:', 'Loading Cinc Auditor waiver files:', '[2023-08-01T09:33:53+07:00] INFO: Generating default secrets', '[2023-08-01T09:33:54+07:00] INFO: Generating gitlab-secrets.json file', 'Recipe: gitlab::default', '  * directory[/etc/gitlab] action create (up to date)', '[2023-08-01T09:33:54+07:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: Selected systemd because /run/systemd/system/ exists', '[2023-08-01T09:33:54+07:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: gitlab-sshd does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: gitlab-pages does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: mailroom does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:54+07:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: node-exporter does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: gitlab-exporter does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: redis-exporter does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: prometheus does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: alertmanager does not have a log_group or default logdir mode defined. Setting to 0700.', '[2023-08-01T09:33:55+07:00] WARN: postgres-exporter does not have a log_group or default logdir mode defined. Setting to 0700.', '  Converging 277 resources', '  * directory[/etc/gitlab] action create (up to date)', '  * directory[Create /var/opt/gitlab] action create (up to date)', '  * directory[Create /var/log/gitlab] action create (up to date)', '  * directory[/opt/gitlab/embedded/etc] action create (up to date)', '  * template[/opt/gitlab/embedded/etc/gitconfig] action create (up to date)', 'Recipe: gitlab::web-server', '  * account[Webserver user and group] action create', '    * group[Webserver user and group] action create (up to date)', '    * linux_user[Webserver user and group] action create (up to date)', '     (up to date)', 'Recipe: gitlab::users', '  * directory[/var/opt/gitlab] action create (up to date)', '  * account[GitLab user and group] action create', '    * group[GitLab user and group] action create (up to date)', '    * linux_user[GitLab user and group] action create (up to date)', '     (up to date)', '  * template[/var/opt/gitlab/.gitconfig] action create (up to date)', '  * directory[/var/opt/gitlab/.bundle] action create (up to date)', 'Recipe: gitlab::gitlab-rails', '  * storage_directory[/var/opt/gitlab/git-data] action create', '    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/git-data/repositories] action create', '    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run (skipped due to not_if)', '     (up to date)', 'Recipe: gitlab::rails_pages_shared_path', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run (skipped due to not_if)', '     (up to date)', 'Recipe: gitlab::gitlab-rails', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create', '    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run (skipped due to not_if)', '     (up to date)', '  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)', '  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create (up to date)', '  * directory[create /opt/gitlab/etc/gitlab-rails] action create (up to date)', '  * directory[create /var/opt/gitlab/gitlab-rails/working] action create (up to date)', '  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create (up to date)', '  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create (up to date)', '  * directory[/var/log/gitlab/gitlab-rails] action create (up to date)', '  * storage_directory[/var/opt/gitlab/backups] action create', '    * ruby_block[directory resource: /var/opt/gitlab/backups] action run (skipped due to not_if)', '     (up to date)', '  * directory[/var/opt/gitlab/gitlab-rails] action create (up to date)', '  * directory[/var/opt/gitlab/gitlab-ci] action create (up to date)', '  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create (skipped due to only_if)', '  * template[/opt/gitlab/etc/gitlab-rails-rc] action create (up to date)', '  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)', '  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)', '  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)', '     (up to date)', '  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)', '     (up to date)', '  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)', '     (up to date)', '  * templatesymlink[Create an override redis.yml and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/redis.yml to /var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)', '     (up to date)', '  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)', '     (up to date)', '  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a redis.trace_chunks.yml and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/redis.trace_chunks.yml] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.trace_chunks.yml] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a redis.rate_limiting.yml and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/redis.rate_limiting.yml] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.rate_limiting.yml] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a redis.sessions.yml and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/redis.sessions.yml] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.sessions.yml] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a redis.repository_cache.yml and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/redis.repository_cache.yml] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.repository_cache.yml] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a redis.cluster_rate_limiting.yml and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cluster_rate_limiting.yml] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cluster_rate_limiting.yml] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete', '    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)', '    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)', '     (up to date)', '  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)', '     (up to date)', '  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)', '     (up to date)', '  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)', '     (up to date)', '  * templatesymlink[Create a gitlab_incoming_email_secret and create a symlink to Rails root] action create (skipped due to only_if)', '  * templatesymlink[Create a gitlab_service_desk_email_secret and create a symlink to Rails root] action create (skipped due to only_if)', '  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create[2023-08-01T09:33:56+07:00] WARN: only_if block for templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] returned a string, did you mean to run a command?', '', '    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)', '     (up to date)', '  * templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] action create[2023-08-01T09:33:56+07:00] WARN: only_if block for templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] returned a string, did you mean to run a command?', '', '    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)', '     (up to date)', '  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)', '  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)', '  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create', '    * directory[/opt/gitlab/etc/gitlab-rails/env] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/PUMA_WORKER_MAX_MEMORY] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_DIR] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_FILE] action create (up to date)', '     (up to date)', '  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create (up to date)', '  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create (up to date)', '  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create (up to date)', '  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete (skipped due to only_if)', '  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create (up to date)', '  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create (up to date)', '  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create (up to date)', '  * version_file[Create version file for Rails] action create', '    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create (up to date)', '     (up to date)', '  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)', '  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)', 'Recipe: gitlab::selinux', '  * execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-7.2.0-ssh-keygen.pp] action run[2023-08-01T09:34:03+07:00] INFO: execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-7.2.0-ssh-keygen.pp] ran successfully', '', '    - execute semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-7.2.0-ssh-keygen.pp', '  * execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-10.5.0-ssh-authorized-keys.pp] action run[2023-08-01T09:34:09+07:00] INFO: execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-10.5.0-ssh-authorized-keys.pp] ran successfully', '', '    - execute semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-10.5.0-ssh-authorized-keys.pp', '  * execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-13.5.0-gitlab-shell.pp] action run[2023-08-01T09:34:15+07:00] INFO: execute[semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-13.5.0-gitlab-shell.pp] ran successfully', '', '    - execute semodule -i /opt/gitlab/embedded/selinux/rhel/7/gitlab-13.5.0-gitlab-shell.pp', '  * bash[Set proper security context on ssh files for selinux] action nothing (skipped due to action :nothing)', 'Recipe: gitlab::add_trusted_certs', '  * directory[/etc/gitlab/trusted-certs] action create (up to date)', '  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)', '  * file[/opt/gitlab/embedded/ssl/certs/README] action create (up to date)', '  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run (skipped due to only_if)', 'Recipe: gitlab::default', '  * service[create a temporary puma service] action nothing (skipped due to action :nothing)', '  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)', '  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)', 'Recipe: package::runit_systemd', '  * directory[/usr/lib/systemd/system] action create (up to date)', '  * template[/usr/lib/systemd/system/gitlab-runsvdir.service] action create (up to date)', '  * file[/etc/systemd/system/default.target.wants/gitlab-runsvdir.service] action delete (up to date)', '  * file[/etc/systemd/system/basic.target.wants/gitlab-runsvdir.service] action delete (up to date)', '  * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)', '  * execute[systemctl enable gitlab-runsvdir] action nothing (skipped due to action :nothing)', '  * execute[systemctl start gitlab-runsvdir] action nothing (skipped due to action :nothing)', 'Recipe: gitlab::gitlab-shell', '  * storage_directory[/var/opt/gitlab/.ssh] action create', '    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run (skipped due to not_if)', '     (up to date)', '  * directory[/var/opt/gitlab/gitlab-shell] action create (up to date)', '  * directory[/var/log/gitlab/gitlab-shell] action create (up to date)', '  * bash[generate gitlab-sshd host keys] action run (skipped due to only_if)', '  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create', '    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)', '    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)', '     (up to date)', '  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create (up to date)', '  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing (up to date)', '  * env_dir[/opt/gitlab/etc/gitlab-sshd/env] action nothing (skipped due to action :nothing)', '  * service[gitlab-sshd] action nothing (skipped due to action :nothing)', '  * runit_service[gitlab-sshd] action disable', '    * ruby_block[disable gitlab-sshd] action run (skipped due to only_if)', '     (up to date)', 'Recipe: package::sysctl', '  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)', 'Recipe: logrotate::folders_and_configs', '  * directory[/var/opt/gitlab/logrotate] action create (up to date)', '  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create (up to date)', '  * directory[/var/log/gitlab/logrotate] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] action create (up to date)', '  * template[/var/opt/gitlab/logrotate/logrotate.d/mailroom] action create (up to date)', 'Recipe: logrotate::enable', '  * service[logrotate] action nothing (skipped due to action :nothing)', '  * runit_service[logrotate] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/logrotate] action create (up to date)', '    * template[/opt/gitlab/sv/logrotate/run] action create (up to date)', '    * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)', '    * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/logrotate/config] action create (up to date)', '    * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)', '    * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)', '    * link[/opt/gitlab/init/logrotate] action create (up to date)', '    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/logrotate] action create (up to date)', '    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/logrotate/current] action touch (skipped due to only_if)', '     (up to date)', 'Recipe: redis::enable', '  * redis_service[redis] action create[2023-08-01T09:34:15+07:00] WARN: redis does not have a log_group or default logdir mode defined. Setting to 0700.', '', '    * account[user and group for redis] action create', '      * group[user and group for redis] action create (up to date)', '      * linux_user[user and group for redis] action create (up to date)', '       (up to date)', '    * group[Socket group] action create (up to date)', '    * directory[/var/opt/gitlab/redis] action create (up to date)', '    * directory[/var/log/gitlab/redis] action create (up to date)', '    * template[/var/opt/gitlab/redis/redis.conf] action create (up to date)', '    * service[redis] action nothing (skipped due to action :nothing)', '    * runit_service[redis] action enable', '      * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '      * directory[/opt/gitlab/sv/redis] action create (up to date)', '      * template[/opt/gitlab/sv/redis/run] action create (up to date)', '      * directory[/opt/gitlab/sv/redis/log] action create (up to date)', '      * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)', '      * template[/opt/gitlab/sv/redis/log/config] action create (up to date)', '      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)', '      * link[/var/log/gitlab/redis/config] action create (up to date)', '      * template[/opt/gitlab/sv/redis/log/run] action create (up to date)', '      * directory[/opt/gitlab/sv/redis/env] action create (up to date)', '      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)', '      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)', '      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)', '      * directory[/opt/gitlab/sv/redis/control] action create (up to date)', '      * link[/opt/gitlab/init/redis] action create (up to date)', '      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)', '      * directory[/opt/gitlab/service] action create (up to date)', '      * link[/opt/gitlab/service/redis] action create (up to date)', '      * ruby_block[wait for redis service socket] action run (skipped due to not_if)', '      * file[/var/log/gitlab/redis/current] action touch (skipped due to only_if)', '       (up to date)', '    * ruby_block[warn pending redis restart] action run (skipped due to only_if)', '     (up to date)', '  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create (up to date)', 'Recipe: gitaly::enable', '  * directory[/var/opt/gitlab/gitaly] action create (up to date)', '  * directory[/var/opt/gitlab/gitaly/run] action create (up to date)', '  * directory[/var/log/gitlab/gitaly] action create (up to date)', '  * directory[/var/opt/gitlab/gitaly/internal_sockets] action delete (up to date)', '  * env_dir[/opt/gitlab/etc/gitaly/env] action create', '    * directory[/opt/gitlab/etc/gitaly/env] action create (up to date)', '    * file[/opt/gitlab/etc/gitaly/env/HOME] action create (up to date)', '    * file[/opt/gitlab/etc/gitaly/env/PATH] action create (up to date)', '    * file[/opt/gitlab/etc/gitaly/env/TZ] action create (up to date)', '    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create (up to date)', '    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create (up to date)', '    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create (up to date)', '    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create (up to date)', '    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create (up to date)', '     (up to date)', '  * template[Create Gitaly config.toml] action create (up to date)', '  * service[gitaly] action nothing (skipped due to action :nothing)', '  * runit_service[gitaly] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/gitaly] action create (up to date)', '    * template[/opt/gitlab/sv/gitaly/run] action create (up to date)', '    * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)', '    * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/gitaly/config] action create (up to date)', '    * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)', '    * link[/opt/gitlab/init/gitaly] action create (up to date)', '    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/gitaly] action create (up to date)', '    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/gitaly/current] action touch (skipped due to only_if)', '     (up to date)', '  * version_file[Create version file for Gitaly] action create', '    * file[/var/opt/gitlab/gitaly/VERSION] action create (up to date)', '     (up to date)', '  * consul_service[gitaly] action delete', '    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)', '     (up to date)', 'Recipe: postgresql::bin', '  * ruby_block[check_postgresql_version] action run (skipped due to not_if)', '  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)', '  * ruby_block[Link postgresql bin files to the correct version] action run (skipped due to only_if)', '  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)', 'Recipe: postgresql::user', '  * account[Postgresql user and group] action create', '    * group[Postgresql user and group] action create (up to date)', '    * linux_user[Postgresql user and group] action create (up to date)', '     (up to date)', '  * directory[/var/opt/gitlab/postgresql] action create (up to date)', '  * file[/var/opt/gitlab/postgresql/.profile] action create (up to date)', 'Recipe: postgresql::sysctl', '  * gitlab_sysctl[kernel.shmmax] action create', '    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)', '    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)', '    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)', '    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)', '     (up to date)', '  * gitlab_sysctl[kernel.shmall] action create', '    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)', '    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)', '    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)', '    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)', '     (up to date)', '  * gitlab_sysctl[kernel.sem] action create', '    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)', '    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)', '    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)', '    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)', '     (up to date)', 'Recipe: postgresql::enable', '  * directory[/var/opt/gitlab/postgresql] action create (up to date)', '  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)', '  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)', '  * directory[/var/log/gitlab/postgresql] action create (up to date)', '  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run (skipped due to not_if)', '  * file[/var/opt/gitlab/postgresql/data/server.crt] action create (up to date)', '  * file[/var/opt/gitlab/postgresql/data/server.key] action create (up to date)', '  * postgresql_config[gitlab] action create', '    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create (up to date)', '    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create (up to date)', '    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create (up to date)', '    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create (up to date)', '     (up to date)', 'Recipe: postgresql::standalone', '  * service[postgresql] action nothing (skipped due to action :nothing)', '  * runit_service[postgresql] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/postgresql] action create (up to date)', '    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)', '    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)', '    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/postgresql/config] action create (up to date)', '    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)', '    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)', '    * link[/opt/gitlab/init/postgresql] action create (up to date)', '    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/postgresql] action create (up to date)', '    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)', '    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)', '    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)', '    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)', '    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)', '    * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)', '    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)', '    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)', '    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)', '    * file[/var/log/gitlab/postgresql/current] action touch (skipped due to only_if)', '     (up to date)', '  * database_objects[postgresql] action create', '    * postgresql_user[gitlab] action create', '      * execute[create gitlab postgresql user] action run (skipped due to not_if)', '       (up to date)', '    * postgresql_user[gitlab_replicator] action create', '      * execute[create gitlab_replicator postgresql user] action run (skipped due to not_if)', '      * execute[set options for gitlab_replicator postgresql user] action run (skipped due to not_if)', '       (up to date)', '    * postgresql_database[gitlabhq_production] action create', '      * execute[create database gitlabhq_production] action run (skipped due to not_if)', '       (up to date)', '    * postgresql_extension[pg_trgm] action enable', '      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)', '       (up to date)', '    * postgresql_extension[btree_gist] action enable', '      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)', '       (up to date)', '     (up to date)', '  * version_file[Create version file for PostgreSQL] action create', '    * file[/var/opt/gitlab/postgresql/VERSION] action create (up to date)', '     (up to date)', '  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)', '  * execute[reload postgresql] action nothing (skipped due to action :nothing)', '  * execute[start postgresql] action nothing (skipped due to action :nothing)', 'Recipe: praefect::disable', '  * service[praefect] action nothing (skipped due to action :nothing)', '  * runit_service[praefect] action disable', '    * ruby_block[disable praefect] action run (skipped due to only_if)', '     (up to date)', '  * consul_service[praefect] action delete', '    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)', '     (up to date)', 'Recipe: gitlab-kas::enable', '  * directory[/var/opt/gitlab/gitlab-kas] action create (up to date)', '  * directory[/opt/gitlab/etc/gitlab-kas] action create (up to date)', '  * directory[/var/log/gitlab/gitlab-kas] action create (up to date)', '  * ruby_block[websocket TLS termination] action run (skipped due to only_if)', '  * version_file[Create version file for Gitlab KAS] action create', '    * file[/var/opt/gitlab/gitlab-kas/VERSION] action create (up to date)', '     (up to date)', '  * file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] action create (up to date)', '  * file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] action create (up to date)', '  * file[/var/opt/gitlab/gitlab-kas/redis_password_file] action create (skipped due to only_if)', '  * file[/var/opt/gitlab/gitlab-kas/redis_sentinels_password_file] action create (skipped due to only_if)', '  * template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] action create (up to date)', '  * env_dir[/opt/gitlab/etc/gitlab-kas/env] action create', '    * directory[/opt/gitlab/etc/gitlab-kas/env] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-kas/env/SSL_CERT_DIR] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-kas/env/OWN_PRIVATE_API_URL] action create (up to date)', '     (up to date)', '  * service[gitlab-kas] action nothing (skipped due to action :nothing)', '  * runit_service[gitlab-kas] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/gitlab-kas] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-kas/run] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-kas/log] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-kas/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-kas/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_gitlab-kas] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/gitlab-kas/config] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-kas/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-kas/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for gitlab-kas service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/gitlab-kas/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/gitlab-kas/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/gitlab-kas/control] action create (up to date)', '    * link[/opt/gitlab/init/gitlab-kas] action create (up to date)', '    * file[/opt/gitlab/sv/gitlab-kas/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/gitlab-kas] action create (up to date)', '    * ruby_block[wait for gitlab-kas service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/gitlab-kas/current] action touch (skipped due to only_if)', '     (up to date)', 'Recipe: gitlab::database_migrations', '  * ruby_block[check remote PG version] action nothing (skipped due to action :nothing)', '  * rails_migration[gitlab-rails] action run[2023-08-01T09:34:18+07:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.', '', '    * bash_hide_env[migrate gitlab-rails database] action run (skipped due to not_if)', '     (up to date)', 'Recipe: crond::disable', '  * service[crond] action nothing (skipped due to action :nothing)', '  * runit_service[crond] action disable', '    * ruby_block[disable crond] action run (skipped due to only_if)', '     (up to date)', 'Recipe: gitlab::puma', '  * directory[/opt/gitlab/var/puma] action create (up to date)', '  * directory[/var/log/gitlab/puma] action create (up to date)', '  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create (up to date)', '  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create', '    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)', '    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create (up to date)', '     (up to date)', '  * service[puma] action nothing (skipped due to action :nothing)', '  * runit_service[puma] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/puma] action create (up to date)', '    * template[/opt/gitlab/sv/puma/run] action create (up to date)', '    * directory[/opt/gitlab/sv/puma/log] action create (up to date)', '    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/puma/config] action create (up to date)', '    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/puma/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/puma/control] action create (up to date)', '    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)', '    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)', '    * link[/opt/gitlab/init/puma] action create (up to date)', '    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/puma] action create (up to date)', '    * ruby_block[wait for puma service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/puma/current] action touch (skipped due to only_if)', '     (up to date)', '  * consul_service[rails] action delete', '    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)', '     (up to date)', '  * gitlab_sysctl[net.core.somaxconn] action create', '    * directory[create /etc/sysctl.d for net.core.somaxconn] action create (up to date)', '    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-net.core.somaxconn.conf net.core.somaxconn] action create (up to date)', '    * link[/etc/sysctl.d/90-omnibus-gitlab-net.core.somaxconn.conf] action create (up to date)', '    * execute[load sysctl conf net.core.somaxconn] action nothing (skipped due to action :nothing)', '     (up to date)', 'Recipe: gitlab::sidekiq', '  * sidekiq_service[sidekiq] action enable[2023-08-01T09:34:18+07:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.', '', '    * directory[/var/log/gitlab/sidekiq] action create (up to date)', '    * service[sidekiq] action nothing (skipped due to action :nothing)', '    * runit_service[sidekiq] action enable', '      * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '      * directory[/opt/gitlab/sv/sidekiq] action create (up to date)', '      * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)', '      * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)', '      * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)', '      * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)', '      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)', '      * link[/var/log/gitlab/sidekiq/config] action create (up to date)', '      * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)', '      * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)', '      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)', '      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)', '      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)', '      * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)', '      * link[/opt/gitlab/init/sidekiq] action create (up to date)', '      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)', '      * directory[/opt/gitlab/service] action create (up to date)', '      * link[/opt/gitlab/service/sidekiq] action create (up to date)', '      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)', '      * file[/var/log/gitlab/sidekiq/current] action touch (skipped due to only_if)', '       (up to date)', '     (up to date)', '  * consul_service[sidekiq] action delete', '    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)', '     (up to date)', 'Recipe: gitlab::gitlab-workhorse', '  * directory[/var/opt/gitlab/gitlab-workhorse] action create (up to date)', '  * directory[/var/opt/gitlab/gitlab-workhorse/sockets] action create (up to date)', '  * directory[/var/log/gitlab/gitlab-workhorse] action create (up to date)', '  * directory[/opt/gitlab/etc/gitlab-workhorse] action create (up to date)', '  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create', '    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create (up to date)', '     (up to date)', '  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)', '  * runit_service[gitlab-workhorse] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)', '    * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)', '    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)', '    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/gitlab-workhorse/current] action touch (skipped due to only_if)', '     (up to date)', '  * consul_service[workhorse] action delete', '    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)', '     (up to date)', '  * version_file[Create version file for Workhorse] action create', '    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create (up to date)', '     (up to date)', '  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create (up to date)', 'Recipe: gitlab::mailroom_disable', '  * service[mailroom] action nothing (skipped due to action :nothing)', '  * runit_service[mailroom] action disable', '    * ruby_block[disable mailroom] action run (skipped due to only_if)', '     (up to date)', 'Recipe: gitlab::nginx', '  * directory[/var/opt/gitlab/nginx] action create (up to date)', '  * directory[/var/opt/gitlab/nginx/conf] action create (up to date)', '  * directory[/var/log/gitlab/nginx] action create (up to date)', '  * link[/var/opt/gitlab/nginx/logs] action create (up to date)', '  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create (up to date)', '  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)', '  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create (up to date)', '  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)', '  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action delete (up to date)', '  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)', '  * template[/var/opt/gitlab/nginx/conf/gitlab-kas.conf] action delete (up to date)', '  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create (up to date)', '  * consul_service[nginx] action delete', '    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)', '     (up to date)', '  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create (up to date)', 'Recipe: nginx::enable', '  * service[nginx] action nothing (skipped due to action :nothing)', '  * runit_service[nginx] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/nginx] action create (up to date)', '    * template[/opt/gitlab/sv/nginx/run] action create (up to date)', '    * directory[/opt/gitlab/sv/nginx/log] action create (up to date)', '    * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/nginx/config] action create (up to date)', '    * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/nginx/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/nginx/control] action create (up to date)', '    * link[/opt/gitlab/init/nginx] action create (up to date)', '    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/nginx] action create (up to date)', '    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/nginx/current] action touch (skipped due to only_if)', '     (up to date)', '  * execute[reload nginx] action nothing (skipped due to action :nothing)', 'Recipe: gitlab::remote-syslog_disable', '  * service[remote-syslog] action nothing (skipped due to action :nothing)', '  * runit_service[remote-syslog] action disable', '    * ruby_block[disable remote-syslog] action run (skipped due to only_if)', '     (up to date)', 'Recipe: gitlab::storage-check_disable', '  * service[storage-check] action nothing (skipped due to action :nothing)', '  * runit_service[storage-check] action disable', '    * ruby_block[disable storage-check] action run (skipped due to only_if)', '     (up to date)', 'Recipe: gitlab-pages::disable', '  * service[gitlab-pages] action nothing (skipped due to action :nothing)', '  * runit_service[gitlab-pages] action disable', '    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)', '     (up to date)', 'Recipe: registry::disable', '  * service[registry] action nothing (skipped due to action :nothing)', '  * runit_service[registry] action disable', '    * ruby_block[disable registry] action run (skipped due to only_if)', '     (up to date)', 'Recipe: mattermost::disable', '  * service[mattermost] action nothing (skipped due to action :nothing)', '  * runit_service[mattermost] action disable', '    * ruby_block[disable mattermost] action run (skipped due to only_if)', '     (up to date)', 'Recipe: letsencrypt::disable', '  * crond_job[letsencrypt-renew] action delete', '    * file[/var/opt/gitlab/crond/letsencrypt-renew] action delete (up to date)', '     (up to date)', 'Recipe: gitlab::gitlab-healthcheck', '  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create (up to date)', 'Recipe: monitoring::user', '  * account[Prometheus user and group] action create', '    * group[Prometheus user and group] action create (up to date)', '    * linux_user[Prometheus user and group] action create (up to date)', '     (up to date)', 'Recipe: monitoring::node-exporter', '  * directory[/var/log/gitlab/node-exporter] action create (up to date)', '  * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)', '  * env_dir[/opt/gitlab/etc/node-exporter/env] action create', '    * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)', '    * file[/opt/gitlab/etc/node-exporter/env/SSL_CERT_DIR] action create (up to date)', '     (up to date)', '  * directory[/var/opt/gitlab/node-exporter/textfile_collector] action create (up to date)', '  * service[node-exporter] action nothing (skipped due to action :nothing)', '  * runit_service[node-exporter] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/node-exporter] action create (up to date)', '    * template[/opt/gitlab/sv/node-exporter/run] action create (up to date)', '    * directory[/opt/gitlab/sv/node-exporter/log] action create (up to date)', '    * directory[/opt/gitlab/sv/node-exporter/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/node-exporter/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_node-exporter] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/node-exporter/config] action create (up to date)', '    * template[/opt/gitlab/sv/node-exporter/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/node-exporter/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for node-exporter service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/node-exporter/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/node-exporter/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/node-exporter/control] action create (up to date)', '    * link[/opt/gitlab/init/node-exporter] action create (up to date)', '    * file[/opt/gitlab/sv/node-exporter/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/node-exporter] action create (up to date)', '    * ruby_block[wait for node-exporter service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/node-exporter/current] action touch (skipped due to only_if)', '     (up to date)', '  * consul_service[node-exporter] action delete', '    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)', '     (up to date)', 'Recipe: monitoring::gitlab-exporter', '  * directory[/var/opt/gitlab/gitlab-exporter] action create (up to date)', '  * directory[/var/log/gitlab/gitlab-exporter] action create (up to date)', '  * env_dir[/opt/gitlab/etc/gitlab-exporter/env] action create', '    * directory[/opt/gitlab/etc/gitlab-exporter/env] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_DIR] action create (up to date)', '    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_FILE] action create (up to date)', '     (up to date)', '  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create (up to date)', '  * version_file[Create version file for GitLab-Exporter] action create', '    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create (up to date)', '     (up to date)', '  * service[gitlab-exporter] action nothing (skipped due to action :nothing)', '  * runit_service[gitlab-exporter] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)', '    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)', '    * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)', '    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)', '    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/gitlab-exporter/current] action touch (skipped due to only_if)', '     (up to date)', '  * consul_service[gitlab-exporter] action delete', '    * file[/var/opt/gitlab/consul/config.d/gitlab-exporter-service.json] action delete (up to date)', '     (up to date)', 'Recipe: monitoring::redis-exporter', '  * directory[/var/log/gitlab/redis-exporter] action create (up to date)', '  * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)', '  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create', '    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)', '    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create (up to date)', '     (up to date)', '  * service[redis-exporter] action nothing (skipped due to action :nothing)', '  * runit_service[redis-exporter] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)', '    * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)', '    * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)', '    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/redis-exporter/config] action create (up to date)', '    * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)', '    * link[/opt/gitlab/init/redis-exporter] action create (up to date)', '    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/redis-exporter] action create (up to date)', '    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/redis-exporter/current] action touch (skipped due to only_if)', '     (up to date)', '  * consul_service[redis-exporter] action delete', '    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)', '     (up to date)', 'Recipe: monitoring::prometheus', '  * directory[/var/opt/gitlab/prometheus] action create (up to date)', '  * directory[/var/opt/gitlab/prometheus/rules] action create (up to date)', '  * directory[/var/log/gitlab/prometheus] action create (up to date)', '  * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)', '  * env_dir[/opt/gitlab/etc/prometheus/env] action create', '    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)', '    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create (up to date)', '     (up to date)', '  * execute[reload prometheus] action nothing (skipped due to action :nothing)', '  * file[Prometheus config] action create (up to date)', '  * service[prometheus] action nothing (skipped due to action :nothing)', '  * runit_service[prometheus] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/prometheus] action create (up to date)', '    * template[/opt/gitlab/sv/prometheus/run] action create (up to date)', '    * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)', '    * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/prometheus/config] action create (up to date)', '    * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)', '    * link[/opt/gitlab/init/prometheus] action create (up to date)', '    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/prometheus] action create (up to date)', '    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/prometheus/current] action touch (skipped due to only_if)', '     (up to date)', '  * consul_service[prometheus] action delete', '    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)', '     (up to date)', '  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create (up to date)', '  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create (up to date)', 'Recipe: monitoring::alertmanager', '  * directory[/var/opt/gitlab/alertmanager] action create (up to date)', '  * directory[/var/log/gitlab/alertmanager] action create (up to date)', '  * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)', '  * env_dir[/opt/gitlab/etc/alertmanager/env] action create', '    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)', '    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create (up to date)', '     (up to date)', '  * file[Alertmanager config] action create (up to date)', '  * service[alertmanager] action nothing (skipped due to action :nothing)', '  * runit_service[alertmanager] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/alertmanager] action create (up to date)', '    * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)', '    * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)', '    * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/alertmanager/config] action create (up to date)', '    * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)', '    * link[/opt/gitlab/init/alertmanager] action create (up to date)', '    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/alertmanager] action create (up to date)', '    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/alertmanager/current] action touch (skipped due to only_if)', '     (up to date)', 'Recipe: monitoring::postgres-exporter', '  * directory[/var/log/gitlab/postgres-exporter] action create (up to date)', '  * directory[/var/opt/gitlab/postgres-exporter] action create (up to date)', '  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create', '    * directory[/opt/gitlab/etc/postgres-exporter/env] action create (up to date)', '    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create (up to date)', '    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create (up to date)', '     (up to date)', '  * service[postgres-exporter] action nothing (skipped due to action :nothing)', '  * runit_service[postgres-exporter] action enable', '    * ruby_block[restart_service] action nothing (skipped due to action :nothing)', '    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)', '    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)', '    * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)', '    * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)', '    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)', '    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)', '    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)', '    * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)', '    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)', '    * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)', '    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)', '    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)', '    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)', '    * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)', '    * link[/opt/gitlab/init/postgres-exporter] action create (up to date)', '    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)', '    * directory[/opt/gitlab/service] action create (up to date)', '    * link[/opt/gitlab/service/postgres-exporter] action create (up to date)', '    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)', '    * file[/var/log/gitlab/postgres-exporter/current] action touch (skipped due to only_if)', '     (up to date)', '  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create (up to date)', '  * consul_service[postgres-exporter] action delete', '    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)', '     (up to date)', 'Recipe: monitoring::grafana_disable', '  * service[grafana] action nothing (skipped due to action :nothing)', '  * runit_service[grafana] action disable', '    * ruby_block[disable grafana] action run (skipped due to only_if)', '     (up to date)', 'Recipe: gitlab::database_reindexing_disable', '  * crond_job[database-reindexing] action delete', '    * file[/var/opt/gitlab/crond/database-reindexing] action delete (up to date)', '     (up to date)', '[2023-08-01T09:34:19+07:00] INFO: Cinc Client Run complete in 26.731314938 seconds', '', 'Running handlers:', '[2023-08-01T09:34:19+07:00] INFO: Running report handlers', 'Running handlers complete', '[2023-08-01T09:34:19+07:00] INFO: Report handlers complete', 'Infra Phase complete, 3/809 resources updated in 35 seconds', 'gitlab Reconfigured!'], 'stderr_lines': [\"Top level ::CompositeIO is deprecated, require 'multipart/post' and use `Multipart::Post::CompositeReadIO` instead!\", \"Top level ::Parts is deprecated, require 'multipart/post' and use `Multipart::Post::Parts` instead!\", '/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/ohai-17.9.0/lib/ohai/plugins/rpm.rb:25: warning: already initialized constant MACROS_MARKER', '/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/ohai-17.9.0/lib/ohai/plugins/rpm.rb:25: warning: previous definition of MACROS_MARKER was here', '/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/ohai-17.9.0/lib/ohai/plugins/rpm.rb:27: warning: already initialized constant DO_NOT_SPLIT', '/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/ohai-17.9.0/lib/ohai/plugins/rpm.rb:27: warning: previous definition of DO_NOT_SPLIT was here'], 'failed': False}"
}
2023-08-01 09:34:19,721 p=3685 u=ansible n=ansible | TASK [install_gitlab : debug] ***************************************************************************************************************
2023-08-01 09:34:19,734 p=3685 u=ansible n=ansible | ok: [centos3] => {
    "gitlab_service.status.ActiveState": "VARIABLE IS NOT DEFINED!"
}
2023-08-01 09:34:19,738 p=3685 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on Debian] *******************************************************************************
2023-08-01 09:34:19,747 p=3685 u=ansible n=ansible | skipping: [centos3]
2023-08-01 09:34:19,759 p=3685 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 09:34:19,760 p=3685 u=ansible n=ansible | centos3                    : ok=15   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-08-01 09:38:25,224 p=4127 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 09:38:25,245 p=4127 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 09:38:26,791 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:26,798 p=4127 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] *******************************************************************************
2023-08-01 09:38:26,812 p=4127 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/centos.yml for centos3
2023-08-01 09:38:26,816 p=4127 u=ansible n=ansible | TASK [install_gitlab : Update yum] **********************************************************************************************************
2023-08-01 09:38:28,594 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:28,597 p=4127 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] ****************************************************************************************
2023-08-01 09:38:29,348 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:29,352 p=4127 u=ansible n=ansible | TASK [install_gitlab : Enable and start sshd service] ***************************************************************************************
2023-08-01 09:38:29,826 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:29,829 p=4127 u=ansible n=ansible | TASK [install_gitlab : Add service http to firewalld] ***************************************************************************************
2023-08-01 09:38:30,393 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:30,397 p=4127 u=ansible n=ansible | TASK [install_gitlab : Add service https to firewalld] **************************************************************************************
2023-08-01 09:38:30,962 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:30,965 p=4127 u=ansible n=ansible | TASK [install_gitlab : Reload firewalld service] ********************************************************************************************
2023-08-01 09:38:31,298 p=4127 u=ansible n=ansible | changed: [centos3]
2023-08-01 09:38:31,301 p=4127 u=ansible n=ansible | TASK [install_gitlab : Install postfix] *****************************************************************************************************
2023-08-01 09:38:31,946 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:31,949 p=4127 u=ansible n=ansible | TASK [install_gitlab : Enable and start postfix service] ************************************************************************************
2023-08-01 09:38:32,268 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:32,271 p=4127 u=ansible n=ansible | TASK [install_gitlab : Add GitLab repository and install the package] ***********************************************************************
2023-08-01 09:38:43,590 p=4127 u=ansible n=ansible | changed: [centos3]
2023-08-01 09:38:43,593 p=4127 u=ansible n=ansible | TASK [install_gitlab : Install GitLab CE] ***************************************************************************************************
2023-08-01 09:38:44,262 p=4127 u=ansible n=ansible | ok: [centos3]
2023-08-01 09:38:44,266 p=4127 u=ansible n=ansible | TASK [install_gitlab : Reconfigure gitlab-ctl] **********************************************************************************************
2023-08-01 09:39:13,926 p=4127 u=ansible n=ansible | changed: [centos3]
2023-08-01 09:39:13,930 p=4127 u=ansible n=ansible | TASK [install_gitlab : Check status gitlab-ctl] *********************************************************************************************
2023-08-01 09:39:14,600 p=4127 u=ansible n=ansible | changed: [centos3]
2023-08-01 09:39:14,603 p=4127 u=ansible n=ansible | TASK [install_gitlab : debug] ***************************************************************************************************************
2023-08-01 09:39:14,612 p=4127 u=ansible n=ansible | ok: [centos3] => {
    "msg": "GitLab: {'changed': True, 'stdout': 'run: alertmanager: (pid 5125) 463s; run: log: (pid 5124) 463s\\nrun: gitaly: (pid 5108) 463s; run: log: (pid 5107) 463s\\nrun: gitlab-exporter: (pid 5129) 463s; run: log: (pid 5128) 463s\\nrun: gitlab-kas: (pid 5118) 463s; run: log: (pid 5117) 463s\\nrun: gitlab-workhorse: (pid 5143) 463s; run: log: (pid 5121) 463s\\nrun: logrotate: (pid 5132) 463s; run: log: (pid 5109) 463s\\nrun: nginx: (pid 5134) 463s; run: log: (pid 5114) 463s\\nrun: node-exporter: (pid 5102) 463s; run: log: (pid 5099) 463s\\nrun: postgres-exporter: (pid 5123) 463s; run: log: (pid 5122) 463s\\nrun: postgresql: (pid 5120) 463s; run: log: (pid 5119) 463s\\nrun: prometheus: (pid 5127) 463s; run: log: (pid 5126) 463s\\nrun: puma: (pid 5139) 463s; run: log: (pid 5116) 463s\\nrun: redis: (pid 5106) 463s; run: log: (pid 5105) 463s\\nrun: redis-exporter: (pid 5131) 463s; run: log: (pid 5130) 463s\\nrun: sidekiq: (pid 5138) 463s; run: log: (pid 5115) 463s', 'stderr': '', 'rc': 0, 'cmd': ['gitlab-ctl', 'status'], 'start': '2023-08-01 09:39:14.231550', 'end': '2023-08-01 09:39:14.567397', 'delta': '0:00:00.335847', 'msg': '', 'stdout_lines': ['run: alertmanager: (pid 5125) 463s; run: log: (pid 5124) 463s', 'run: gitaly: (pid 5108) 463s; run: log: (pid 5107) 463s', 'run: gitlab-exporter: (pid 5129) 463s; run: log: (pid 5128) 463s', 'run: gitlab-kas: (pid 5118) 463s; run: log: (pid 5117) 463s', 'run: gitlab-workhorse: (pid 5143) 463s; run: log: (pid 5121) 463s', 'run: logrotate: (pid 5132) 463s; run: log: (pid 5109) 463s', 'run: nginx: (pid 5134) 463s; run: log: (pid 5114) 463s', 'run: node-exporter: (pid 5102) 463s; run: log: (pid 5099) 463s', 'run: postgres-exporter: (pid 5123) 463s; run: log: (pid 5122) 463s', 'run: postgresql: (pid 5120) 463s; run: log: (pid 5119) 463s', 'run: prometheus: (pid 5127) 463s; run: log: (pid 5126) 463s', 'run: puma: (pid 5139) 463s; run: log: (pid 5116) 463s', 'run: redis: (pid 5106) 463s; run: log: (pid 5105) 463s', 'run: redis-exporter: (pid 5131) 463s; run: log: (pid 5130) 463s', 'run: sidekiq: (pid 5138) 463s; run: log: (pid 5115) 463s'], 'stderr_lines': [], 'failed': False}"
}
2023-08-01 09:39:14,616 p=4127 u=ansible n=ansible | TASK [install_gitlab : debug] ***************************************************************************************************************
2023-08-01 09:39:14,626 p=4127 u=ansible n=ansible | ok: [centos3] => {
    "gitlab_ctl.status.ActiveState": "VARIABLE IS NOT DEFINED!"
}
2023-08-01 09:39:14,630 p=4127 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on Debian] *******************************************************************************
2023-08-01 09:39:14,642 p=4127 u=ansible n=ansible | skipping: [centos3]
2023-08-01 09:39:14,659 p=4127 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 09:39:14,659 p=4127 u=ansible n=ansible | centos3                    : ok=16   changed=4    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2023-08-01 09:43:40,568 p=4598 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 09:43:40,590 p=4598 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 09:43:41,740 p=4598 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:43:41,747 p=4598 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] *******************************************************************************
2023-08-01 09:43:41,756 p=4598 u=ansible n=ansible | skipping: [ubuntu3]
2023-08-01 09:43:41,759 p=4598 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on Debian] *******************************************************************************
2023-08-01 09:43:41,771 p=4598 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/ubuntu.yml for ubuntu3
2023-08-01 09:43:41,774 p=4598 u=ansible n=ansible | TASK [install_gitlab : Update apt] **********************************************************************************************************
2023-08-01 09:44:45,737 p=4598 u=ansible n=ansible | changed: [ubuntu3]
2023-08-01 09:44:45,741 p=4598 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] ****************************************************************************************
2023-08-01 09:44:46,283 p=4598 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:44:46,286 p=4598 u=ansible n=ansible | TASK [install_gitlab : Install postfix] *****************************************************************************************************
2023-08-01 09:44:46,558 p=4598 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"ansible_facts": {"pkg_mgr": "apt"}, "changed": false, "msg": ["Could not detect which major revision of yum is in use, which is required to determine module backend.", "You should manually specify use_backend to tell the module whether to use the yum (yum3) or dnf (yum4) backend})"]}
2023-08-01 09:44:46,559 p=4598 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 09:44:46,559 p=4598 u=ansible n=ansible | ubuntu3                    : ok=4    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-08-01 09:46:59,173 p=4748 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 09:46:59,194 p=4748 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 09:47:00,536 p=4748 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:47:00,545 p=4748 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] *******************************************************************************
2023-08-01 09:47:00,555 p=4748 u=ansible n=ansible | skipping: [ubuntu3]
2023-08-01 09:47:00,559 p=4748 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on Debian] *******************************************************************************
2023-08-01 09:47:00,575 p=4748 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/ubuntu.yml for ubuntu3
2023-08-01 09:47:00,578 p=4748 u=ansible n=ansible | TASK [install_gitlab : Update apt] **********************************************************************************************************
2023-08-01 09:47:01,367 p=4748 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:47:01,370 p=4748 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] ****************************************************************************************
2023-08-01 09:47:01,994 p=4748 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:47:01,997 p=4748 u=ansible n=ansible | TASK [install_gitlab : Install postfix] *****************************************************************************************************
2023-08-01 09:47:02,298 p=4748 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"ansible_facts": {"pkg_mgr": "apt"}, "changed": false, "msg": ["Could not detect which major revision of yum is in use, which is required to determine module backend.", "You should manually specify use_backend to tell the module whether to use the yum (yum3) or dnf (yum4) backend})"]}
2023-08-01 09:47:02,299 p=4748 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 09:47:02,299 p=4748 u=ansible n=ansible | ubuntu3                    : ok=4    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-08-01 09:47:12,361 p=4878 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 09:47:12,382 p=4878 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 09:47:13,264 p=4878 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:47:13,272 p=4878 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] *******************************************************************************
2023-08-01 09:47:13,280 p=4878 u=ansible n=ansible | skipping: [ubuntu3]
2023-08-01 09:47:13,283 p=4878 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on Debian] *******************************************************************************
2023-08-01 09:47:13,296 p=4878 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/ubuntu.yml for ubuntu3
2023-08-01 09:47:13,300 p=4878 u=ansible n=ansible | TASK [install_gitlab : Update apt] **********************************************************************************************************
2023-08-01 09:47:14,054 p=4878 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:47:14,057 p=4878 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] ****************************************************************************************
2023-08-01 09:47:14,575 p=4878 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:47:14,578 p=4878 u=ansible n=ansible | TASK [install_gitlab : Install postfix] *****************************************************************************************************
2023-08-01 09:47:33,978 p=4878 u=ansible n=ansible | changed: [ubuntu3]
2023-08-01 09:47:33,982 p=4878 u=ansible n=ansible | TASK [install_gitlab : Enable and start postfix service] ************************************************************************************
2023-08-01 09:47:34,342 p=4878 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:47:34,346 p=4878 u=ansible n=ansible | TASK [install_gitlab : Add GitLab repository and install the package] ***********************************************************************
2023-08-01 09:47:35,031 p=4878 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": true, "cmd": "curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash", "delta": "0:00:00.472536", "end": "2023-08-01 02:47:35.029400", "msg": "non-zero return code", "rc": 1, "start": "2023-08-01 02:47:34.556864", "stderr": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r 19  6968   19  1360    0     0   3008      0  0:00:02 --:--:--  0:00:02  3008\r100  6968  100  6968    0     0  15260      0 --:--:-- --:--:-- --:--:-- 15247\nmain: line 163: /etc/yum.repos.d/gitlab_gitlab-ce.repo: No such file or directory", "stderr_lines": ["  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0", " 19  6968   19  1360    0     0   3008      0  0:00:02 --:--:--  0:00:02  3008", "100  6968  100  6968    0     0  15260      0 --:--:-- --:--:-- --:--:-- 15247", "main: line 163: /etc/yum.repos.d/gitlab_gitlab-ce.repo: No such file or directory"], "stdout": "Detected operating system as ubuntu/22.\nChecking for curl...\nDetected curl...\nDownloading repository file: https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/config_file.repo?os=ubuntu&dist=22&source=script\n\nUnable to run: \n    curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/config_file.repo?os=ubuntu&dist=22&source=script\n\nDouble check your curl installation and try again.", "stdout_lines": ["Detected operating system as ubuntu/22.", "Checking for curl...", "Detected curl...", "Downloading repository file: https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/config_file.repo?os=ubuntu&dist=22&source=script", "", "Unable to run: ", "    curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/config_file.repo?os=ubuntu&dist=22&source=script", "", "Double check your curl installation and try again."]}
2023-08-01 09:47:35,031 p=4878 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 09:47:35,031 p=4878 u=ansible n=ansible | ubuntu3                    : ok=6    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-08-01 09:48:28,774 p=5100 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 09:48:28,794 p=5100 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 09:48:29,671 p=5100 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:48:29,679 p=5100 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] *******************************************************************************
2023-08-01 09:48:29,686 p=5100 u=ansible n=ansible | skipping: [ubuntu3]
2023-08-01 09:48:29,690 p=5100 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on Debian] *******************************************************************************
2023-08-01 09:48:29,701 p=5100 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/ubuntu.yml for ubuntu3
2023-08-01 09:48:29,705 p=5100 u=ansible n=ansible | TASK [install_gitlab : Update apt] **********************************************************************************************************
2023-08-01 09:48:30,423 p=5100 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:48:30,426 p=5100 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] ****************************************************************************************
2023-08-01 09:48:30,995 p=5100 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:48:30,998 p=5100 u=ansible n=ansible | TASK [install_gitlab : Install postfix] *****************************************************************************************************
2023-08-01 09:48:31,535 p=5100 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:48:31,539 p=5100 u=ansible n=ansible | TASK [install_gitlab : Enable and start postfix service] ************************************************************************************
2023-08-01 09:48:31,921 p=5100 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:48:31,924 p=5100 u=ansible n=ansible | TASK [install_gitlab : Add GitLab repository and install the package] ***********************************************************************
2023-08-01 09:48:43,493 p=5100 u=ansible n=ansible | changed: [ubuntu3]
2023-08-01 09:48:43,497 p=5100 u=ansible n=ansible | TASK [install_gitlab : Install GitLab CE] ***************************************************************************************************
2023-08-01 09:48:44,048 p=5100 u=ansible n=ansible | fatal: [ubuntu3]: FAILED! => {"changed": false, "msg": "No package matching 'gitlab-ce' is available"}
2023-08-01 09:48:44,051 p=5100 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 09:48:44,051 p=5100 u=ansible n=ansible | ubuntu3                    : ok=7    changed=1    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2023-08-01 09:51:00,191 p=5318 u=ansible n=ansible | PLAY [GitLab playbook] **********************************************************************************************************************
2023-08-01 09:51:00,211 p=5318 u=ansible n=ansible | TASK [Gathering Facts] **********************************************************************************************************************
2023-08-01 09:51:01,717 p=5318 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:51:01,725 p=5318 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on RedHat] *******************************************************************************
2023-08-01 09:51:01,732 p=5318 u=ansible n=ansible | skipping: [ubuntu3]
2023-08-01 09:51:01,735 p=5318 u=ansible n=ansible | TASK [install_gitlab : Main task install SonarQube on Debian] *******************************************************************************
2023-08-01 09:51:01,747 p=5318 u=ansible n=ansible | included: /home/ansible/labs/roles/install_gitlab/tasks/distro/ubuntu.yml for ubuntu3
2023-08-01 09:51:01,750 p=5318 u=ansible n=ansible | TASK [install_gitlab : Update apt] **********************************************************************************************************
2023-08-01 09:51:02,583 p=5318 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:51:02,587 p=5318 u=ansible n=ansible | TASK [install_gitlab : Install package dependencies] ****************************************************************************************
2023-08-01 09:51:03,127 p=5318 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:51:03,130 p=5318 u=ansible n=ansible | TASK [install_gitlab : Install postfix] *****************************************************************************************************
2023-08-01 09:51:03,733 p=5318 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:51:03,737 p=5318 u=ansible n=ansible | TASK [install_gitlab : Enable and start postfix service] ************************************************************************************
2023-08-01 09:51:04,162 p=5318 u=ansible n=ansible | ok: [ubuntu3]
2023-08-01 09:51:04,166 p=5318 u=ansible n=ansible | TASK [install_gitlab : Add GitLab repository and install the package] ***********************************************************************
2023-08-01 09:51:12,815 p=5318 u=ansible n=ansible | changed: [ubuntu3]
2023-08-01 09:51:12,819 p=5318 u=ansible n=ansible | TASK [install_gitlab : Install GitLab CE] ***************************************************************************************************
2023-08-01 10:11:56,482 p=5318 u=ansible n=ansible | changed: [ubuntu3]
2023-08-01 10:11:56,488 p=5318 u=ansible n=ansible | TASK [install_gitlab : Reconfigure gitlab-ctl] **********************************************************************************************
2023-08-01 10:14:26,128 p=5318 u=ansible n=ansible | changed: [ubuntu3]
2023-08-01 10:14:26,141 p=5318 u=ansible n=ansible | PLAY RECAP **********************************************************************************************************************************
2023-08-01 10:14:26,141 p=5318 u=ansible n=ansible | ubuntu3                    : ok=9    changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
